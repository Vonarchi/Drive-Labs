name: Comprehensive CI
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
permissions:
  contents: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      
      - name: Enable Corepack
        run: corepack enable
        
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Lint code
        run: pnpm lint
        
      - name: Type check
        run: pnpm build
        
      - name: Test
        run: pnpm test -- --reporter=junit
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results.xml

  supabase_check:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Supabase CLI
        run: |
          wget -O supabase.deb https://github.com/supabase/cli/releases/download/v1.176.2/supabase_1.176.2_linux_amd64.deb
          sudo dpkg -i supabase.deb
          
      - name: Check migration files
        run: |
          echo "Checking migration files..."
          find supabase/migrations -name "*.sql" -type f | head -10
          echo "Migration files found: $(find supabase/migrations -name "*.sql" -type f | wc -l)"
          
      - name: Validate migration syntax
        run: |
          for file in supabase/migrations/*.sql; do
            if [ -f "$file" ]; then
              echo "Validating $file"
              # Basic SQL syntax check
              if ! grep -q "CREATE\|ALTER\|DROP\|INSERT\|UPDATE\|DELETE" "$file"; then
                echo "Warning: $file may not contain valid SQL statements"
              fi
            fi
          done

  security_scan:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      
      - name: Run security audit
        run: |
          if command -v pnpm &> /dev/null; then
            pnpm audit --audit-level moderate
          else
            npm audit --audit-level moderate
          fi
          
      - name: Check for secrets
        run: |
          echo "Checking for potential secrets in code..."
          if grep -r "password\|secret\|key\|token" --include="*.ts" --include="*.js" --include="*.json" src/ | grep -v "process.env"; then
            echo "Warning: Potential hardcoded secrets found"
            exit 1
          fi
