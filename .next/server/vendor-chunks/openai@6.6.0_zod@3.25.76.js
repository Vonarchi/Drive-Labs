"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/openai@6.6.0_zod@3.25.76";
exports.ids = ["vendor-chunks/openai@6.6.0_zod@3.25.76"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/_vendor/partial-json-parser/parser.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/_vendor/partial-json-parser/parser.mjs ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MalformedJSON: () => (/* binding */ MalformedJSON),\n/* harmony export */   PartialJSON: () => (/* binding */ PartialJSON),\n/* harmony export */   partialParse: () => (/* binding */ partialParse)\n/* harmony export */ });\nconst STR = 1;\nconst NUM = 2;\nconst ARR = 4;\nconst OBJ = 8;\nconst NULL = 16;\nconst BOOL = 32;\nconst NAN = 64;\nconst INFINITY = 128;\nconst MINUS_INFINITY = 256;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */ function parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== \"string\") {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow)=>{\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg)=>{\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg)=>{\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = ()=>{\n        skipBlank();\n        if (index >= length) markPartialJSON(\"Unexpected end of input\");\n        if (jsonString[index] === '\"') return parseStr();\n        if (jsonString[index] === \"{\") return parseObj();\n        if (jsonString[index] === \"[\") return parseArr();\n        if (jsonString.substring(index, index + 4) === \"null\" || Allow.NULL & allow && length - index < 4 && \"null\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === \"true\" || Allow.BOOL & allow && length - index < 4 && \"true\".startsWith(jsonString.substring(index))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === \"false\" || Allow.BOOL & allow && length - index < 5 && \"false\".startsWith(jsonString.substring(index))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === \"Infinity\" || Allow.INFINITY & allow && length - index < 8 && \"Infinity\".startsWith(jsonString.substring(index))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === \"-Infinity\" || Allow.MINUS_INFINITY & allow && 1 < length - index && length - index < 9 && \"-Infinity\".startsWith(jsonString.substring(index))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === \"NaN\" || Allow.NAN & allow && length - index < 3 && \"NaN\".startsWith(jsonString.substring(index))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = ()=>{\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while(index < length && (jsonString[index] !== '\"' || escape && jsonString[index - 1] === \"\\\\\")){\n            escape = jsonString[index] === \"\\\\\" ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        } else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            } catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"\\\\\")) + '\"');\n            }\n        }\n        markPartialJSON(\"Unterminated string literal\");\n    };\n    const parseObj = ()=>{\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while(jsonString[index] !== \"}\"){\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow) return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, {\n                        value,\n                        writable: true,\n                        enumerable: true,\n                        configurable: true\n                    });\n                } catch (e) {\n                    if (Allow.OBJ & allow) return obj;\n                    else throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === \",\") index++; // skip comma\n            }\n        } catch (e) {\n            if (Allow.OBJ & allow) return obj;\n            else markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = ()=>{\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while(jsonString[index] !== \"]\"){\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === \",\") {\n                    index++; // skip comma\n                }\n            }\n        } catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = ()=>{\n        if (index === 0) {\n            if (jsonString === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            } catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if (\".\" === jsonString[jsonString.length - 1]) return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\".\")));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf(\"e\")));\n                    } catch (e) {}\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === \"-\") index++;\n        while(jsonString[index] && !\",]}\".includes(jsonString[index]))index++;\n        if (index == length && !(Allow.NUM & allow)) markPartialJSON(\"Unterminated number literal\");\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        } catch (e) {\n            if (jsonString.substring(start, index) === \"-\" && Allow.NUM & allow) markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf(\"e\")));\n            } catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = ()=>{\n        while(index < length && \" \\n\\r\t\".includes(jsonString[index])){\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input)=>parseJSON(input, Allow.ALL ^ Allow.NUM);\n //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/_vendor/partial-json-parser/parser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/azure.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/azure.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureOpenAI: () => (/* binding */ AzureOpenAI)\n/* harmony export */ });\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/client.mjs\");\n\n\n\n\n/** API Client for interfacing with the Azure OpenAI API. */ class AzureOpenAI extends _client_mjs__WEBPACK_IMPORTED_MODULE_3__.OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"AZURE_OPENAI_API_KEY\"), apiVersion = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv)(\"OPENAI_API_VERSION\"), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}){\n        if (!apiVersion) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === \"function\") {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.\");\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.\");\n        }\n        opts.defaultQuery = {\n            ...opts.defaultQuery,\n            \"api-version\": apiVersion\n        };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env[\"AZURE_OPENAI_ENDPOINT\"];\n            }\n            if (!endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable\");\n            }\n            baseURL = `${endpoint}/openai`;\n        } else {\n            if (endpoint) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"baseURL and endpoint are mutually exclusive\");\n            }\n        }\n        super({\n            apiKey: azureADTokenProvider ?? apiKey,\n            baseURL,\n            ...opts,\n            ...dangerouslyAllowBrowser !== undefined ? {\n                dangerouslyAllowBrowser\n            } : {}\n        });\n        this.apiVersion = \"\";\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    async buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === \"post\" && options.body !== undefined) {\n            if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_2__.isObj)(options.body)) {\n                throw new Error(\"Expected request body to be an object\");\n            }\n            const model = this.deploymentName || options.body[\"model\"] || options.__metadata?.[\"model\"];\n            if (model !== undefined && !this.baseURL.includes(\"/deployments\")) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async authHeaders(opts) {\n        if (typeof this._options.apiKey === \"string\") {\n            return (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_0__.buildHeaders)([\n                {\n                    \"api-key\": this.apiKey\n                }\n            ]);\n        }\n        return super.authHeaders(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    \"/completions\",\n    \"/chat/completions\",\n    \"/embeddings\",\n    \"/audio/transcriptions\",\n    \"/audio/translations\",\n    \"/audio/speech\",\n    \"/images/generations\",\n    \"/batches\",\n    \"/images/edits\"\n]); //# sourceMappingURL=azure.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/azure.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/client.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/client.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenAI: () => (/* binding */ OpenAI)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./internal/utils/uuid.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal/utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./internal/utils/sleep.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./internal/errors.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./internal/detect-platform.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/detect-platform.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./internal/shims.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./internal/request-options.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/request-options.mjs\");\n/* harmony import */ var _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./internal/qs/index.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/index.mjs\");\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./version.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/version.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./resources/index.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/index.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./resources/batches.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./resources/completions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./resources/embeddings.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _resources_files_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./resources/files.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _resources_images_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./resources/images.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _resources_models_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./resources/models.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./resources/moderations.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _resources_videos_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./resources/videos.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/videos.mjs\");\n/* harmony import */ var _resources_webhooks_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./resources/webhooks.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/webhooks.mjs\");\n/* harmony import */ var _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./resources/audio/audio.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./resources/beta/beta.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./resources/chat/chat.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./resources/containers/containers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _resources_conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./resources/conversations/conversations.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/conversations.mjs\");\n/* harmony import */ var _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./resources/evals/evals.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./resources/fine-tuning/fine-tuning.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./resources/graders/graders.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _resources_realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./resources/realtime/realtime.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/realtime.mjs\");\n/* harmony import */ var _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./resources/responses/responses.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./resources/uploads/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./resources/vector-stores/vector-stores.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./internal/utils/env.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/env.mjs\");\n/* harmony import */ var _internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./internal/utils/log.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _OpenAI_instances, _a, _OpenAI_encoder, _OpenAI_baseURLOverridden;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * API Client for interfacing with the OpenAI API.\n */ class OpenAI {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string | null | undefined} [opts.webhookSecret=process.env['OPENAI_WEBHOOK_SECRET'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {MergedRequestInit} [opts.fetchOptions] - Additional `RequestInit` options to be passed to `fetch` calls.\n     * @param {Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {HeadersLike} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Record<string, string | undefined>} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */ constructor({ baseURL = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_BASE_URL\"), apiKey = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_API_KEY\"), organization = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_ORG_ID\") ?? null, project = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_PROJECT_ID\") ?? null, webhookSecret = (0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_WEBHOOK_SECRET\") ?? null, ...opts } = {}){\n        _OpenAI_instances.add(this);\n        _OpenAI_encoder.set(this, void 0);\n        this.completions = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Completions(this);\n        this.chat = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Chat(this);\n        this.embeddings = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Embeddings(this);\n        this.files = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Files(this);\n        this.images = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Images(this);\n        this.audio = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Audio(this);\n        this.moderations = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Moderations(this);\n        this.models = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Models(this);\n        this.fineTuning = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.FineTuning(this);\n        this.graders = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Graders(this);\n        this.vectorStores = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.VectorStores(this);\n        this.webhooks = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Webhooks(this);\n        this.beta = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Beta(this);\n        this.batches = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Batches(this);\n        this.uploads = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Uploads(this);\n        this.responses = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Responses(this);\n        this.realtime = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Realtime(this);\n        this.conversations = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Conversations(this);\n        this.evals = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Evals(this);\n        this.containers = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Containers(this);\n        this.videos = new _resources_index_mjs__WEBPACK_IMPORTED_MODULE_13__.Videos(this);\n        if (apiKey === undefined) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(\"Missing credentials. Please pass an `apiKey`, or set the `OPENAI_API_KEY` environment variable.\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            webhookSecret,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`\n        };\n        if (!options.dangerouslyAllowBrowser && (0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__.isRunningInBrowser)()) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        this.baseURL = options.baseURL;\n        this.timeout = options.timeout ?? _a.DEFAULT_TIMEOUT /* 10 minutes */ ;\n        this.logger = options.logger ?? console;\n        const defaultLogLevel = \"warn\";\n        // Set default logLevel early so that we can log a warning in parseLogLevel.\n        this.logLevel = defaultLogLevel;\n        this.logLevel = (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.parseLogLevel)(options.logLevel, \"ClientOptions.logLevel\", this) ?? (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.parseLogLevel)((0,_internal_utils_env_mjs__WEBPACK_IMPORTED_MODULE_37__.readEnv)(\"OPENAI_LOG\"), \"process.env['OPENAI_LOG']\", this) ?? defaultLogLevel;\n        this.fetchOptions = options.fetchOptions;\n        this.maxRetries = options.maxRetries ?? 2;\n        this.fetch = options.fetch ?? _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.getDefaultFetch();\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _OpenAI_encoder, _internal_request_options_mjs__WEBPACK_IMPORTED_MODULE_7__.FallbackEncoder, \"f\");\n        this._options = options;\n        this.apiKey = typeof apiKey === \"string\" ? apiKey : \"Missing Key\";\n        this.organization = organization;\n        this.project = project;\n        this.webhookSecret = webhookSecret;\n    }\n    /**\n     * Create a new client instance re-using the same options given to the current client with optional overriding.\n     */ withOptions(options) {\n        const client = new this.constructor({\n            ...this._options,\n            baseURL: this.baseURL,\n            maxRetries: this.maxRetries,\n            timeout: this.timeout,\n            logger: this.logger,\n            logLevel: this.logLevel,\n            fetch: this.fetch,\n            fetchOptions: this.fetchOptions,\n            apiKey: this.apiKey,\n            organization: this.organization,\n            project: this.project,\n            webhookSecret: this.webhookSecret,\n            ...options\n        });\n        return client;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    validateHeaders({ values, nulls }) {\n        return;\n    }\n    async authHeaders(opts) {\n        return (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_36__.buildHeaders)([\n            {\n                Authorization: `Bearer ${this.apiKey}`\n            }\n        ]);\n    }\n    stringifyQuery(query) {\n        return _internal_qs_index_mjs__WEBPACK_IMPORTED_MODULE_8__.stringify(query, {\n            arrayFormat: \"brackets\"\n        });\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${_version_mjs__WEBPACK_IMPORTED_MODULE_9__.VERSION}`;\n    }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${(0,_internal_utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_1__.uuid4)()}`;\n    }\n    makeStatusError(status, error, message, headers) {\n        return _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIError.generate(status, error, message, headers);\n    }\n    async _callApiKey() {\n        const apiKey = this._options.apiKey;\n        if (typeof apiKey !== \"function\") return false;\n        let token;\n        try {\n            token = await apiKey();\n        } catch (err) {\n            if (err instanceof _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError) throw err;\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(`Failed to get token from 'apiKey' function: ${err.message}`, // @ts-ignore\n            {\n                cause: err\n            });\n        }\n        if (typeof token !== \"string\" || !token) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError(`Expected 'apiKey' function argument to return a string but it returned ${token}`);\n        }\n        this.apiKey = token;\n        return true;\n    }\n    buildURL(path, query, defaultBaseURL) {\n        const baseURL = !(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _OpenAI_instances, \"m\", _OpenAI_baseURLOverridden).call(this) && defaultBaseURL || this.baseURL;\n        const url = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isAbsoluteURL)(path) ? new URL(path) : new URL(baseURL + (baseURL.endsWith(\"/\") && path.startsWith(\"/\") ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isEmptyObj)(defaultQuery)) {\n            query = {\n                ...defaultQuery,\n                ...query\n            };\n        }\n        if (typeof query === \"object\" && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */ async prepareOptions(options) {\n        await this._callApiKey();\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */ async prepareRequest(request, { url, options }) {}\n    get(path, opts) {\n        return this.methodRequest(\"get\", path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest(\"post\", path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest(\"patch\", path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest(\"put\", path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest(\"delete\", path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts)=>{\n            return {\n                method,\n                path,\n                ...opts\n            };\n        }));\n    }\n    request(options, remainingRetries = null) {\n        return new _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_14__.APIPromise(this, this.makeRequest(options, remainingRetries, undefined));\n    }\n    async makeRequest(optionsInput, retriesRemaining, retryOfRequestLogID) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = await this.buildRequest(options, {\n            retryCount: maxRetries - retriesRemaining\n        });\n        await this.prepareRequest(req, {\n            url,\n            options\n        });\n        /** Not an API request ID, just for correlating local log entries. */ const requestLogID = \"log_\" + (Math.random() * (1 << 24) | 0).toString(16).padStart(6, \"0\");\n        const retryLogStr = retryOfRequestLogID === undefined ? \"\" : `, retryOf: ${retryOfRequestLogID}`;\n        const startTime = Date.now();\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] sending request`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n            retryOfRequestLogID,\n            method: options.method,\n            url,\n            options,\n            headers: req.headers\n        }));\n        if (options.signal?.aborted) {\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.castToError);\n        const headersTime = Date.now();\n        if (response instanceof globalThis.Error) {\n            const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n            if (options.signal?.aborted) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError();\n            }\n            // detect native connection timeout errors\n            // deno throws \"TypeError: error sending request for url (https://example/): client error (Connect): tcp connect error: Operation timed out (os error 60): Operation timed out (os error 60)\"\n            // undici throws \"TypeError: fetch failed\" with cause \"ConnectTimeoutError: Connect Timeout Error (attempted address: example:443, timeout: 1ms)\"\n            // others do not provide enough information to distinguish timeouts from other connection errors\n            const isTimeout = (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(response) || /timed? ?out/i.test(String(response) + (\"cause\" in response ? String(response.cause) : \"\"));\n            if (retriesRemaining) {\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url,\n                    durationMs: headersTime - startTime,\n                    message: response.message\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID);\n            }\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).info(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} - error; no more retries left`);\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] connection ${isTimeout ? \"timed out\" : \"failed\"} (error; no more retries left)`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url,\n                durationMs: headersTime - startTime,\n                message: response.message\n            }));\n            if (isTimeout) {\n                throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionTimeoutError();\n            }\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionError({\n                cause: response\n            });\n        }\n        const specialHeaders = [\n            ...response.headers.entries()\n        ].filter(([name])=>name === \"x-request-id\").map(([name, value])=>\", \" + name + \": \" + JSON.stringify(value)).join(\"\");\n        const responseInfo = `[${requestLogID}${retryLogStr}${specialHeaders}] ${req.method} ${url} ${response.ok ? \"succeeded\" : \"failed\"} with status ${response.status} in ${headersTime - startTime}ms`;\n        if (!response.ok) {\n            const shouldRetry = await this.shouldRetry(response);\n            if (retriesRemaining && shouldRetry) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                // We don't need the body of this response.\n                await _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.CancelReadableStream(response.body);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n                (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n                    retryOfRequestLogID,\n                    url: response.url,\n                    status: response.status,\n                    headers: response.headers,\n                    durationMs: headersTime - startTime\n                }));\n                return this.retryRequest(options, retriesRemaining, retryOfRequestLogID ?? requestLogID, response.headers);\n            }\n            const retryMessage = shouldRetry ? `error; no more retries left` : `error; not retryable`;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).info(`${responseInfo} - ${retryMessage}`);\n            const errText = await response.text().catch((err)=>(0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.castToError)(err).message);\n            const errJSON = (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.safeJSON)(errText);\n            const errMessage = errJSON ? undefined : errText;\n            (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] response error (${retryMessage})`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n                retryOfRequestLogID,\n                url: response.url,\n                status: response.status,\n                headers: response.headers,\n                message: errMessage,\n                durationMs: Date.now() - startTime\n            }));\n            const err = this.makeStatusError(response.status, errJSON, errMessage, response.headers);\n            throw err;\n        }\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).info(responseInfo);\n        (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.loggerFor)(this).debug(`[${requestLogID}] response start`, (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_38__.formatRequestDetails)({\n            retryOfRequestLogID,\n            url: response.url,\n            status: response.status,\n            headers: response.headers,\n            durationMs: headersTime - startTime\n        }));\n        return {\n            response,\n            options,\n            controller,\n            requestLogID,\n            retryOfRequestLogID,\n            startTime\n        };\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, {\n            method: \"get\",\n            path,\n            ...opts\n        });\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null, undefined);\n        return new _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_11__.PagePromise(this, request, Page);\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, method, ...options } = init || {};\n        if (signal) signal.addEventListener(\"abort\", ()=>controller.abort());\n        const timeout = setTimeout(()=>controller.abort(), ms);\n        const isReadableBody = globalThis.ReadableStream && options.body instanceof globalThis.ReadableStream || typeof options.body === \"object\" && options.body !== null && Symbol.asyncIterator in options.body;\n        const fetchOptions = {\n            signal: controller.signal,\n            ...isReadableBody ? {\n                duplex: \"half\"\n            } : {},\n            method: \"GET\",\n            ...options\n        };\n        if (method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = method.toUpperCase();\n        }\n        try {\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            return await this.fetch.call(undefined, url, fetchOptions);\n        } finally{\n            clearTimeout(timeout);\n        }\n    }\n    async shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get(\"x-should-retry\");\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === \"true\") return true;\n        if (shouldRetryHeader === \"false\") return false;\n        // Retry on request timeouts.\n        if (response.status === 408) return true;\n        // Retry on lock timeouts.\n        if (response.status === 409) return true;\n        // Retry on rate limits.\n        if (response.status === 429) return true;\n        // Retry internal errors.\n        if (response.status >= 500) return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, requestLogID, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.get(\"retry-after-ms\");\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.get(\"retry-after\");\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            } else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1, requestLogID);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    async buildRequest(inputOptions, { retryCount = 0 } = {}) {\n        const options = {\n            ...inputOptions\n        };\n        const { method, path, query, defaultBaseURL } = options;\n        const url = this.buildURL(path, query, defaultBaseURL);\n        if (\"timeout\" in options) (0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.validatePositiveInteger)(\"timeout\", options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const { bodyHeaders, body } = this.buildBody({\n            options\n        });\n        const reqHeaders = await this.buildHeaders({\n            options: inputOptions,\n            method,\n            bodyHeaders,\n            retryCount\n        });\n        const req = {\n            method,\n            headers: reqHeaders,\n            ...options.signal && {\n                signal: options.signal\n            },\n            ...globalThis.ReadableStream && body instanceof globalThis.ReadableStream && {\n                duplex: \"half\"\n            },\n            ...body && {\n                body\n            },\n            ...this.fetchOptions ?? {},\n            ...options.fetchOptions ?? {}\n        };\n        return {\n            req,\n            url,\n            timeout: options.timeout\n        };\n    }\n    async buildHeaders({ options, method, bodyHeaders, retryCount }) {\n        let idempotencyHeaders = {};\n        if (this.idempotencyHeader && method !== \"get\") {\n            if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n            idempotencyHeaders[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_36__.buildHeaders)([\n            idempotencyHeaders,\n            {\n                Accept: \"application/json\",\n                \"User-Agent\": this.getUserAgent(),\n                \"X-Stainless-Retry-Count\": String(retryCount),\n                ...options.timeout ? {\n                    \"X-Stainless-Timeout\": String(Math.trunc(options.timeout / 1000))\n                } : {},\n                ...(0,_internal_detect_platform_mjs__WEBPACK_IMPORTED_MODULE_5__.getPlatformHeaders)(),\n                \"OpenAI-Organization\": this.organization,\n                \"OpenAI-Project\": this.project\n            },\n            await this.authHeaders(options),\n            this._options.defaultHeaders,\n            bodyHeaders,\n            options.headers\n        ]);\n        this.validateHeaders(headers);\n        return headers.values;\n    }\n    buildBody({ options: { body, headers: rawHeaders } }) {\n        if (!body) {\n            return {\n                bodyHeaders: undefined,\n                body: undefined\n            };\n        }\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_36__.buildHeaders)([\n            rawHeaders\n        ]);\n        if (// Pass raw type verbatim\n        ArrayBuffer.isView(body) || body instanceof ArrayBuffer || body instanceof DataView || typeof body === \"string\" && // Preserve legacy string encoding behavior for now\n        headers.values.has(\"content-type\") || // `Blob` is superset of `File`\n        globalThis.Blob && body instanceof globalThis.Blob || // `FormData` -> `multipart/form-data`\n        body instanceof FormData || // `URLSearchParams` -> `application/x-www-form-urlencoded`\n        body instanceof URLSearchParams || // Send chunked stream (each chunk has own `length`)\n        globalThis.ReadableStream && body instanceof globalThis.ReadableStream) {\n            return {\n                bodyHeaders: undefined,\n                body: body\n            };\n        } else if (typeof body === \"object\" && (Symbol.asyncIterator in body || Symbol.iterator in body && \"next\" in body && typeof body.next === \"function\")) {\n            return {\n                bodyHeaders: undefined,\n                body: _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_6__.ReadableStreamFrom(body)\n            };\n        } else {\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _OpenAI_encoder, \"f\").call(this, {\n                body,\n                headers\n            });\n        }\n    }\n}\n_a = OpenAI, _OpenAI_encoder = new WeakMap(), _OpenAI_instances = new WeakSet(), _OpenAI_baseURLOverridden = function _OpenAI_baseURLOverridden() {\n    return this.baseURL !== \"https://api.openai.com/v1\";\n};\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.OpenAIError;\nOpenAI.APIError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIError;\nOpenAI.APIConnectionError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.APIUserAbortError;\nOpenAI.NotFoundError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.NotFoundError;\nOpenAI.ConflictError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.ConflictError;\nOpenAI.RateLimitError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.RateLimitError;\nOpenAI.BadRequestError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.BadRequestError;\nOpenAI.AuthenticationError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.AuthenticationError;\nOpenAI.InternalServerError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.InternalServerError;\nOpenAI.PermissionDeniedError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.UnprocessableEntityError;\nOpenAI.InvalidWebhookSignatureError = _core_error_mjs__WEBPACK_IMPORTED_MODULE_10__.InvalidWebhookSignatureError;\nOpenAI.toFile = _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_12__.toFile;\nOpenAI.Completions = _resources_completions_mjs__WEBPACK_IMPORTED_MODULE_16__.Completions;\nOpenAI.Chat = _resources_chat_chat_mjs__WEBPACK_IMPORTED_MODULE_26__.Chat;\nOpenAI.Embeddings = _resources_embeddings_mjs__WEBPACK_IMPORTED_MODULE_17__.Embeddings;\nOpenAI.Files = _resources_files_mjs__WEBPACK_IMPORTED_MODULE_18__.Files;\nOpenAI.Images = _resources_images_mjs__WEBPACK_IMPORTED_MODULE_19__.Images;\nOpenAI.Audio = _resources_audio_audio_mjs__WEBPACK_IMPORTED_MODULE_24__.Audio;\nOpenAI.Moderations = _resources_moderations_mjs__WEBPACK_IMPORTED_MODULE_21__.Moderations;\nOpenAI.Models = _resources_models_mjs__WEBPACK_IMPORTED_MODULE_20__.Models;\nOpenAI.FineTuning = _resources_fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_30__.FineTuning;\nOpenAI.Graders = _resources_graders_graders_mjs__WEBPACK_IMPORTED_MODULE_31__.Graders;\nOpenAI.VectorStores = _resources_vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_35__.VectorStores;\nOpenAI.Webhooks = _resources_webhooks_mjs__WEBPACK_IMPORTED_MODULE_23__.Webhooks;\nOpenAI.Beta = _resources_beta_beta_mjs__WEBPACK_IMPORTED_MODULE_25__.Beta;\nOpenAI.Batches = _resources_batches_mjs__WEBPACK_IMPORTED_MODULE_15__.Batches;\nOpenAI.Uploads = _resources_uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_34__.Uploads;\nOpenAI.Responses = _resources_responses_responses_mjs__WEBPACK_IMPORTED_MODULE_33__.Responses;\nOpenAI.Realtime = _resources_realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_32__.Realtime;\nOpenAI.Conversations = _resources_conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_28__.Conversations;\nOpenAI.Evals = _resources_evals_evals_mjs__WEBPACK_IMPORTED_MODULE_29__.Evals;\nOpenAI.Containers = _resources_containers_containers_mjs__WEBPACK_IMPORTED_MODULE_27__.Containers;\nOpenAI.Videos = _resources_videos_mjs__WEBPACK_IMPORTED_MODULE_22__.Videos; //# sourceMappingURL=client.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/client.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIPromise: () => (/* binding */ APIPromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/parse.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _APIPromise_client;\n\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */ class APIPromise extends Promise {\n    constructor(client, responsePromise, parseResponse = _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultParseResponse){\n        super((resolve)=>{\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n        _APIPromise_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _APIPromise_client, client, \"f\");\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), this.responsePromise, async (client, props)=>(0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_1__.addRequestID)(transform(await this.parseResponse(client, props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ asResponse() {\n        return this.responsePromise.then((p)=>p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` or add `\"lib\": [\"DOM\"]`\n     * to your `tsconfig.json`.\n     */ async withResponse() {\n        const [data, response] = await Promise.all([\n            this.parse(),\n            this.asResponse()\n        ]);\n        return {\n            data,\n            response,\n            request_id: response.headers.get(\"x-request-id\")\n        };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then((data)=>this.parseResponse((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _APIPromise_client, \"f\"), data));\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\n_APIPromise_client = new WeakMap(); //# sourceMappingURL=api-promise.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9hcGktcHJvbWlzZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3RGLElBQUlBO0FBQ21GO0FBQ1g7QUFDNUU7OztDQUdDLEdBQ00sTUFBTUssbUJBQW1CQztJQUM1QkMsWUFBWUMsTUFBTSxFQUFFQyxlQUFlLEVBQUVDLGdCQUFnQlAscUVBQW9CLENBQUU7UUFDdkUsS0FBSyxDQUFDLENBQUNRO1lBQ0gseUVBQXlFO1lBQ3pFLDBFQUEwRTtZQUMxRSx3QkFBd0I7WUFDeEJBLFFBQVE7UUFDWjtRQUNBLElBQUksQ0FBQ0YsZUFBZSxHQUFHQTtRQUN2QixJQUFJLENBQUNDLGFBQWEsR0FBR0E7UUFDckJWLG1CQUFtQlksR0FBRyxDQUFDLElBQUksRUFBRSxLQUFLO1FBQ2xDViwyRUFBc0JBLENBQUMsSUFBSSxFQUFFRixvQkFBb0JRLFFBQVE7SUFDN0Q7SUFDQUssWUFBWUMsU0FBUyxFQUFFO1FBQ25CLE9BQU8sSUFBSVQsV0FBV0osMkVBQXNCQSxDQUFDLElBQUksRUFBRUQsb0JBQW9CLE1BQU0sSUFBSSxDQUFDUyxlQUFlLEVBQUUsT0FBT0QsUUFBUU8sUUFBVVgsaUVBQVlBLENBQUNVLFVBQVUsTUFBTSxJQUFJLENBQUNKLGFBQWEsQ0FBQ0YsUUFBUU8sUUFBUUEsUUFBUUEsTUFBTUMsUUFBUTtJQUN0TjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsYUFBYTtRQUNULE9BQU8sSUFBSSxDQUFDUixlQUFlLENBQUNTLElBQUksQ0FBQyxDQUFDQyxJQUFNQSxFQUFFSCxRQUFRO0lBQ3REO0lBQ0E7Ozs7Ozs7Ozs7O0tBV0MsR0FDRCxNQUFNSSxlQUFlO1FBQ2pCLE1BQU0sQ0FBQ0MsTUFBTUwsU0FBUyxHQUFHLE1BQU1WLFFBQVFnQixHQUFHLENBQUM7WUFBQyxJQUFJLENBQUNDLEtBQUs7WUFBSSxJQUFJLENBQUNOLFVBQVU7U0FBRztRQUM1RSxPQUFPO1lBQUVJO1lBQU1MO1lBQVVRLFlBQVlSLFNBQVNTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDO1FBQWdCO0lBQzlFO0lBQ0FILFFBQVE7UUFDSixJQUFJLENBQUMsSUFBSSxDQUFDSSxhQUFhLEVBQUU7WUFDckIsSUFBSSxDQUFDQSxhQUFhLEdBQUcsSUFBSSxDQUFDbEIsZUFBZSxDQUFDUyxJQUFJLENBQUMsQ0FBQ0csT0FBUyxJQUFJLENBQUNYLGFBQWEsQ0FBQ1QsMkVBQXNCQSxDQUFDLElBQUksRUFBRUQsb0JBQW9CLE1BQU1xQjtRQUN2STtRQUNBLE9BQU8sSUFBSSxDQUFDTSxhQUFhO0lBQzdCO0lBQ0FULEtBQUtVLFdBQVcsRUFBRUMsVUFBVSxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDTixLQUFLLEdBQUdMLElBQUksQ0FBQ1UsYUFBYUM7SUFDMUM7SUFDQUMsTUFBTUQsVUFBVSxFQUFFO1FBQ2QsT0FBTyxJQUFJLENBQUNOLEtBQUssR0FBR08sS0FBSyxDQUFDRDtJQUM5QjtJQUNBRSxRQUFRQyxTQUFTLEVBQUU7UUFDZixPQUFPLElBQUksQ0FBQ1QsS0FBSyxHQUFHUSxPQUFPLENBQUNDO0lBQ2hDO0FBQ0o7QUFDQWhDLHFCQUFxQixJQUFJaUMsV0FDekIsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9hcGktcHJvbWlzZS5tanM/MDZlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxudmFyIF9BUElQcm9taXNlX2NsaWVudDtcbmltcG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRHZXQsIF9fY2xhc3NQcml2YXRlRmllbGRTZXQgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdHNsaWIubWpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0UGFyc2VSZXNwb25zZSwgYWRkUmVxdWVzdElELCB9IGZyb20gXCIuLi9pbnRlcm5hbC9wYXJzZS5tanNcIjtcbi8qKlxuICogQSBzdWJjbGFzcyBvZiBgUHJvbWlzZWAgcHJvdmlkaW5nIGFkZGl0aW9uYWwgaGVscGVyIG1ldGhvZHNcbiAqIGZvciBpbnRlcmFjdGluZyB3aXRoIHRoZSBTREsuXG4gKi9cbmV4cG9ydCBjbGFzcyBBUElQcm9taXNlIGV4dGVuZHMgUHJvbWlzZSB7XG4gICAgY29uc3RydWN0b3IoY2xpZW50LCByZXNwb25zZVByb21pc2UsIHBhcnNlUmVzcG9uc2UgPSBkZWZhdWx0UGFyc2VSZXNwb25zZSkge1xuICAgICAgICBzdXBlcigocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgLy8gdGhpcyBpcyBtYXliZSBhIGJpdCB3ZWlyZCBidXQgdGhpcyBoYXMgdG8gYmUgYSBuby1vcCB0byBub3QgaW1wbGljaXRseVxuICAgICAgICAgICAgLy8gcGFyc2UgdGhlIHJlc3BvbnNlIGJvZHk7IGluc3RlYWQgLnRoZW4sIC5jYXRjaCwgLmZpbmFsbHkgYXJlIG92ZXJyaWRkZW5cbiAgICAgICAgICAgIC8vIHRvIHBhcnNlIHRoZSByZXNwb25zZVxuICAgICAgICAgICAgcmVzb2x2ZShudWxsKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucmVzcG9uc2VQcm9taXNlID0gcmVzcG9uc2VQcm9taXNlO1xuICAgICAgICB0aGlzLnBhcnNlUmVzcG9uc2UgPSBwYXJzZVJlc3BvbnNlO1xuICAgICAgICBfQVBJUHJvbWlzZV9jbGllbnQuc2V0KHRoaXMsIHZvaWQgMCk7XG4gICAgICAgIF9fY2xhc3NQcml2YXRlRmllbGRTZXQodGhpcywgX0FQSVByb21pc2VfY2xpZW50LCBjbGllbnQsIFwiZlwiKTtcbiAgICB9XG4gICAgX3RoZW5VbndyYXAodHJhbnNmb3JtKSB7XG4gICAgICAgIHJldHVybiBuZXcgQVBJUHJvbWlzZShfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BUElQcm9taXNlX2NsaWVudCwgXCJmXCIpLCB0aGlzLnJlc3BvbnNlUHJvbWlzZSwgYXN5bmMgKGNsaWVudCwgcHJvcHMpID0+IGFkZFJlcXVlc3RJRCh0cmFuc2Zvcm0oYXdhaXQgdGhpcy5wYXJzZVJlc3BvbnNlKGNsaWVudCwgcHJvcHMpLCBwcm9wcyksIHByb3BzLnJlc3BvbnNlKSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIHJhdyBgUmVzcG9uc2VgIGluc3RhbmNlIGluc3RlYWQgb2YgcGFyc2luZyB0aGUgcmVzcG9uc2VcbiAgICAgKiBkYXRhLlxuICAgICAqXG4gICAgICogSWYgeW91IHdhbnQgdG8gcGFyc2UgdGhlIHJlc3BvbnNlIGJvZHkgYnV0IHN0aWxsIGdldCB0aGUgYFJlc3BvbnNlYFxuICAgICAqIGluc3RhbmNlLCB5b3UgY2FuIHVzZSB7QGxpbmsgd2l0aFJlc3BvbnNlKCl9LlxuICAgICAqXG4gICAgICog8J+RiyBHZXR0aW5nIHRoZSB3cm9uZyBUeXBlU2NyaXB0IHR5cGUgZm9yIGBSZXNwb25zZWA/XG4gICAgICogVHJ5IHNldHRpbmcgYFwibW9kdWxlUmVzb2x1dGlvblwiOiBcIk5vZGVOZXh0XCJgIG9yIGFkZCBgXCJsaWJcIjogW1wiRE9NXCJdYFxuICAgICAqIHRvIHlvdXIgYHRzY29uZmlnLmpzb25gLlxuICAgICAqL1xuICAgIGFzUmVzcG9uc2UoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlc3BvbnNlUHJvbWlzZS50aGVuKChwKSA9PiBwLnJlc3BvbnNlKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogR2V0cyB0aGUgcGFyc2VkIHJlc3BvbnNlIGRhdGEsIHRoZSByYXcgYFJlc3BvbnNlYCBpbnN0YW5jZSBhbmQgdGhlIElEIG9mIHRoZSByZXF1ZXN0LFxuICAgICAqIHJldHVybmVkIHZpYSB0aGUgWC1SZXF1ZXN0LUlEIGhlYWRlciB3aGljaCBpcyB1c2VmdWwgZm9yIGRlYnVnZ2luZyByZXF1ZXN0cyBhbmQgcmVwb3J0aW5nXG4gICAgICogaXNzdWVzIHRvIE9wZW5BSS5cbiAgICAgKlxuICAgICAqIElmIHlvdSBqdXN0IHdhbnQgdG8gZ2V0IHRoZSByYXcgYFJlc3BvbnNlYCBpbnN0YW5jZSB3aXRob3V0IHBhcnNpbmcgaXQsXG4gICAgICogeW91IGNhbiB1c2Uge0BsaW5rIGFzUmVzcG9uc2UoKX0uXG4gICAgICpcbiAgICAgKiDwn5GLIEdldHRpbmcgdGhlIHdyb25nIFR5cGVTY3JpcHQgdHlwZSBmb3IgYFJlc3BvbnNlYD9cbiAgICAgKiBUcnkgc2V0dGluZyBgXCJtb2R1bGVSZXNvbHV0aW9uXCI6IFwiTm9kZU5leHRcImAgb3IgYWRkIGBcImxpYlwiOiBbXCJET01cIl1gXG4gICAgICogdG8geW91ciBgdHNjb25maWcuanNvbmAuXG4gICAgICovXG4gICAgYXN5bmMgd2l0aFJlc3BvbnNlKCkge1xuICAgICAgICBjb25zdCBbZGF0YSwgcmVzcG9uc2VdID0gYXdhaXQgUHJvbWlzZS5hbGwoW3RoaXMucGFyc2UoKSwgdGhpcy5hc1Jlc3BvbnNlKCldKTtcbiAgICAgICAgcmV0dXJuIHsgZGF0YSwgcmVzcG9uc2UsIHJlcXVlc3RfaWQ6IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCd4LXJlcXVlc3QtaWQnKSB9O1xuICAgIH1cbiAgICBwYXJzZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnBhcnNlZFByb21pc2UpIHtcbiAgICAgICAgICAgIHRoaXMucGFyc2VkUHJvbWlzZSA9IHRoaXMucmVzcG9uc2VQcm9taXNlLnRoZW4oKGRhdGEpID0+IHRoaXMucGFyc2VSZXNwb25zZShfX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHRoaXMsIF9BUElQcm9taXNlX2NsaWVudCwgXCJmXCIpLCBkYXRhKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VkUHJvbWlzZTtcbiAgICB9XG4gICAgdGhlbihvbmZ1bGZpbGxlZCwgb25yZWplY3RlZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJzZSgpLnRoZW4ob25mdWxmaWxsZWQsIG9ucmVqZWN0ZWQpO1xuICAgIH1cbiAgICBjYXRjaChvbnJlamVjdGVkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcnNlKCkuY2F0Y2gob25yZWplY3RlZCk7XG4gICAgfVxuICAgIGZpbmFsbHkob25maW5hbGx5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcnNlKCkuZmluYWxseShvbmZpbmFsbHkpO1xuICAgIH1cbn1cbl9BUElQcm9taXNlX2NsaWVudCA9IG5ldyBXZWFrTWFwKCk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGktcHJvbWlzZS5tanMubWFwIl0sIm5hbWVzIjpbIl9BUElQcm9taXNlX2NsaWVudCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwiZGVmYXVsdFBhcnNlUmVzcG9uc2UiLCJhZGRSZXF1ZXN0SUQiLCJBUElQcm9taXNlIiwiUHJvbWlzZSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwicmVzcG9uc2VQcm9taXNlIiwicGFyc2VSZXNwb25zZSIsInJlc29sdmUiLCJzZXQiLCJfdGhlblVud3JhcCIsInRyYW5zZm9ybSIsInByb3BzIiwicmVzcG9uc2UiLCJhc1Jlc3BvbnNlIiwidGhlbiIsInAiLCJ3aXRoUmVzcG9uc2UiLCJkYXRhIiwiYWxsIiwicGFyc2UiLCJyZXF1ZXN0X2lkIiwiaGVhZGVycyIsImdldCIsInBhcnNlZFByb21pc2UiLCJvbmZ1bGZpbGxlZCIsIm9ucmVqZWN0ZWQiLCJjYXRjaCIsImZpbmFsbHkiLCJvbmZpbmFsbHkiLCJXZWFrTWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* binding */ APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* binding */ APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* binding */ APIError),\n/* harmony export */   APIUserAbortError: () => (/* binding */ APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* binding */ AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* binding */ BadRequestError),\n/* harmony export */   ConflictError: () => (/* binding */ ConflictError),\n/* harmony export */   ContentFilterFinishReasonError: () => (/* binding */ ContentFilterFinishReasonError),\n/* harmony export */   InternalServerError: () => (/* binding */ InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* binding */ InvalidWebhookSignatureError),\n/* harmony export */   LengthFinishReasonError: () => (/* binding */ LengthFinishReasonError),\n/* harmony export */   NotFoundError: () => (/* binding */ NotFoundError),\n/* harmony export */   OpenAIError: () => (/* binding */ OpenAIError),\n/* harmony export */   PermissionDeniedError: () => (/* binding */ PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* binding */ RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* binding */ UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass OpenAIError extends Error {\n}\nclass APIError extends OpenAIError {\n    constructor(status, error, message, headers){\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.requestID = headers?.get(\"x-request-id\");\n        this.error = error;\n        const data = error;\n        this.code = data?.[\"code\"];\n        this.param = data?.[\"param\"];\n        this.type = data?.[\"type\"];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ? typeof error.message === \"string\" ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return \"(no status code or body)\";\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({\n                message,\n                cause: (0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_0__.castToError)(errorResponse)\n            });\n        }\n        const error = errorResponse?.[\"error\"];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nclass APIUserAbortError extends APIError {\n    constructor({ message } = {}){\n        super(undefined, undefined, message || \"Request was aborted.\", undefined);\n    }\n}\nclass APIConnectionError extends APIError {\n    constructor({ message, cause }){\n        super(undefined, undefined, message || \"Connection error.\", undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause) this.cause = cause;\n    }\n}\nclass APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}){\n        super({\n            message: message ?? \"Request timed out.\"\n        });\n    }\n}\nclass BadRequestError extends APIError {\n}\nclass AuthenticationError extends APIError {\n}\nclass PermissionDeniedError extends APIError {\n}\nclass NotFoundError extends APIError {\n}\nclass ConflictError extends APIError {\n}\nclass UnprocessableEntityError extends APIError {\n}\nclass RateLimitError extends APIError {\n}\nclass InternalServerError extends APIError {\n}\nclass LengthFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nclass ContentFilterFinishReasonError extends OpenAIError {\n    constructor(){\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\nclass InvalidWebhookSignatureError extends Error {\n    constructor(message){\n        super(message);\n    }\n} //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractPage: () => (/* binding */ AbstractPage),\n/* harmony export */   ConversationCursorPage: () => (/* binding */ ConversationCursorPage),\n/* harmony export */   CursorPage: () => (/* binding */ CursorPage),\n/* harmony export */   Page: () => (/* binding */ Page),\n/* harmony export */   PagePromise: () => (/* binding */ PagePromise)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/parse.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/parse.mjs\");\n/* harmony import */ var _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api-promise.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _AbstractPage_client;\n\n\n\n\n\nclass AbstractPage {\n    constructor(client, response, body, options){\n        _AbstractPage_client.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length) return false;\n        return this.nextPageRequestOptions() != null;\n    }\n    async getNextPage() {\n        const nextOptions = this.nextPageRequestOptions();\n        if (!nextOptions) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.\");\n        }\n        return await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        let page = this;\n        yield page;\n        while(page.hasNextPage()){\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()){\n            for (const item of page.getPaginatedItems()){\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */ class PagePromise extends _api_promise_mjs__WEBPACK_IMPORTED_MODULE_3__.APIPromise {\n    constructor(client, request, Page){\n        super(client, request, async (client, props)=>new Page(client, props.response, await (0,_internal_parse_mjs__WEBPACK_IMPORTED_MODULE_2__.defaultParseResponse)(client, props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */ async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page){\n            yield item;\n        }\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */ class Page extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    nextPageRequestOptions() {\n        return null;\n    }\n}\nclass CursorPage extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const data = this.getPaginatedItems();\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeObj)(this.options.query),\n                after: id\n            }\n        };\n    }\n}\nclass ConversationCursorPage extends AbstractPage {\n    constructor(client, response, body, options){\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n        this.last_id = body.last_id || \"\";\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    nextPageRequestOptions() {\n        const cursor = this.last_id;\n        if (!cursor) {\n            return null;\n        }\n        return {\n            ...this.options,\n            query: {\n                ...(0,_internal_utils_values_mjs__WEBPACK_IMPORTED_MODULE_4__.maybeObj)(this.options.query),\n                after: cursor\n            }\n        };\n    }\n} //# sourceMappingURL=pagination.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIResource: () => (/* binding */ APIResource)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nclass APIResource {\n    constructor(client){\n        this._client = client;\n    }\n} //# sourceMappingURL=resource.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS9yZXNvdXJjZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUMvRSxNQUFNQTtJQUNUQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSSxDQUFDQyxPQUFPLEdBQUdEO0lBQ25CO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9jb3JlL3Jlc291cmNlLm1qcz9iMDVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgY2xhc3MgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgICAgICB0aGlzLl9jbGllbnQgPSBjbGllbnQ7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzb3VyY2UubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImNvbnN0cnVjdG9yIiwiY2xpZW50IiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/streaming.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/streaming.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* binding */ Stream),\n/* harmony export */   _iterSSEMessages: () => (/* binding */ _iterSSEMessages)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n/* harmony import */ var _internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/shims.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs\");\n/* harmony import */ var _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/decoders/line.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/decoders/line.mjs\");\n/* harmony import */ var _internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/errors.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs\");\n/* harmony import */ var _internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/utils/bytes.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs\");\n/* harmony import */ var _internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/utils/log.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs\");\nvar _Stream_client;\n\n\n\n\n\n\n\n\n\nclass Stream {\n    constructor(iterator, controller, client){\n        this.iterator = iterator;\n        _Stream_client.set(this, void 0);\n        this.controller = controller;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _Stream_client, client, \"f\");\n    }\n    static fromSSEResponse(response, controller, client) {\n        let consumed = false;\n        const logger = client ? (0,_internal_utils_log_mjs__WEBPACK_IMPORTED_MODULE_6__.loggerFor)(client) : console;\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)){\n                    if (done) continue;\n                    if (sse.data.startsWith(\"[DONE]\")) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || !sse.event.startsWith(\"thread.\")) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            logger.error(`Could not parse message into JSON:`, sse.data);\n                            logger.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError(undefined, data.error, undefined, response.headers);\n                        }\n                        yield data;\n                    } else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        } catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == \"error\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield {\n                            event: sse.event,\n                            data: data\n                        };\n                    }\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */ static fromReadableStream(readableStream, controller, client) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.LineDecoder();\n            const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.ReadableStreamToAsyncIterable)(readableStream);\n            for await (const chunk of iter){\n                for (const line of lineDecoder.decode(chunk)){\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()){\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Cannot iterate over a consumed stream, use `.tee()` to split the stream.\");\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()){\n                    if (done) continue;\n                    if (line) yield JSON.parse(line);\n                }\n                done = true;\n            } catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if ((0,_internal_errors_mjs__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(e)) return;\n                throw e;\n            } finally{\n                // If the user `break`s, abort the ongoing request.\n                if (!done) controller.abort();\n            }\n        }\n        return new Stream(iterator, controller, client);\n    }\n    [(_Stream_client = new WeakMap(), Symbol.asyncIterator)]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */ tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue)=>{\n            return {\n                next: ()=>{\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                }\n            };\n        };\n        return [\n            new Stream(()=>teeIterator(left), this.controller, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Stream_client, \"f\")),\n            new Stream(()=>teeIterator(right), this.controller, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Stream_client, \"f\"))\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */ toReadableStream() {\n        const self = this;\n        let iter;\n        return (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.makeReadableStream)({\n            async start () {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull (ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done) return ctrl.close();\n                    const bytes = (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__.encodeUTF8)(JSON.stringify(value) + \"\\n\");\n                    ctrl.enqueue(bytes);\n                } catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel () {\n                await iter.return?.();\n            }\n        });\n    }\n}\nasync function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        if (typeof globalThis.navigator !== \"undefined\" && globalThis.navigator.product === \"ReactNative\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`The default react-native fetch implementation does not support streaming. Please use expo/fetch: https://docs.expo.dev/versions/latest/sdk/expo/#expofetch-api`);\n        }\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new _internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.LineDecoder();\n    const iter = (0,_internal_shims_mjs__WEBPACK_IMPORTED_MODULE_2__.ReadableStreamToAsyncIterable)(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)){\n        for (const line of lineDecoder.decode(sseChunk)){\n            const sse = sseDecoder.decode(line);\n            if (sse) yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()){\n        const sse = sseDecoder.decode(line);\n        if (sse) yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */ async function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator){\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_internal_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_5__.encodeUTF8)(chunk) : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while((patternIndex = (0,_internal_decoders_line_mjs__WEBPACK_IMPORTED_MODULE_3__.findDoubleNewlineIndex)(data)) !== -1){\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor(){\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith(\"\\r\")) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length) return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join(\"\\n\"),\n                raw: this.chunks\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(\":\")) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, \":\");\n        if (value.startsWith(\" \")) {\n            value = value.substring(1);\n        }\n        if (fieldname === \"event\") {\n            this.event = value;\n        } else if (fieldname === \"data\") {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [\n            str.substring(0, index),\n            delimiter,\n            str.substring(index + delimiter.length)\n        ];\n    }\n    return [\n        str,\n        \"\",\n        \"\"\n    ];\n} //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/streaming.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/uploads.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/uploads.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* reexport safe */ _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__.toFile)\n/* harmony export */ });\n/* harmony import */ var _internal_to_file_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/to-file.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/to-file.mjs\");\n //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvY29yZS91cGxvYWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRCxDQUNqRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9jb3JlL3VwbG9hZHMubWpzPzQ5ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgdG9GaWxlIH0gZnJvbSBcIi4uL2ludGVybmFsL3RvLWZpbGUubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGxvYWRzLm1qcy5tYXAiXSwibmFtZXMiOlsidG9GaWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIError),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationError),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.ConflictError),\n/* harmony export */   ContentFilterFinishReasonError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.ContentFilterFinishReasonError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.InvalidWebhookSignatureError),\n/* harmony export */   LengthFinishReasonError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.LengthFinishReasonError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.NotFoundError),\n/* harmony export */   OpenAIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.UnprocessableEntityError)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n //# sourceMappingURL=error.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvZXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWlDLENBQ2pDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2Vycm9yLm1qcz83YTk2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvcmUvZXJyb3IubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/index.mjs":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/index.mjs ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIConnectionError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionError),\n/* harmony export */   APIConnectionTimeoutError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError),\n/* harmony export */   APIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIError),\n/* harmony export */   APIPromise: () => (/* reexport safe */ _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__.APIPromise),\n/* harmony export */   APIUserAbortError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIUserAbortError),\n/* harmony export */   AuthenticationError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationError),\n/* harmony export */   AzureOpenAI: () => (/* reexport safe */ _azure_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureOpenAI),\n/* harmony export */   BadRequestError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.BadRequestError),\n/* harmony export */   ConflictError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.ConflictError),\n/* harmony export */   InternalServerError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.InternalServerError),\n/* harmony export */   InvalidWebhookSignatureError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.InvalidWebhookSignatureError),\n/* harmony export */   NotFoundError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.NotFoundError),\n/* harmony export */   OpenAI: () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   OpenAIError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.OpenAIError),\n/* harmony export */   PagePromise: () => (/* reexport safe */ _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.PagePromise),\n/* harmony export */   PermissionDeniedError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.PermissionDeniedError),\n/* harmony export */   RateLimitError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.RateLimitError),\n/* harmony export */   UnprocessableEntityError: () => (/* reexport safe */ _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__.UnprocessableEntityError),\n/* harmony export */   \"default\": () => (/* reexport safe */ _client_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAI),\n/* harmony export */   toFile: () => (/* reexport safe */ _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.toFile)\n/* harmony export */ });\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/client.mjs\");\n/* harmony import */ var _core_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./core/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/uploads.mjs\");\n/* harmony import */ var _core_api_promise_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./core/api-promise.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/api-promise.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n/* harmony import */ var _azure_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./azure.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/azure.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JDO0FBQ0w7QUFDUTtBQUNkO0FBQ2M7QUFDZ1E7QUFDMVEsQ0FDMUMsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW5kZXgubWpzP2JjOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCB7IE9wZW5BSSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4vY2xpZW50Lm1qc1wiO1xuZXhwb3J0IHsgdG9GaWxlIH0gZnJvbSBcIi4vY29yZS91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IHsgQVBJUHJvbWlzZSB9IGZyb20gXCIuL2NvcmUvYXBpLXByb21pc2UubWpzXCI7XG5leHBvcnQgeyBPcGVuQUkgfSBmcm9tIFwiLi9jbGllbnQubWpzXCI7XG5leHBvcnQgeyBQYWdlUHJvbWlzZSB9IGZyb20gXCIuL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmV4cG9ydCB7IE9wZW5BSUVycm9yLCBBUElFcnJvciwgQVBJQ29ubmVjdGlvbkVycm9yLCBBUElDb25uZWN0aW9uVGltZW91dEVycm9yLCBBUElVc2VyQWJvcnRFcnJvciwgTm90Rm91bmRFcnJvciwgQ29uZmxpY3RFcnJvciwgUmF0ZUxpbWl0RXJyb3IsIEJhZFJlcXVlc3RFcnJvciwgQXV0aGVudGljYXRpb25FcnJvciwgSW50ZXJuYWxTZXJ2ZXJFcnJvciwgUGVybWlzc2lvbkRlbmllZEVycm9yLCBVbnByb2Nlc3NhYmxlRW50aXR5RXJyb3IsIEludmFsaWRXZWJob29rU2lnbmF0dXJlRXJyb3IsIH0gZnJvbSBcIi4vY29yZS9lcnJvci5tanNcIjtcbmV4cG9ydCB7IEF6dXJlT3BlbkFJIH0gZnJvbSBcIi4vYXp1cmUubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIk9wZW5BSSIsImRlZmF1bHQiLCJ0b0ZpbGUiLCJBUElQcm9taXNlIiwiUGFnZVByb21pc2UiLCJPcGVuQUlFcnJvciIsIkFQSUVycm9yIiwiQVBJQ29ubmVjdGlvbkVycm9yIiwiQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvciIsIkFQSVVzZXJBYm9ydEVycm9yIiwiTm90Rm91bmRFcnJvciIsIkNvbmZsaWN0RXJyb3IiLCJSYXRlTGltaXRFcnJvciIsIkJhZFJlcXVlc3RFcnJvciIsIkF1dGhlbnRpY2F0aW9uRXJyb3IiLCJJbnRlcm5hbFNlcnZlckVycm9yIiwiUGVybWlzc2lvbkRlbmllZEVycm9yIiwiVW5wcm9jZXNzYWJsZUVudGl0eUVycm9yIiwiSW52YWxpZFdlYmhvb2tTaWduYXR1cmVFcnJvciIsIkF6dXJlT3BlbkFJIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/decoders/line.mjs":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/decoders/line.mjs ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineDecoder: () => (/* binding */ LineDecoder),\n/* harmony export */   findDoubleNewlineIndex: () => (/* binding */ findDoubleNewlineIndex)\n/* harmony export */ });\n/* harmony import */ var _tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/bytes.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs\");\nvar _LineDecoder_buffer, _LineDecoder_carriageReturnIndex;\n\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */ class LineDecoder {\n    constructor(){\n        _LineDecoder_buffer.set(this, void 0);\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, new Uint8Array(), \"f\");\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk) : typeof chunk === \"string\" ? (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(chunk) : chunk;\n        (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.concatBytes)([\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"),\n            binaryChunk\n        ]), \"f\");\n        const lines = [];\n        let patternIndex;\n        while((patternIndex = findNewlineIndex((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\"), (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null){\n            if (patternIndex.carriage && (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if ((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") != null && (patternIndex.index !== (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push((0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\")), \"f\");\n                (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = (0,_utils_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.decodeUTF8)((0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(0, endIndex));\n            lines.push(line);\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_buffer, (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").subarray(patternIndex.index), \"f\");\n            (0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    flush() {\n        if (!(0,_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _LineDecoder_buffer, \"f\").length) {\n            return [];\n        }\n        return this.decode(\"\\n\");\n    }\n}\n_LineDecoder_buffer = new WeakMap(), _LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set([\n    \"\\n\",\n    \"\\r\"\n]);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */ function findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = startIndex ?? 0; i < buffer.length; i++){\n        if (buffer[i] === newline) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: false\n            };\n        }\n        if (buffer[i] === carriage) {\n            return {\n                preceding: i,\n                index: i + 1,\n                carriage: true\n            };\n        }\n    }\n    return null;\n}\nfunction findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for(let i = 0; i < buffer.length - 1; i++){\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === newline && i + 3 < buffer.length && buffer[i + 2] === carriage && buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n} //# sourceMappingURL=line.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/decoders/line.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/detect-platform.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/detect-platform.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getPlatformHeaders: () => (/* binding */ getPlatformHeaders),\n/* harmony export */   isRunningInBrowser: () => (/* binding */ isRunningInBrowser)\n/* harmony export */ });\n/* harmony import */ var _version_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../version.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/version.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst isRunningInBrowser = ()=>{\n    return(// @ts-ignore\n     false && // @ts-ignore\n    0);\n};\n/**\n * Note this does not detect 'browser'; for that, use getBrowserInfo().\n */ function getDetectedPlatform() {\n    if (typeof Deno !== \"undefined\" && Deno.build != null) {\n        return \"deno\";\n    }\n    if (typeof EdgeRuntime !== \"undefined\") {\n        return \"edge\";\n    }\n    if (Object.prototype.toString.call(typeof globalThis.process !== \"undefined\" ? globalThis.process : 0) === \"[object process]\") {\n        return \"node\";\n    }\n    return \"unknown\";\n}\nconst getPlatformProperties = ()=>{\n    const detectedPlatform = getDetectedPlatform();\n    if (detectedPlatform === \"deno\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(Deno.build.os),\n            \"X-Stainless-Arch\": normalizeArch(Deno.build.arch),\n            \"X-Stainless-Runtime\": \"deno\",\n            \"X-Stainless-Runtime-Version\": typeof Deno.version === \"string\" ? Deno.version : Deno.version?.deno ?? \"unknown\"\n        };\n    }\n    if (typeof EdgeRuntime !== \"undefined\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": `other:${EdgeRuntime}`,\n            \"X-Stainless-Runtime\": \"edge\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version\n        };\n    }\n    // Check if Node.js\n    if (detectedPlatform === \"node\") {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": normalizePlatform(globalThis.process.platform ?? \"unknown\"),\n            \"X-Stainless-Arch\": normalizeArch(globalThis.process.arch ?? \"unknown\"),\n            \"X-Stainless-Runtime\": \"node\",\n            \"X-Stainless-Runtime-Version\": globalThis.process.version ?? \"unknown\"\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            \"X-Stainless-Lang\": \"js\",\n            \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n            \"X-Stainless-OS\": \"Unknown\",\n            \"X-Stainless-Arch\": \"unknown\",\n            \"X-Stainless-Runtime\": `browser:${browserInfo.browser}`,\n            \"X-Stainless-Runtime-Version\": browserInfo.version\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        \"X-Stainless-Lang\": \"js\",\n        \"X-Stainless-Package-Version\": _version_mjs__WEBPACK_IMPORTED_MODULE_0__.VERSION,\n        \"X-Stainless-OS\": \"Unknown\",\n        \"X-Stainless-Arch\": \"unknown\",\n        \"X-Stainless-Runtime\": \"unknown\",\n        \"X-Stainless-Runtime-Version\": \"unknown\"\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === \"undefined\" || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        {\n            key: \"edge\",\n            pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"ie\",\n            pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"chrome\",\n            pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"firefox\",\n            pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n        },\n        {\n            key: \"safari\",\n            pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n        }\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns){\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return {\n                browser: key,\n                version: `${major}.${minor}.${patch}`\n            };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch)=>{\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === \"x32\") return \"x32\";\n    if (arch === \"x86_64\" || arch === \"x64\") return \"x64\";\n    if (arch === \"arm\") return \"arm\";\n    if (arch === \"aarch64\" || arch === \"arm64\") return \"arm64\";\n    if (arch) return `other:${arch}`;\n    return \"unknown\";\n};\nconst normalizePlatform = (platform)=>{\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes(\"ios\")) return \"iOS\";\n    if (platform === \"android\") return \"Android\";\n    if (platform === \"darwin\") return \"MacOS\";\n    if (platform === \"win32\") return \"Windows\";\n    if (platform === \"freebsd\") return \"FreeBSD\";\n    if (platform === \"openbsd\") return \"OpenBSD\";\n    if (platform === \"linux\") return \"Linux\";\n    if (platform) return `Other:${platform}`;\n    return \"Unknown\";\n};\nlet _platformHeaders;\nconst getPlatformHeaders = ()=>{\n    return _platformHeaders ?? (_platformHeaders = getPlatformProperties());\n}; //# sourceMappingURL=detect-platform.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/detect-platform.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   castToError: () => (/* binding */ castToError),\n/* harmony export */   isAbortError: () => (/* binding */ isAbortError)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction isAbortError(err) {\n    return typeof err === \"object\" && err !== null && // Spec-compliant fetch implementations\n    (\"name\" in err && err.name === \"AbortError\" || // Expo fetch\n    \"message\" in err && String(err.message).includes(\"FetchRequestCanceledException\"));\n}\nconst castToError = (err)=>{\n    if (err instanceof Error) return err;\n    if (typeof err === \"object\" && err !== null) {\n        try {\n            if (Object.prototype.toString.call(err) === \"[object Error]\") {\n                // @ts-ignore - not all envs have native support for cause yet\n                const error = new Error(err.message, err.cause ? {\n                    cause: err.cause\n                } : {});\n                if (err.stack) error.stack = err.stack;\n                // @ts-ignore - not all envs have native support for cause yet\n                if (err.cause && !error.cause) error.cause = err.cause;\n                if (err.name) error.name = err.name;\n                return error;\n            }\n        } catch  {}\n        try {\n            return new Error(JSON.stringify(err));\n        } catch  {}\n    }\n    return new Error(err);\n}; //# sourceMappingURL=errors.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvZXJyb3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUMvRSxTQUFTQSxhQUFhQyxHQUFHO0lBQzVCLE9BQVEsT0FBT0EsUUFBUSxZQUNuQkEsUUFBUSxRQUNSLHVDQUF1QztJQUN0QyxXQUFXQSxPQUFPQSxJQUFJQyxJQUFJLEtBQUssZ0JBQzVCLGFBQWE7SUFDWixhQUFhRCxPQUFPRSxPQUFPRixJQUFJRyxPQUFPLEVBQUVDLFFBQVEsQ0FBQyxnQ0FBZ0M7QUFDOUY7QUFDTyxNQUFNQyxjQUFjLENBQUNMO0lBQ3hCLElBQUlBLGVBQWVNLE9BQ2YsT0FBT047SUFDWCxJQUFJLE9BQU9BLFFBQVEsWUFBWUEsUUFBUSxNQUFNO1FBQ3pDLElBQUk7WUFDQSxJQUFJTyxPQUFPQyxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDVixTQUFTLGtCQUFrQjtnQkFDMUQsOERBQThEO2dCQUM5RCxNQUFNVyxRQUFRLElBQUlMLE1BQU1OLElBQUlHLE9BQU8sRUFBRUgsSUFBSVksS0FBSyxHQUFHO29CQUFFQSxPQUFPWixJQUFJWSxLQUFLO2dCQUFDLElBQUksQ0FBQztnQkFDekUsSUFBSVosSUFBSWEsS0FBSyxFQUNURixNQUFNRSxLQUFLLEdBQUdiLElBQUlhLEtBQUs7Z0JBQzNCLDhEQUE4RDtnQkFDOUQsSUFBSWIsSUFBSVksS0FBSyxJQUFJLENBQUNELE1BQU1DLEtBQUssRUFDekJELE1BQU1DLEtBQUssR0FBR1osSUFBSVksS0FBSztnQkFDM0IsSUFBSVosSUFBSUMsSUFBSSxFQUNSVSxNQUFNVixJQUFJLEdBQUdELElBQUlDLElBQUk7Z0JBQ3pCLE9BQU9VO1lBQ1g7UUFDSixFQUNBLE9BQU0sQ0FBRTtRQUNSLElBQUk7WUFDQSxPQUFPLElBQUlMLE1BQU1RLEtBQUtDLFNBQVMsQ0FBQ2Y7UUFDcEMsRUFDQSxPQUFNLENBQUU7SUFDWjtJQUNBLE9BQU8sSUFBSU0sTUFBTU47QUFDckIsRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL2Vycm9ycy5tanM/ZDViNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGZ1bmN0aW9uIGlzQWJvcnRFcnJvcihlcnIpIHtcbiAgICByZXR1cm4gKHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmXG4gICAgICAgIGVyciAhPT0gbnVsbCAmJlxuICAgICAgICAvLyBTcGVjLWNvbXBsaWFudCBmZXRjaCBpbXBsZW1lbnRhdGlvbnNcbiAgICAgICAgKCgnbmFtZScgaW4gZXJyICYmIGVyci5uYW1lID09PSAnQWJvcnRFcnJvcicpIHx8XG4gICAgICAgICAgICAvLyBFeHBvIGZldGNoXG4gICAgICAgICAgICAoJ21lc3NhZ2UnIGluIGVyciAmJiBTdHJpbmcoZXJyLm1lc3NhZ2UpLmluY2x1ZGVzKCdGZXRjaFJlcXVlc3RDYW5jZWxlZEV4Y2VwdGlvbicpKSkpO1xufVxuZXhwb3J0IGNvbnN0IGNhc3RUb0Vycm9yID0gKGVycikgPT4ge1xuICAgIGlmIChlcnIgaW5zdGFuY2VvZiBFcnJvcilcbiAgICAgICAgcmV0dXJuIGVycjtcbiAgICBpZiAodHlwZW9mIGVyciA9PT0gJ29iamVjdCcgJiYgZXJyICE9PSBudWxsKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGVycikgPT09ICdbb2JqZWN0IEVycm9yXScpIHtcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIC0gbm90IGFsbCBlbnZzIGhhdmUgbmF0aXZlIHN1cHBvcnQgZm9yIGNhdXNlIHlldFxuICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKGVyci5tZXNzYWdlLCBlcnIuY2F1c2UgPyB7IGNhdXNlOiBlcnIuY2F1c2UgfSA6IHt9KTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyLnN0YWNrKVxuICAgICAgICAgICAgICAgICAgICBlcnJvci5zdGFjayA9IGVyci5zdGFjaztcbiAgICAgICAgICAgICAgICAvLyBAdHMtaWdub3JlIC0gbm90IGFsbCBlbnZzIGhhdmUgbmF0aXZlIHN1cHBvcnQgZm9yIGNhdXNlIHlldFxuICAgICAgICAgICAgICAgIGlmIChlcnIuY2F1c2UgJiYgIWVycm9yLmNhdXNlKVxuICAgICAgICAgICAgICAgICAgICBlcnJvci5jYXVzZSA9IGVyci5jYXVzZTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyLm5hbWUpXG4gICAgICAgICAgICAgICAgICAgIGVycm9yLm5hbWUgPSBlcnIubmFtZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggeyB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKEpTT04uc3RyaW5naWZ5KGVycikpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHsgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IEVycm9yKGVycik7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNBYm9ydEVycm9yIiwiZXJyIiwibmFtZSIsIlN0cmluZyIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsImNhc3RUb0Vycm9yIiwiRXJyb3IiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJlcnJvciIsImNhdXNlIiwic3RhY2siLCJKU09OIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/errors.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildHeaders: () => (/* binding */ buildHeaders),\n/* harmony export */   isEmptyHeaders: () => (/* binding */ isEmptyHeaders)\n/* harmony export */ });\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst brand_privateNullableHeaders = /* @__PURE__ */ Symbol(\"brand.privateNullableHeaders\");\nfunction* iterateHeaders(headers) {\n    if (!headers) return;\n    if (brand_privateNullableHeaders in headers) {\n        const { values, nulls } = headers;\n        yield* values.entries();\n        for (const name of nulls){\n            yield [\n                name,\n                null\n            ];\n        }\n        return;\n    }\n    let shouldClear = false;\n    let iter;\n    if (headers instanceof Headers) {\n        iter = headers.entries();\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(headers)) {\n        iter = headers;\n    } else {\n        shouldClear = true;\n        iter = Object.entries(headers ?? {});\n    }\n    for (let row of iter){\n        const name = row[0];\n        if (typeof name !== \"string\") throw new TypeError(\"expected header name to be a string\");\n        const values = (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray)(row[1]) ? row[1] : [\n            row[1]\n        ];\n        let didClear = false;\n        for (const value of values){\n            if (value === undefined) continue;\n            // Objects keys always overwrite older headers, they never append.\n            // Yield a null to clear the header before adding the new values.\n            if (shouldClear && !didClear) {\n                didClear = true;\n                yield [\n                    name,\n                    null\n                ];\n            }\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n}\nconst buildHeaders = (newHeaders)=>{\n    const targetHeaders = new Headers();\n    const nullHeaders = new Set();\n    for (const headers of newHeaders){\n        const seenHeaders = new Set();\n        for (const [name, value] of iterateHeaders(headers)){\n            const lowerName = name.toLowerCase();\n            if (!seenHeaders.has(lowerName)) {\n                targetHeaders.delete(name);\n                seenHeaders.add(lowerName);\n            }\n            if (value === null) {\n                targetHeaders.delete(name);\n                nullHeaders.add(lowerName);\n            } else {\n                targetHeaders.append(name, value);\n                nullHeaders.delete(lowerName);\n            }\n        }\n    }\n    return {\n        [brand_privateNullableHeaders]: true,\n        values: targetHeaders,\n        nulls: nullHeaders\n    };\n};\nconst isEmptyHeaders = (headers)=>{\n    for (const _ of iterateHeaders(headers))return false;\n    return true;\n}; //# sourceMappingURL=headers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvaGVhZGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2pDO0FBQ3JELE1BQU1DLCtCQUErQixhQUFhLEdBQUdDLE9BQU87QUFDNUQsVUFBVUMsZUFBZUMsT0FBTztJQUM1QixJQUFJLENBQUNBLFNBQ0Q7SUFDSixJQUFJSCxnQ0FBZ0NHLFNBQVM7UUFDekMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRSxHQUFHRjtRQUMxQixPQUFPQyxPQUFPRSxPQUFPO1FBQ3JCLEtBQUssTUFBTUMsUUFBUUYsTUFBTztZQUN0QixNQUFNO2dCQUFDRTtnQkFBTTthQUFLO1FBQ3RCO1FBQ0E7SUFDSjtJQUNBLElBQUlDLGNBQWM7SUFDbEIsSUFBSUM7SUFDSixJQUFJTixtQkFBbUJPLFNBQVM7UUFDNUJELE9BQU9OLFFBQVFHLE9BQU87SUFDMUIsT0FDSyxJQUFJUCxrRUFBZUEsQ0FBQ0ksVUFBVTtRQUMvQk0sT0FBT047SUFDWCxPQUNLO1FBQ0RLLGNBQWM7UUFDZEMsT0FBT0UsT0FBT0wsT0FBTyxDQUFDSCxXQUFXLENBQUM7SUFDdEM7SUFDQSxLQUFLLElBQUlTLE9BQU9ILEtBQU07UUFDbEIsTUFBTUYsT0FBT0ssR0FBRyxDQUFDLEVBQUU7UUFDbkIsSUFBSSxPQUFPTCxTQUFTLFVBQ2hCLE1BQU0sSUFBSU0sVUFBVTtRQUN4QixNQUFNVCxTQUFTTCxrRUFBZUEsQ0FBQ2EsR0FBRyxDQUFDLEVBQUUsSUFBSUEsR0FBRyxDQUFDLEVBQUUsR0FBRztZQUFDQSxHQUFHLENBQUMsRUFBRTtTQUFDO1FBQzFELElBQUlFLFdBQVc7UUFDZixLQUFLLE1BQU1DLFNBQVNYLE9BQVE7WUFDeEIsSUFBSVcsVUFBVUMsV0FDVjtZQUNKLGtFQUFrRTtZQUNsRSxpRUFBaUU7WUFDakUsSUFBSVIsZUFBZSxDQUFDTSxVQUFVO2dCQUMxQkEsV0FBVztnQkFDWCxNQUFNO29CQUFDUDtvQkFBTTtpQkFBSztZQUN0QjtZQUNBLE1BQU07Z0JBQUNBO2dCQUFNUTthQUFNO1FBQ3ZCO0lBQ0o7QUFDSjtBQUNPLE1BQU1FLGVBQWUsQ0FBQ0M7SUFDekIsTUFBTUMsZ0JBQWdCLElBQUlUO0lBQzFCLE1BQU1VLGNBQWMsSUFBSUM7SUFDeEIsS0FBSyxNQUFNbEIsV0FBV2UsV0FBWTtRQUM5QixNQUFNSSxjQUFjLElBQUlEO1FBQ3hCLEtBQUssTUFBTSxDQUFDZCxNQUFNUSxNQUFNLElBQUliLGVBQWVDLFNBQVU7WUFDakQsTUFBTW9CLFlBQVloQixLQUFLaUIsV0FBVztZQUNsQyxJQUFJLENBQUNGLFlBQVlHLEdBQUcsQ0FBQ0YsWUFBWTtnQkFDN0JKLGNBQWNPLE1BQU0sQ0FBQ25CO2dCQUNyQmUsWUFBWUssR0FBRyxDQUFDSjtZQUNwQjtZQUNBLElBQUlSLFVBQVUsTUFBTTtnQkFDaEJJLGNBQWNPLE1BQU0sQ0FBQ25CO2dCQUNyQmEsWUFBWU8sR0FBRyxDQUFDSjtZQUNwQixPQUNLO2dCQUNESixjQUFjUyxNQUFNLENBQUNyQixNQUFNUTtnQkFDM0JLLFlBQVlNLE1BQU0sQ0FBQ0g7WUFDdkI7UUFDSjtJQUNKO0lBQ0EsT0FBTztRQUFFLENBQUN2Qiw2QkFBNkIsRUFBRTtRQUFNSSxRQUFRZTtRQUFlZCxPQUFPZTtJQUFZO0FBQzdGLEVBQUU7QUFDSyxNQUFNUyxpQkFBaUIsQ0FBQzFCO0lBQzNCLEtBQUssTUFBTTJCLEtBQUs1QixlQUFlQyxTQUMzQixPQUFPO0lBQ1gsT0FBTztBQUNYLEVBQUUsQ0FDRixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9oZWFkZXJzLm1qcz9iY2FiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBpc1JlYWRvbmx5QXJyYXkgfSBmcm9tIFwiLi91dGlscy92YWx1ZXMubWpzXCI7XG5jb25zdCBicmFuZF9wcml2YXRlTnVsbGFibGVIZWFkZXJzID0gLyogQF9fUFVSRV9fICovIFN5bWJvbCgnYnJhbmQucHJpdmF0ZU51bGxhYmxlSGVhZGVycycpO1xuZnVuY3Rpb24qIGl0ZXJhdGVIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBpZiAoIWhlYWRlcnMpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoYnJhbmRfcHJpdmF0ZU51bGxhYmxlSGVhZGVycyBpbiBoZWFkZXJzKSB7XG4gICAgICAgIGNvbnN0IHsgdmFsdWVzLCBudWxscyB9ID0gaGVhZGVycztcbiAgICAgICAgeWllbGQqIHZhbHVlcy5lbnRyaWVzKCk7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBvZiBudWxscykge1xuICAgICAgICAgICAgeWllbGQgW25hbWUsIG51bGxdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHNob3VsZENsZWFyID0gZmFsc2U7XG4gICAgbGV0IGl0ZXI7XG4gICAgaWYgKGhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzKSB7XG4gICAgICAgIGl0ZXIgPSBoZWFkZXJzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNSZWFkb25seUFycmF5KGhlYWRlcnMpKSB7XG4gICAgICAgIGl0ZXIgPSBoZWFkZXJzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgc2hvdWxkQ2xlYXIgPSB0cnVlO1xuICAgICAgICBpdGVyID0gT2JqZWN0LmVudHJpZXMoaGVhZGVycyA/PyB7fSk7XG4gICAgfVxuICAgIGZvciAobGV0IHJvdyBvZiBpdGVyKSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSByb3dbMF07XG4gICAgICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gJ3N0cmluZycpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdleHBlY3RlZCBoZWFkZXIgbmFtZSB0byBiZSBhIHN0cmluZycpO1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBpc1JlYWRvbmx5QXJyYXkocm93WzFdKSA/IHJvd1sxXSA6IFtyb3dbMV1dO1xuICAgICAgICBsZXQgZGlkQ2xlYXIgPSBmYWxzZTtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgLy8gT2JqZWN0cyBrZXlzIGFsd2F5cyBvdmVyd3JpdGUgb2xkZXIgaGVhZGVycywgdGhleSBuZXZlciBhcHBlbmQuXG4gICAgICAgICAgICAvLyBZaWVsZCBhIG51bGwgdG8gY2xlYXIgdGhlIGhlYWRlciBiZWZvcmUgYWRkaW5nIHRoZSBuZXcgdmFsdWVzLlxuICAgICAgICAgICAgaWYgKHNob3VsZENsZWFyICYmICFkaWRDbGVhcikge1xuICAgICAgICAgICAgICAgIGRpZENsZWFyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB5aWVsZCBbbmFtZSwgbnVsbF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB5aWVsZCBbbmFtZSwgdmFsdWVdO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IGJ1aWxkSGVhZGVycyA9IChuZXdIZWFkZXJzKSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0SGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XG4gICAgY29uc3QgbnVsbEhlYWRlcnMgPSBuZXcgU2V0KCk7XG4gICAgZm9yIChjb25zdCBoZWFkZXJzIG9mIG5ld0hlYWRlcnMpIHtcbiAgICAgICAgY29uc3Qgc2VlbkhlYWRlcnMgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAoY29uc3QgW25hbWUsIHZhbHVlXSBvZiBpdGVyYXRlSGVhZGVycyhoZWFkZXJzKSkge1xuICAgICAgICAgICAgY29uc3QgbG93ZXJOYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgaWYgKCFzZWVuSGVhZGVycy5oYXMobG93ZXJOYW1lKSkge1xuICAgICAgICAgICAgICAgIHRhcmdldEhlYWRlcnMuZGVsZXRlKG5hbWUpO1xuICAgICAgICAgICAgICAgIHNlZW5IZWFkZXJzLmFkZChsb3dlck5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGFyZ2V0SGVhZGVycy5kZWxldGUobmFtZSk7XG4gICAgICAgICAgICAgICAgbnVsbEhlYWRlcnMuYWRkKGxvd2VyTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXJnZXRIZWFkZXJzLmFwcGVuZChuYW1lLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgbnVsbEhlYWRlcnMuZGVsZXRlKGxvd2VyTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgW2JyYW5kX3ByaXZhdGVOdWxsYWJsZUhlYWRlcnNdOiB0cnVlLCB2YWx1ZXM6IHRhcmdldEhlYWRlcnMsIG51bGxzOiBudWxsSGVhZGVycyB9O1xufTtcbmV4cG9ydCBjb25zdCBpc0VtcHR5SGVhZGVycyA9IChoZWFkZXJzKSA9PiB7XG4gICAgZm9yIChjb25zdCBfIG9mIGl0ZXJhdGVIZWFkZXJzKGhlYWRlcnMpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIHRydWU7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5tanMubWFwIl0sIm5hbWVzIjpbImlzUmVhZG9ubHlBcnJheSIsImJyYW5kX3ByaXZhdGVOdWxsYWJsZUhlYWRlcnMiLCJTeW1ib2wiLCJpdGVyYXRlSGVhZGVycyIsImhlYWRlcnMiLCJ2YWx1ZXMiLCJudWxscyIsImVudHJpZXMiLCJuYW1lIiwic2hvdWxkQ2xlYXIiLCJpdGVyIiwiSGVhZGVycyIsIk9iamVjdCIsInJvdyIsIlR5cGVFcnJvciIsImRpZENsZWFyIiwidmFsdWUiLCJ1bmRlZmluZWQiLCJidWlsZEhlYWRlcnMiLCJuZXdIZWFkZXJzIiwidGFyZ2V0SGVhZGVycyIsIm51bGxIZWFkZXJzIiwiU2V0Iiwic2VlbkhlYWRlcnMiLCJsb3dlck5hbWUiLCJ0b0xvd2VyQ2FzZSIsImhhcyIsImRlbGV0ZSIsImFkZCIsImFwcGVuZCIsImlzRW1wdHlIZWFkZXJzIiwiXyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/parse.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/parse.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addRequestID: () => (/* binding */ addRequestID),\n/* harmony export */   defaultParseResponse: () => (/* binding */ defaultParseResponse)\n/* harmony export */ });\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/streaming.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/streaming.mjs\");\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/log.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nasync function defaultParseResponse(client, props) {\n    const { response, requestLogID, retryOfRequestLogID, startTime } = props;\n    const body = await (async ()=>{\n        if (props.options.stream) {\n            (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(\"response\", response.status, response.url, response.headers, response.body);\n            // Note: there is an invariant here that isn't represented in the type system\n            // that if you set `stream: true` the response type must also be `Stream<T>`\n            if (props.options.__streamClass) {\n                return props.options.__streamClass.fromSSEResponse(response, props.controller, client);\n            }\n            return _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__.Stream.fromSSEResponse(response, props.controller, client);\n        }\n        // fetch refuses to read the body when the status code is 204.\n        if (response.status === 204) {\n            return null;\n        }\n        if (props.options.__binaryResponse) {\n            return response;\n        }\n        const contentType = response.headers.get(\"content-type\");\n        const mediaType = contentType?.split(\";\")[0]?.trim();\n        const isJSON = mediaType?.includes(\"application/json\") || mediaType?.endsWith(\"+json\");\n        if (isJSON) {\n            const json = await response.json();\n            return addRequestID(json, response);\n        }\n        const text = await response.text();\n        return text;\n    })();\n    (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(client).debug(`[${requestLogID}] response parsed`, (0,_utils_log_mjs__WEBPACK_IMPORTED_MODULE_1__.formatRequestDetails)({\n        retryOfRequestLogID,\n        url: response.url,\n        status: response.status,\n        body,\n        durationMs: Date.now() - startTime\n    }));\n    return body;\n}\nfunction addRequestID(value, response) {\n    if (!value || typeof value !== \"object\" || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, \"_request_id\", {\n        value: response.headers.get(\"x-request-id\"),\n        enumerable: false\n    });\n} //# sourceMappingURL=parse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcGFyc2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDdkM7QUFDbUI7QUFDM0QsZUFBZUcscUJBQXFCQyxNQUFNLEVBQUVDLEtBQUs7SUFDcEQsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFlBQVksRUFBRUMsbUJBQW1CLEVBQUVDLFNBQVMsRUFBRSxHQUFHSjtJQUNuRSxNQUFNSyxPQUFPLE1BQU0sQ0FBQztRQUNoQixJQUFJTCxNQUFNTSxPQUFPLENBQUNDLE1BQU0sRUFBRTtZQUN0QlYseURBQVNBLENBQUNFLFFBQVFTLEtBQUssQ0FBQyxZQUFZUCxTQUFTUSxNQUFNLEVBQUVSLFNBQVNTLEdBQUcsRUFBRVQsU0FBU1UsT0FBTyxFQUFFVixTQUFTSSxJQUFJO1lBQ2xHLDZFQUE2RTtZQUM3RSw0RUFBNEU7WUFDNUUsSUFBSUwsTUFBTU0sT0FBTyxDQUFDTSxhQUFhLEVBQUU7Z0JBQzdCLE9BQU9aLE1BQU1NLE9BQU8sQ0FBQ00sYUFBYSxDQUFDQyxlQUFlLENBQUNaLFVBQVVELE1BQU1jLFVBQVUsRUFBRWY7WUFDbkY7WUFDQSxPQUFPSix1REFBTUEsQ0FBQ2tCLGVBQWUsQ0FBQ1osVUFBVUQsTUFBTWMsVUFBVSxFQUFFZjtRQUM5RDtRQUNBLDhEQUE4RDtRQUM5RCxJQUFJRSxTQUFTUSxNQUFNLEtBQUssS0FBSztZQUN6QixPQUFPO1FBQ1g7UUFDQSxJQUFJVCxNQUFNTSxPQUFPLENBQUNTLGdCQUFnQixFQUFFO1lBQ2hDLE9BQU9kO1FBQ1g7UUFDQSxNQUFNZSxjQUFjZixTQUFTVSxPQUFPLENBQUNNLEdBQUcsQ0FBQztRQUN6QyxNQUFNQyxZQUFZRixhQUFhRyxNQUFNLElBQUksQ0FBQyxFQUFFLEVBQUVDO1FBQzlDLE1BQU1DLFNBQVNILFdBQVdJLFNBQVMsdUJBQXVCSixXQUFXSyxTQUFTO1FBQzlFLElBQUlGLFFBQVE7WUFDUixNQUFNRyxPQUFPLE1BQU12QixTQUFTdUIsSUFBSTtZQUNoQyxPQUFPQyxhQUFhRCxNQUFNdkI7UUFDOUI7UUFDQSxNQUFNeUIsT0FBTyxNQUFNekIsU0FBU3lCLElBQUk7UUFDaEMsT0FBT0E7SUFDWDtJQUNBN0IseURBQVNBLENBQUNFLFFBQVFTLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRU4sYUFBYSxpQkFBaUIsQ0FBQyxFQUFFTixvRUFBb0JBLENBQUM7UUFDOUVPO1FBQ0FPLEtBQUtULFNBQVNTLEdBQUc7UUFDakJELFFBQVFSLFNBQVNRLE1BQU07UUFDdkJKO1FBQ0FzQixZQUFZQyxLQUFLQyxHQUFHLEtBQUt6QjtJQUM3QjtJQUNBLE9BQU9DO0FBQ1g7QUFDTyxTQUFTb0IsYUFBYUssS0FBSyxFQUFFN0IsUUFBUTtJQUN4QyxJQUFJLENBQUM2QixTQUFTLE9BQU9BLFVBQVUsWUFBWUMsTUFBTUMsT0FBTyxDQUFDRixRQUFRO1FBQzdELE9BQU9BO0lBQ1g7SUFDQSxPQUFPRyxPQUFPQyxjQUFjLENBQUNKLE9BQU8sZUFBZTtRQUMvQ0EsT0FBTzdCLFNBQVNVLE9BQU8sQ0FBQ00sR0FBRyxDQUFDO1FBQzVCa0IsWUFBWTtJQUNoQjtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcGFyc2UubWpzPzAxYTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IFN0cmVhbSB9IGZyb20gXCIuLi9jb3JlL3N0cmVhbWluZy5tanNcIjtcbmltcG9ydCB7IGZvcm1hdFJlcXVlc3REZXRhaWxzLCBsb2dnZXJGb3IgfSBmcm9tIFwiLi91dGlscy9sb2cubWpzXCI7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGVmYXVsdFBhcnNlUmVzcG9uc2UoY2xpZW50LCBwcm9wcykge1xuICAgIGNvbnN0IHsgcmVzcG9uc2UsIHJlcXVlc3RMb2dJRCwgcmV0cnlPZlJlcXVlc3RMb2dJRCwgc3RhcnRUaW1lIH0gPSBwcm9wcztcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgKGFzeW5jICgpID0+IHtcbiAgICAgICAgaWYgKHByb3BzLm9wdGlvbnMuc3RyZWFtKSB7XG4gICAgICAgICAgICBsb2dnZXJGb3IoY2xpZW50KS5kZWJ1ZygncmVzcG9uc2UnLCByZXNwb25zZS5zdGF0dXMsIHJlc3BvbnNlLnVybCwgcmVzcG9uc2UuaGVhZGVycywgcmVzcG9uc2UuYm9keSk7XG4gICAgICAgICAgICAvLyBOb3RlOiB0aGVyZSBpcyBhbiBpbnZhcmlhbnQgaGVyZSB0aGF0IGlzbid0IHJlcHJlc2VudGVkIGluIHRoZSB0eXBlIHN5c3RlbVxuICAgICAgICAgICAgLy8gdGhhdCBpZiB5b3Ugc2V0IGBzdHJlYW06IHRydWVgIHRoZSByZXNwb25zZSB0eXBlIG11c3QgYWxzbyBiZSBgU3RyZWFtPFQ+YFxuICAgICAgICAgICAgaWYgKHByb3BzLm9wdGlvbnMuX19zdHJlYW1DbGFzcykge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wcy5vcHRpb25zLl9fc3RyZWFtQ2xhc3MuZnJvbVNTRVJlc3BvbnNlKHJlc3BvbnNlLCBwcm9wcy5jb250cm9sbGVyLCBjbGllbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFN0cmVhbS5mcm9tU1NFUmVzcG9uc2UocmVzcG9uc2UsIHByb3BzLmNvbnRyb2xsZXIsIGNsaWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZmV0Y2ggcmVmdXNlcyB0byByZWFkIHRoZSBib2R5IHdoZW4gdGhlIHN0YXR1cyBjb2RlIGlzIDIwNC5cbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA0KSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJvcHMub3B0aW9ucy5fX2JpbmFyeVJlc3BvbnNlKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29udGVudFR5cGUgPSByZXNwb25zZS5oZWFkZXJzLmdldCgnY29udGVudC10eXBlJyk7XG4gICAgICAgIGNvbnN0IG1lZGlhVHlwZSA9IGNvbnRlbnRUeXBlPy5zcGxpdCgnOycpWzBdPy50cmltKCk7XG4gICAgICAgIGNvbnN0IGlzSlNPTiA9IG1lZGlhVHlwZT8uaW5jbHVkZXMoJ2FwcGxpY2F0aW9uL2pzb24nKSB8fCBtZWRpYVR5cGU/LmVuZHNXaXRoKCcranNvbicpO1xuICAgICAgICBpZiAoaXNKU09OKSB7XG4gICAgICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgICAgcmV0dXJuIGFkZFJlcXVlc3RJRChqc29uLCByZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcbiAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfSkoKTtcbiAgICBsb2dnZXJGb3IoY2xpZW50KS5kZWJ1ZyhgWyR7cmVxdWVzdExvZ0lEfV0gcmVzcG9uc2UgcGFyc2VkYCwgZm9ybWF0UmVxdWVzdERldGFpbHMoe1xuICAgICAgICByZXRyeU9mUmVxdWVzdExvZ0lELFxuICAgICAgICB1cmw6IHJlc3BvbnNlLnVybCxcbiAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIGJvZHksXG4gICAgICAgIGR1cmF0aW9uTXM6IERhdGUubm93KCkgLSBzdGFydFRpbWUsXG4gICAgfSkpO1xuICAgIHJldHVybiBib2R5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFJlcXVlc3RJRCh2YWx1ZSwgcmVzcG9uc2UpIHtcbiAgICBpZiAoIXZhbHVlIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcgfHwgQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHZhbHVlLCAnX3JlcXVlc3RfaWQnLCB7XG4gICAgICAgIHZhbHVlOiByZXNwb25zZS5oZWFkZXJzLmdldCgneC1yZXF1ZXN0LWlkJyksXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2UubWpzLm1hcCJdLCJuYW1lcyI6WyJTdHJlYW0iLCJmb3JtYXRSZXF1ZXN0RGV0YWlscyIsImxvZ2dlckZvciIsImRlZmF1bHRQYXJzZVJlc3BvbnNlIiwiY2xpZW50IiwicHJvcHMiLCJyZXNwb25zZSIsInJlcXVlc3RMb2dJRCIsInJldHJ5T2ZSZXF1ZXN0TG9nSUQiLCJzdGFydFRpbWUiLCJib2R5Iiwib3B0aW9ucyIsInN0cmVhbSIsImRlYnVnIiwic3RhdHVzIiwidXJsIiwiaGVhZGVycyIsIl9fc3RyZWFtQ2xhc3MiLCJmcm9tU1NFUmVzcG9uc2UiLCJjb250cm9sbGVyIiwiX19iaW5hcnlSZXNwb25zZSIsImNvbnRlbnRUeXBlIiwiZ2V0IiwibWVkaWFUeXBlIiwic3BsaXQiLCJ0cmltIiwiaXNKU09OIiwiaW5jbHVkZXMiLCJlbmRzV2l0aCIsImpzb24iLCJhZGRSZXF1ZXN0SUQiLCJ0ZXh0IiwiZHVyYXRpb25NcyIsIkRhdGUiLCJub3ciLCJ2YWx1ZSIsIkFycmF5IiwiaXNBcnJheSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/parse.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RFC1738: () => (/* binding */ RFC1738),\n/* harmony export */   RFC3986: () => (/* binding */ RFC3986),\n/* harmony export */   default_format: () => (/* binding */ default_format),\n/* harmony export */   default_formatter: () => (/* binding */ default_formatter),\n/* harmony export */   formatters: () => (/* binding */ formatters)\n/* harmony export */ });\nconst default_format = \"RFC3986\";\nconst default_formatter = (v)=>String(v);\nconst formatters = {\n    RFC1738: (v)=>String(v).replace(/%20/g, \"+\"),\n    RFC3986: default_formatter\n};\nconst RFC1738 = \"RFC1738\";\nconst RFC3986 = \"RFC3986\"; //# sourceMappingURL=formats.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvZm9ybWF0cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxNQUFNQSxpQkFBaUIsVUFBVTtBQUNqQyxNQUFNQyxvQkFBb0IsQ0FBQ0MsSUFBTUMsT0FBT0QsR0FBRztBQUMzQyxNQUFNRSxhQUFhO0lBQ3RCQyxTQUFTLENBQUNILElBQU1DLE9BQU9ELEdBQUdJLE9BQU8sQ0FBQyxRQUFRO0lBQzFDQyxTQUFTTjtBQUNiLEVBQUU7QUFDSyxNQUFNSSxVQUFVLFVBQVU7QUFDMUIsTUFBTUUsVUFBVSxVQUFVLENBQ2pDLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3FzL2Zvcm1hdHMubWpzP2IwZTIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRfZm9ybWF0ID0gJ1JGQzM5ODYnO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRfZm9ybWF0dGVyID0gKHYpID0+IFN0cmluZyh2KTtcbmV4cG9ydCBjb25zdCBmb3JtYXR0ZXJzID0ge1xuICAgIFJGQzE3Mzg6ICh2KSA9PiBTdHJpbmcodikucmVwbGFjZSgvJTIwL2csICcrJyksXG4gICAgUkZDMzk4NjogZGVmYXVsdF9mb3JtYXR0ZXIsXG59O1xuZXhwb3J0IGNvbnN0IFJGQzE3MzggPSAnUkZDMTczOCc7XG5leHBvcnQgY29uc3QgUkZDMzk4NiA9ICdSRkMzOTg2Jztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1hdHMubWpzLm1hcCJdLCJuYW1lcyI6WyJkZWZhdWx0X2Zvcm1hdCIsImRlZmF1bHRfZm9ybWF0dGVyIiwidiIsIlN0cmluZyIsImZvcm1hdHRlcnMiLCJSRkMxNzM4IiwicmVwbGFjZSIsIlJGQzM5ODYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/index.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/index.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formats: () => (/* binding */ formats),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__.stringify)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _stringify_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/stringify.mjs\");\n\nconst formats = {\n    formatters: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.formatters,\n    RFC1738: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738,\n    RFC3986: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC3986,\n    default: _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.default_format\n};\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkU7QUFDN0UsTUFBTUksVUFBVTtJQUNaSCxVQUFVQSxzREFBQUE7SUFDVkMsT0FBT0EsbURBQUFBO0lBQ1BDLE9BQU9BLG1EQUFBQTtJQUNQRSxTQUFTTCx3REFBY0E7QUFDM0I7QUFDNEM7QUFDekIsQ0FDbkIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcXMvaW5kZXgubWpzPzAzZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmYXVsdF9mb3JtYXQsIGZvcm1hdHRlcnMsIFJGQzE3MzgsIFJGQzM5ODYgfSBmcm9tIFwiLi9mb3JtYXRzLm1qc1wiO1xuY29uc3QgZm9ybWF0cyA9IHtcbiAgICBmb3JtYXR0ZXJzLFxuICAgIFJGQzE3MzgsXG4gICAgUkZDMzk4NixcbiAgICBkZWZhdWx0OiBkZWZhdWx0X2Zvcm1hdCxcbn07XG5leHBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi9zdHJpbmdpZnkubWpzXCI7XG5leHBvcnQgeyBmb3JtYXRzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbImRlZmF1bHRfZm9ybWF0IiwiZm9ybWF0dGVycyIsIlJGQzE3MzgiLCJSRkMzOTg2IiwiZm9ybWF0cyIsImRlZmF1bHQiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/stringify.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/stringify.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/utils.mjs\");\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n\n\n\nconst array_prefix_generators = {\n    brackets (prefix) {\n        return String(prefix) + \"[]\";\n    },\n    comma: \"comma\",\n    indices (prefix, key) {\n        return String(prefix) + \"[\" + key + \"]\";\n    },\n    repeat (prefix) {\n        return String(prefix);\n    }\n};\nconst push_to_array = function(arr, value_or_array) {\n    Array.prototype.push.apply(arr, (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(value_or_array) ? value_or_array : [\n        value_or_array\n    ]);\n};\nlet toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: \"indices\",\n    charset: \"utf-8\",\n    charsetSentinel: false,\n    delimiter: \"&\",\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: _utils_mjs__WEBPACK_IMPORTED_MODULE_0__.encode,\n    encodeValuesOnly: false,\n    format: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format,\n    formatter: _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_formatter,\n    /** @deprecated */ indices: false,\n    serializeDate (date) {\n        return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\nfunction is_non_nullish_primitive(v) {\n    return typeof v === \"string\" || typeof v === \"number\" || typeof v === \"boolean\" || typeof v === \"symbol\" || typeof v === \"bigint\";\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag){\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== \"undefined\") {\n            if (pos === step) {\n                throw new RangeError(\"Cyclic object value\");\n            } else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === \"undefined\") {\n            step = 0;\n        }\n    }\n    if (typeof filter === \"function\") {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    } else if (generateArrayPrefix === \"comma\" && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj)) {\n        obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, function(value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? // @ts-expect-error\n            encoder(prefix, defaults.encoder, charset, \"key\", format) : prefix;\n        }\n        obj = \"\";\n    }\n    if (is_non_nullish_primitive(obj) || (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.is_buffer)(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, \"key\", format);\n            return [\n                formatter?.(key_value) + \"=\" + // @ts-expect-error\n                formatter?.(encoder(obj, defaults.encoder, charset, \"value\", format))\n            ];\n        }\n        return [\n            formatter?.(prefix) + \"=\" + formatter?.(String(obj))\n        ];\n    }\n    const values = [];\n    if (typeof obj === \"undefined\") {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === \"comma\" && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.maybe_map)(obj, encoder);\n        }\n        obj_keys = [\n            {\n                value: obj.length > 0 ? obj.join(\",\") || null : void undefined\n            }\n        ];\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(filter)) {\n        obj_keys = filter;\n    } else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, \"%2E\") : String(prefix);\n    const adjusted_prefix = commaRoundTrip && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) && obj.length === 1 ? encoded_prefix + \"[]\" : encoded_prefix;\n    if (allowEmptyArrays && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) && obj.length === 0) {\n        return adjusted_prefix + \"[]\";\n    }\n    for(let j = 0; j < obj_keys.length; ++j){\n        const key = obj_keys[j];\n        const value = // @ts-ignore\n        typeof key === \"object\" && typeof key.value !== \"undefined\" ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, \"%2E\") : key;\n        const key_prefix = (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) ? typeof generateArrayPrefix === \"function\" ? generateArrayPrefix(adjusted_prefix, encoded_key) : adjusted_prefix : adjusted_prefix + (allowDots ? \".\" + encoded_key : \"[\" + encoded_key + \"]\");\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, // @ts-ignore\n        generateArrayPrefix === \"comma\" && encodeValuesOnly && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== \"undefined\" && typeof opts.allowEmptyArrays !== \"boolean\") {\n        throw new TypeError(\"`allowEmptyArrays` option can only be `true` or `false`, when provided\");\n    }\n    if (typeof opts.encodeDotInKeys !== \"undefined\" && typeof opts.encodeDotInKeys !== \"boolean\") {\n        throw new TypeError(\"`encodeDotInKeys` option can only be `true` or `false`, when provided\");\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== \"undefined\" && typeof opts.encoder !== \"function\") {\n        throw new TypeError(\"Encoder has to be a function.\");\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== \"undefined\" && opts.charset !== \"utf-8\" && opts.charset !== \"iso-8859-1\") {\n        throw new TypeError(\"The charset option must be either utf-8, iso-8859-1, or undefined\");\n    }\n    let format = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.default_format;\n    if (typeof opts.format !== \"undefined\") {\n        if (!(0,_utils_mjs__WEBPACK_IMPORTED_MODULE_0__.has)(_formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters, opts.format)) {\n            throw new TypeError(\"Unknown format option provided.\");\n        }\n        format = opts.format;\n    }\n    const formatter = _formats_mjs__WEBPACK_IMPORTED_MODULE_1__.formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === \"function\" || (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (\"indices\" in opts) {\n        arrayFormat = opts.indices ? \"indices\" : \"repeat\";\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if (\"commaRoundTrip\" in opts && typeof opts.commaRoundTrip !== \"boolean\") {\n        throw new TypeError(\"`commaRoundTrip` must be a boolean, or absent\");\n    }\n    const allowDots = typeof opts.allowDots === \"undefined\" ? !!opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === \"boolean\" ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === \"boolean\" ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === \"boolean\" ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === \"undefined\" ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === \"boolean\" ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === \"boolean\" ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === \"function\" ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === \"boolean\" ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === \"function\" ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === \"boolean\" ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === \"function\" ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === \"boolean\" ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n}\nfunction stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === \"function\") {\n        filter = options.filter;\n        obj = filter(\"\", obj);\n    } else if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_2__.isArray)(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== \"object\" || obj === null) {\n        return \"\";\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === \"comma\" && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for(let i = 0; i < obj_keys.length; ++i){\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? \"?\" : \"\";\n    if (options.charsetSentinel) {\n        if (options.charset === \"iso-8859-1\") {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += \"utf8=%26%2310003%3B&\";\n        } else {\n            // encodeURIComponent('✓')\n            prefix += \"utf8=%E2%9C%93&\";\n        }\n    }\n    return joined.length > 0 ? prefix + joined : \"\";\n} //# sourceMappingURL=stringify.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/stringify.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/utils.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/utils.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assign_single_source: () => (/* binding */ assign_single_source),\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   compact: () => (/* binding */ compact),\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   has: () => (/* binding */ has),\n/* harmony export */   is_buffer: () => (/* binding */ is_buffer),\n/* harmony export */   is_regexp: () => (/* binding */ is_regexp),\n/* harmony export */   maybe_map: () => (/* binding */ maybe_map),\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var _formats_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formats.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/formats.mjs\");\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n\n\nlet has = (obj, key)=>(has = Object.hasOwn ?? Function.prototype.call.bind(Object.prototype.hasOwnProperty), has(obj, key));\nconst hex_table = /* @__PURE__ */ (()=>{\n    const array = [];\n    for(let i = 0; i < 256; ++i){\n        array.push(\"%\" + ((i < 16 ? \"0\" : \"\") + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while(queue.length > 1){\n        const item = queue.pop();\n        if (!item) continue;\n        const obj = item.obj[item.prop];\n        if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(obj)) {\n            const compacted = [];\n            for(let j = 0; j < obj.length; ++j){\n                if (typeof obj[j] !== \"undefined\") {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for(let i = 0; i < source.length; ++i){\n        if (typeof source[i] !== \"undefined\") {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nfunction merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== \"object\") {\n        if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target)) {\n            target.push(source);\n        } else if (target && typeof target === \"object\") {\n            if (options && (options.plainObjects || options.allowPrototypes) || !has(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [\n                target,\n                source\n            ];\n        }\n        return target;\n    }\n    if (!target || typeof target !== \"object\") {\n        return [\n            target\n        ].concat(source);\n    }\n    let mergeTarget = target;\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target) && !(0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(target) && (0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(source)) {\n        source.forEach(function(item, i) {\n            if (has(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === \"object\" && item && typeof item === \"object\") {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function(acc, key) {\n        const value = source[key];\n        if (has(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nfunction assign_single_source(target, source) {\n    return Object.keys(source).reduce(function(acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nfunction decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, \" \");\n    if (charset === \"iso-8859-1\") {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nconst encode = (str, _defaultEncoder, charset, _kind, format)=>{\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === \"symbol\") {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== \"string\") {\n        string = String(str);\n    }\n    if (charset === \"iso-8859-1\") {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function($0) {\n            return \"%26%23\" + parseInt($0.slice(2), 16) + \"%3B\";\n        });\n    }\n    let out = \"\";\n    for(let j = 0; j < string.length; j += limit){\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for(let i = 0; i < segment.length; ++i){\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n            c === 0x2e || // .\n            c === 0x5f || // _\n            c === 0x7e || // ~\n            c >= 0x30 && c <= 0x39 || // 0-9\n            c >= 0x41 && c <= 0x5a || // a-z\n            c >= 0x61 && c <= 0x7a || // A-Z\n            format === _formats_mjs__WEBPACK_IMPORTED_MODULE_0__.RFC1738 && (c === 0x28 || c === 0x29) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | c >> 6] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] = hex_table[0xe0 | c >> 12] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + ((c & 0x3ff) << 10 | segment.charCodeAt(i) & 0x3ff);\n            arr[arr.length] = hex_table[0xf0 | c >> 18] + hex_table[0x80 | c >> 12 & 0x3f] + hex_table[0x80 | c >> 6 & 0x3f] + hex_table[0x80 | c & 0x3f];\n        }\n        out += arr.join(\"\");\n    }\n    return out;\n};\nfunction compact(value) {\n    const queue = [\n        {\n            obj: {\n                o: value\n            },\n            prop: \"o\"\n        }\n    ];\n    const refs = [];\n    for(let i = 0; i < queue.length; ++i){\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for(let j = 0; j < keys.length; ++j){\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === \"object\" && val !== null && refs.indexOf(val) === -1) {\n                queue.push({\n                    obj: obj,\n                    prop: key\n                });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nfunction is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === \"[object RegExp]\";\n}\nfunction is_buffer(obj) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nfunction combine(a, b) {\n    return [].concat(a, b);\n}\nfunction maybe_map(val, fn) {\n    if ((0,_utils_values_mjs__WEBPACK_IMPORTED_MODULE_1__.isArray)(val)) {\n        const mapped = [];\n        for(let i = 0; i < val.length; i += 1){\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n} //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/qs/utils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/request-options.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/request-options.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FallbackEncoder: () => (/* binding */ FallbackEncoder)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst FallbackEncoder = ({ headers, body })=>{\n    return {\n        bodyHeaders: {\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    };\n}; //# sourceMappingURL=request-options.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvcmVxdWVzdC1vcHRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0ZBQXNGO0FBQy9FLE1BQU1BLGtCQUFrQixDQUFDLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFO0lBQzdDLE9BQU87UUFDSEMsYUFBYTtZQUNULGdCQUFnQjtRQUNwQjtRQUNBRCxNQUFNRSxLQUFLQyxTQUFTLENBQUNIO0lBQ3pCO0FBQ0osRUFBRSxDQUNGLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3JlcXVlc3Qtb3B0aW9ucy5tanM/Y2NjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGNvbnN0IEZhbGxiYWNrRW5jb2RlciA9ICh7IGhlYWRlcnMsIGJvZHkgfSkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIGJvZHlIZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShib2R5KSxcbiAgICB9O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3Qtb3B0aW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkZhbGxiYWNrRW5jb2RlciIsImhlYWRlcnMiLCJib2R5IiwiYm9keUhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/request-options.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelReadableStream: () => (/* binding */ CancelReadableStream),\n/* harmony export */   ReadableStreamFrom: () => (/* binding */ ReadableStreamFrom),\n/* harmony export */   ReadableStreamToAsyncIterable: () => (/* binding */ ReadableStreamToAsyncIterable),\n/* harmony export */   getDefaultFetch: () => (/* binding */ getDefaultFetch),\n/* harmony export */   makeReadableStream: () => (/* binding */ makeReadableStream)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nfunction getDefaultFetch() {\n    if (typeof fetch !== \"undefined\") {\n        return fetch;\n    }\n    throw new Error(\"`fetch` is not defined as a global; Either pass `fetch` to the client, `new OpenAI({ fetch })` or polyfill the global, `globalThis.fetch = fetch`\");\n}\nfunction makeReadableStream(...args) {\n    const ReadableStream = globalThis.ReadableStream;\n    if (typeof ReadableStream === \"undefined\") {\n        // Note: All of the platforms / runtimes we officially support already define\n        // `ReadableStream` as a global, so this should only ever be hit on unsupported runtimes.\n        throw new Error(\"`ReadableStream` is not defined as a global; You will need to polyfill it, `globalThis.ReadableStream = ReadableStream`\");\n    }\n    return new ReadableStream(...args);\n}\nfunction ReadableStreamFrom(iterable) {\n    let iter = Symbol.asyncIterator in iterable ? iterable[Symbol.asyncIterator]() : iterable[Symbol.iterator]();\n    return makeReadableStream({\n        start () {},\n        async pull (controller) {\n            const { done, value } = await iter.next();\n            if (done) {\n                controller.close();\n            } else {\n                controller.enqueue(value);\n            }\n        },\n        async cancel () {\n            await iter.return?.();\n        }\n    });\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */ function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator]) return stream;\n    const reader = stream.getReader();\n    return {\n        async next () {\n            try {\n                const result = await reader.read();\n                if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            } catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return () {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return {\n                done: true,\n                value: undefined\n            };\n        },\n        [Symbol.asyncIterator] () {\n            return this;\n        }\n    };\n}\n/**\n * Cancels a ReadableStream we don't need to consume.\n * See https://undici.nodejs.org/#/?id=garbage-collection\n */ async function CancelReadableStream(stream) {\n    if (stream === null || typeof stream !== \"object\") return;\n    if (stream[Symbol.asyncIterator]) {\n        await stream[Symbol.asyncIterator]().return?.();\n        return;\n    }\n    const reader = stream.getReader();\n    const cancelPromise = reader.cancel();\n    reader.releaseLock();\n    await cancelPromise;\n} //# sourceMappingURL=shims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvc2hpbXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQy9FLFNBQVNBO0lBQ1osSUFBSSxPQUFPQyxVQUFVLGFBQWE7UUFDOUIsT0FBT0E7SUFDWDtJQUNBLE1BQU0sSUFBSUMsTUFBTTtBQUNwQjtBQUNPLFNBQVNDLG1CQUFtQixHQUFHQyxJQUFJO0lBQ3RDLE1BQU1DLGlCQUFpQkMsV0FBV0QsY0FBYztJQUNoRCxJQUFJLE9BQU9BLG1CQUFtQixhQUFhO1FBQ3ZDLDZFQUE2RTtRQUM3RSx5RkFBeUY7UUFDekYsTUFBTSxJQUFJSCxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJRyxrQkFBa0JEO0FBQ2pDO0FBQ08sU0FBU0csbUJBQW1CQyxRQUFRO0lBQ3ZDLElBQUlDLE9BQU9DLE9BQU9DLGFBQWEsSUFBSUgsV0FBV0EsUUFBUSxDQUFDRSxPQUFPQyxhQUFhLENBQUMsS0FBS0gsUUFBUSxDQUFDRSxPQUFPRSxRQUFRLENBQUM7SUFDMUcsT0FBT1QsbUJBQW1CO1FBQ3RCVSxVQUFVO1FBQ1YsTUFBTUMsTUFBS0MsVUFBVTtZQUNqQixNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTVIsS0FBS1MsSUFBSTtZQUN2QyxJQUFJRixNQUFNO2dCQUNORCxXQUFXSSxLQUFLO1lBQ3BCLE9BQ0s7Z0JBQ0RKLFdBQVdLLE9BQU8sQ0FBQ0g7WUFDdkI7UUFDSjtRQUNBLE1BQU1JO1lBQ0YsTUFBTVosS0FBS2EsTUFBTTtRQUNyQjtJQUNKO0FBQ0o7QUFDQTs7Ozs7Q0FLQyxHQUNNLFNBQVNDLDhCQUE4QkMsTUFBTTtJQUNoRCxJQUFJQSxNQUFNLENBQUNkLE9BQU9DLGFBQWEsQ0FBQyxFQUM1QixPQUFPYTtJQUNYLE1BQU1DLFNBQVNELE9BQU9FLFNBQVM7SUFDL0IsT0FBTztRQUNILE1BQU1SO1lBQ0YsSUFBSTtnQkFDQSxNQUFNUyxTQUFTLE1BQU1GLE9BQU9HLElBQUk7Z0JBQ2hDLElBQUlELFFBQVFYLE1BQ1JTLE9BQU9JLFdBQVcsSUFBSSwwQ0FBMEM7Z0JBQ3BFLE9BQU9GO1lBQ1gsRUFDQSxPQUFPRyxHQUFHO2dCQUNOTCxPQUFPSSxXQUFXLElBQUksMkNBQTJDO2dCQUNqRSxNQUFNQztZQUNWO1FBQ0o7UUFDQSxNQUFNUjtZQUNGLE1BQU1TLGdCQUFnQk4sT0FBT0osTUFBTTtZQUNuQ0ksT0FBT0ksV0FBVztZQUNsQixNQUFNRTtZQUNOLE9BQU87Z0JBQUVmLE1BQU07Z0JBQU1DLE9BQU9lO1lBQVU7UUFDMUM7UUFDQSxDQUFDdEIsT0FBT0MsYUFBYSxDQUFDO1lBQ2xCLE9BQU8sSUFBSTtRQUNmO0lBQ0o7QUFDSjtBQUNBOzs7Q0FHQyxHQUNNLGVBQWVzQixxQkFBcUJULE1BQU07SUFDN0MsSUFBSUEsV0FBVyxRQUFRLE9BQU9BLFdBQVcsVUFDckM7SUFDSixJQUFJQSxNQUFNLENBQUNkLE9BQU9DLGFBQWEsQ0FBQyxFQUFFO1FBQzlCLE1BQU1hLE1BQU0sQ0FBQ2QsT0FBT0MsYUFBYSxDQUFDLEdBQUdXLE1BQU07UUFDM0M7SUFDSjtJQUNBLE1BQU1HLFNBQVNELE9BQU9FLFNBQVM7SUFDL0IsTUFBTUssZ0JBQWdCTixPQUFPSixNQUFNO0lBQ25DSSxPQUFPSSxXQUFXO0lBQ2xCLE1BQU1FO0FBQ1YsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC9zaGltcy5tanM/NGJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmF1bHRGZXRjaCgpIHtcbiAgICBpZiAodHlwZW9mIGZldGNoICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmV0Y2g7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignYGZldGNoYCBpcyBub3QgZGVmaW5lZCBhcyBhIGdsb2JhbDsgRWl0aGVyIHBhc3MgYGZldGNoYCB0byB0aGUgY2xpZW50LCBgbmV3IE9wZW5BSSh7IGZldGNoIH0pYCBvciBwb2x5ZmlsbCB0aGUgZ2xvYmFsLCBgZ2xvYmFsVGhpcy5mZXRjaCA9IGZldGNoYCcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1ha2VSZWFkYWJsZVN0cmVhbSguLi5hcmdzKSB7XG4gICAgY29uc3QgUmVhZGFibGVTdHJlYW0gPSBnbG9iYWxUaGlzLlJlYWRhYmxlU3RyZWFtO1xuICAgIGlmICh0eXBlb2YgUmVhZGFibGVTdHJlYW0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIC8vIE5vdGU6IEFsbCBvZiB0aGUgcGxhdGZvcm1zIC8gcnVudGltZXMgd2Ugb2ZmaWNpYWxseSBzdXBwb3J0IGFscmVhZHkgZGVmaW5lXG4gICAgICAgIC8vIGBSZWFkYWJsZVN0cmVhbWAgYXMgYSBnbG9iYWwsIHNvIHRoaXMgc2hvdWxkIG9ubHkgZXZlciBiZSBoaXQgb24gdW5zdXBwb3J0ZWQgcnVudGltZXMuXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignYFJlYWRhYmxlU3RyZWFtYCBpcyBub3QgZGVmaW5lZCBhcyBhIGdsb2JhbDsgWW91IHdpbGwgbmVlZCB0byBwb2x5ZmlsbCBpdCwgYGdsb2JhbFRoaXMuUmVhZGFibGVTdHJlYW0gPSBSZWFkYWJsZVN0cmVhbWAnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbSguLi5hcmdzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBSZWFkYWJsZVN0cmVhbUZyb20oaXRlcmFibGUpIHtcbiAgICBsZXQgaXRlciA9IFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGl0ZXJhYmxlID8gaXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkgOiBpdGVyYWJsZVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgcmV0dXJuIG1ha2VSZWFkYWJsZVN0cmVhbSh7XG4gICAgICAgIHN0YXJ0KCkgeyB9LFxuICAgICAgICBhc3luYyBwdWxsKGNvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZG9uZSwgdmFsdWUgfSA9IGF3YWl0IGl0ZXIubmV4dCgpO1xuICAgICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyBjYW5jZWwoKSB7XG4gICAgICAgICAgICBhd2FpdCBpdGVyLnJldHVybj8uKCk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vKipcbiAqIE1vc3QgYnJvd3NlcnMgZG9uJ3QgeWV0IGhhdmUgYXN5bmMgaXRlcmFibGUgc3VwcG9ydCBmb3IgUmVhZGFibGVTdHJlYW0sXG4gKiBhbmQgTm9kZSBoYXMgYSB2ZXJ5IGRpZmZlcmVudCB3YXkgb2YgcmVhZGluZyBieXRlcyBmcm9tIGl0cyBcIlJlYWRhYmxlU3RyZWFtXCIuXG4gKlxuICogVGhpcyBwb2x5ZmlsbCB3YXMgcHVsbGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL01hdHRpYXNCdWVsZW5zL3dlYi1zdHJlYW1zLXBvbHlmaWxsL3B1bGwvMTIyI2lzc3VlY29tbWVudC0xNjI3MzU0NDkwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBSZWFkYWJsZVN0cmVhbVRvQXN5bmNJdGVyYWJsZShzdHJlYW0pIHtcbiAgICBpZiAoc3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSlcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICBjb25zdCByZWFkZXIgPSBzdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXN5bmMgbmV4dCgpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVhZGVyLnJlYWQoKTtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Py5kb25lKVxuICAgICAgICAgICAgICAgICAgICByZWFkZXIucmVsZWFzZUxvY2soKTsgLy8gcmVsZWFzZSBsb2NrIHdoZW4gc3RyZWFtIGJlY29tZXMgY2xvc2VkXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7IC8vIHJlbGVhc2UgbG9jayB3aGVuIHN0cmVhbSBiZWNvbWVzIGVycm9yZWRcbiAgICAgICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyByZXR1cm4oKSB7XG4gICAgICAgICAgICBjb25zdCBjYW5jZWxQcm9taXNlID0gcmVhZGVyLmNhbmNlbCgpO1xuICAgICAgICAgICAgcmVhZGVyLnJlbGVhc2VMb2NrKCk7XG4gICAgICAgICAgICBhd2FpdCBjYW5jZWxQcm9taXNlO1xuICAgICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IHVuZGVmaW5lZCB9O1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQ2FuY2VscyBhIFJlYWRhYmxlU3RyZWFtIHdlIGRvbid0IG5lZWQgdG8gY29uc3VtZS5cbiAqIFNlZSBodHRwczovL3VuZGljaS5ub2RlanMub3JnLyMvP2lkPWdhcmJhZ2UtY29sbGVjdGlvblxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gQ2FuY2VsUmVhZGFibGVTdHJlYW0oc3RyZWFtKSB7XG4gICAgaWYgKHN0cmVhbSA9PT0gbnVsbCB8fCB0eXBlb2Ygc3RyZWFtICE9PSAnb2JqZWN0JylcbiAgICAgICAgcmV0dXJuO1xuICAgIGlmIChzdHJlYW1bU3ltYm9sLmFzeW5jSXRlcmF0b3JdKSB7XG4gICAgICAgIGF3YWl0IHN0cmVhbVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKS5yZXR1cm4/LigpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHJlYWRlciA9IHN0cmVhbS5nZXRSZWFkZXIoKTtcbiAgICBjb25zdCBjYW5jZWxQcm9taXNlID0gcmVhZGVyLmNhbmNlbCgpO1xuICAgIHJlYWRlci5yZWxlYXNlTG9jaygpO1xuICAgIGF3YWl0IGNhbmNlbFByb21pc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGltcy5tanMubWFwIl0sIm5hbWVzIjpbImdldERlZmF1bHRGZXRjaCIsImZldGNoIiwiRXJyb3IiLCJtYWtlUmVhZGFibGVTdHJlYW0iLCJhcmdzIiwiUmVhZGFibGVTdHJlYW0iLCJnbG9iYWxUaGlzIiwiUmVhZGFibGVTdHJlYW1Gcm9tIiwiaXRlcmFibGUiLCJpdGVyIiwiU3ltYm9sIiwiYXN5bmNJdGVyYXRvciIsIml0ZXJhdG9yIiwic3RhcnQiLCJwdWxsIiwiY29udHJvbGxlciIsImRvbmUiLCJ2YWx1ZSIsIm5leHQiLCJjbG9zZSIsImVucXVldWUiLCJjYW5jZWwiLCJyZXR1cm4iLCJSZWFkYWJsZVN0cmVhbVRvQXN5bmNJdGVyYWJsZSIsInN0cmVhbSIsInJlYWRlciIsImdldFJlYWRlciIsInJlc3VsdCIsInJlYWQiLCJyZWxlYXNlTG9jayIsImUiLCJjYW5jZWxQcm9taXNlIiwidW5kZWZpbmVkIiwiQ2FuY2VsUmVhZGFibGVTdHJlYW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/to-file.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/to-file.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toFile: () => (/* binding */ toFile)\n/* harmony export */ });\n/* harmony import */ var _uploads_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n\n\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isBlobLike = (value)=>value != null && typeof value === \"object\" && typeof value.size === \"number\" && typeof value.type === \"string\" && typeof value.text === \"function\" && typeof value.slice === \"function\" && typeof value.arrayBuffer === \"function\";\n/**\n * This check adds the arrayBuffer() method type because it is available and used at runtime\n */ const isFileLike = (value)=>value != null && typeof value === \"object\" && typeof value.name === \"string\" && typeof value.lastModified === \"number\" && isBlobLike(value);\nconst isResponseLike = (value)=>value != null && typeof value === \"object\" && typeof value.url === \"string\" && typeof value.blob === \"function\";\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file. Can be an {@link Uploadable}, BlobLikePart, or AsyncIterable of BlobLikeParts\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */ async function toFile(value, name, options) {\n    (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.checkFileSupport)();\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        if (value instanceof File) {\n            return value;\n        }\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)([\n            await value.arrayBuffer()\n        ], value.name);\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop());\n        return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(await getBytes(blob), name, options);\n    }\n    const parts = await getBytes(value);\n    name || (name = (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.getName)(value));\n    if (!options?.type) {\n        const type = parts.find((part)=>typeof part === \"object\" && \"type\" in part && part.type);\n        if (typeof type === \"string\") {\n            options = {\n                ...options,\n                type\n            };\n        }\n    }\n    return (0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.makeFile)(parts, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === \"string\" || ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer) {\n        parts.push(value);\n    } else if (isBlobLike(value)) {\n        parts.push(value instanceof Blob ? value : await value.arrayBuffer());\n    } else if ((0,_uploads_mjs__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value){\n            parts.push(...await getBytes(chunk)); // TODO, consider validating?\n        }\n    } else {\n        const constructor = value?.constructor?.name;\n        throw new Error(`Unexpected data type: ${typeof value}${constructor ? `; constructor: ${constructor}` : \"\"}${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    if (typeof value !== \"object\" || value === null) return \"\";\n    const props = Object.getOwnPropertyNames(value);\n    return `; props: [${props.map((p)=>`\"${p}\"`).join(\", \")}]`;\n} //# sourceMappingURL=to-file.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/to-file.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdHNsaWIubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsU0FBU0EsdUJBQXVCQyxRQUFRLEVBQUVDLEtBQUssRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUVDLENBQUM7SUFDM0QsSUFBSUQsU0FBUyxLQUNULE1BQU0sSUFBSUUsVUFBVTtJQUN4QixJQUFJRixTQUFTLE9BQU8sQ0FBQ0MsR0FDakIsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCLElBQUksT0FBT0osVUFBVSxhQUFhRCxhQUFhQyxTQUFTLENBQUNHLElBQUksQ0FBQ0gsTUFBTUssR0FBRyxDQUFDTixXQUNwRSxNQUFNLElBQUlLLFVBQVU7SUFDeEIsT0FBT0YsU0FBUyxNQUFNQyxFQUFFRyxJQUFJLENBQUNQLFVBQVVFLFNBQVNFLElBQUtBLEVBQUVGLEtBQUssR0FBR0EsUUFBU0QsTUFBTU8sR0FBRyxDQUFDUixVQUFVRSxRQUFRQTtBQUN4RztBQUNBLFNBQVNPLHVCQUF1QlQsUUFBUSxFQUFFQyxLQUFLLEVBQUVFLElBQUksRUFBRUMsQ0FBQztJQUNwRCxJQUFJRCxTQUFTLE9BQU8sQ0FBQ0MsR0FDakIsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCLElBQUksT0FBT0osVUFBVSxhQUFhRCxhQUFhQyxTQUFTLENBQUNHLElBQUksQ0FBQ0gsTUFBTUssR0FBRyxDQUFDTixXQUNwRSxNQUFNLElBQUlLLFVBQVU7SUFDeEIsT0FBT0YsU0FBUyxNQUFNQyxJQUFJRCxTQUFTLE1BQU1DLEVBQUVHLElBQUksQ0FBQ1AsWUFBWUksSUFBSUEsRUFBRUYsS0FBSyxHQUFHRCxNQUFNUyxHQUFHLENBQUNWO0FBQ3hGO0FBQzBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdHNsaWIubWpzPzhlYTQiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZFNldChyZWNlaXZlciwgc3RhdGUsIHZhbHVlLCBraW5kLCBmKSB7XG4gICAgaWYgKGtpbmQgPT09IFwibVwiKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBtZXRob2QgaXMgbm90IHdyaXRhYmxlXCIpO1xuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZilcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSlcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCB3cml0ZSBwcml2YXRlIG1lbWJlciB0byBhbiBvYmplY3Qgd2hvc2UgY2xhc3MgZGlkIG5vdCBkZWNsYXJlIGl0XCIpO1xuICAgIHJldHVybiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlciwgdmFsdWUpIDogZiA/IChmLnZhbHVlID0gdmFsdWUpIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSksIHZhbHVlO1xufVxuZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZEdldChyZWNlaXZlciwgc3RhdGUsIGtpbmQsIGYpIHtcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XG4gICAgaWYgKHR5cGVvZiBzdGF0ZSA9PT0gXCJmdW5jdGlvblwiID8gcmVjZWl2ZXIgIT09IHN0YXRlIHx8ICFmIDogIXN0YXRlLmhhcyhyZWNlaXZlcikpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgcmVhZCBwcml2YXRlIG1lbWJlciBmcm9tIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XG4gICAgcmV0dXJuIGtpbmQgPT09IFwibVwiID8gZiA6IGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyKSA6IGYgPyBmLnZhbHVlIDogc3RhdGUuZ2V0KHJlY2VpdmVyKTtcbn1cbmV4cG9ydCB7IF9fY2xhc3NQcml2YXRlRmllbGRTZXQsIF9fY2xhc3NQcml2YXRlRmllbGRHZXQgfTtcbiJdLCJuYW1lcyI6WyJfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwicmVjZWl2ZXIiLCJzdGF0ZSIsInZhbHVlIiwia2luZCIsImYiLCJUeXBlRXJyb3IiLCJoYXMiLCJjYWxsIiwic2V0IiwiX19jbGFzc1ByaXZhdGVGaWVsZEdldCIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFileSupport: () => (/* binding */ checkFileSupport),\n/* harmony export */   createForm: () => (/* binding */ createForm),\n/* harmony export */   getName: () => (/* binding */ getName),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   makeFile: () => (/* binding */ makeFile),\n/* harmony export */   maybeMultipartFormRequestOptions: () => (/* binding */ maybeMultipartFormRequestOptions),\n/* harmony export */   multipartFormRequestOptions: () => (/* binding */ multipartFormRequestOptions)\n/* harmony export */ });\n/* harmony import */ var _shims_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shims.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/shims.mjs\");\n\nconst checkFileSupport = ()=>{\n    if (typeof File === \"undefined\") {\n        const { process } = globalThis;\n        const isOldNode = typeof process?.versions?.node === \"string\" && parseInt(process.versions.node.split(\".\")) < 20;\n        throw new Error(\"`File` is not defined as a global, which is required for file uploads.\" + (isOldNode ? \" Update to Node 20 LTS or newer, or set `globalThis.File` to `import('node:buffer').File`.\" : \"\"));\n    }\n};\n/**\n * Construct a `File` instance. This is used to ensure a helpful error is thrown\n * for environments that don't define a global `File` yet.\n */ function makeFile(fileBits, fileName, options) {\n    checkFileSupport();\n    return new File(fileBits, fileName ?? \"unknown_file\", options);\n}\nfunction getName(value) {\n    return (typeof value === \"object\" && value !== null && (\"name\" in value && value.name && String(value.name) || \"url\" in value && value.url && String(value.url) || \"filename\" in value && value.filename && String(value.filename) || \"path\" in value && value.path && String(value.path)) || \"\").split(/[\\\\/]/).pop() || undefined;\n}\nconst isAsyncIterable = (value)=>value != null && typeof value === \"object\" && typeof value[Symbol.asyncIterator] === \"function\";\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */ const maybeMultipartFormRequestOptions = async (opts, fetch)=>{\n    if (!hasUploadableValue(opts.body)) return opts;\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst multipartFormRequestOptions = async (opts, fetch)=>{\n    return {\n        ...opts,\n        body: await createForm(opts.body, fetch)\n    };\n};\nconst supportsFormDataMap = /* @__PURE__ */ new WeakMap();\n/**\n * node-fetch doesn't support the global FormData object in recent node versions. Instead of sending\n * properly-encoded form data, it just stringifies the object, resulting in a request body of \"[object FormData]\".\n * This function detects if the fetch function provided supports the global FormData object to avoid\n * confusing error messages later on.\n */ function supportsFormData(fetchObject) {\n    const fetch = typeof fetchObject === \"function\" ? fetchObject : fetchObject.fetch;\n    const cached = supportsFormDataMap.get(fetch);\n    if (cached) return cached;\n    const promise = (async ()=>{\n        try {\n            const FetchResponse = \"Response\" in fetch ? fetch.Response : (await fetch(\"data:,\")).constructor;\n            const data = new FormData();\n            if (data.toString() === await new FetchResponse(data).text()) {\n                return false;\n            }\n            return true;\n        } catch  {\n            // avoid false negatives\n            return true;\n        }\n    })();\n    supportsFormDataMap.set(fetch, promise);\n    return promise;\n}\nconst createForm = async (body, fetch)=>{\n    if (!await supportsFormData(fetch)) {\n        throw new TypeError(\"The provided fetch function does not support file uploads with the current global FormData class.\");\n    }\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value])=>addFormValue(form, key, value)));\n    return form;\n};\n// We check for Blob not File because Bun.File doesn't inherit from File,\n// but they both inherit from Blob and have a `name` property at runtime.\nconst isNamedBlob = (value)=>value instanceof Blob && \"name\" in value;\nconst isUploadable = (value)=>typeof value === \"object\" && value !== null && (value instanceof Response || isAsyncIterable(value) || isNamedBlob(value));\nconst hasUploadableValue = (value)=>{\n    if (isUploadable(value)) return true;\n    if (Array.isArray(value)) return value.some(hasUploadableValue);\n    if (value && typeof value === \"object\") {\n        for(const k in value){\n            if (hasUploadableValue(value[k])) return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value)=>{\n    if (value === undefined) return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n        form.append(key, String(value));\n    } else if (value instanceof Response) {\n        form.append(key, makeFile([\n            await value.blob()\n        ], getName(value)));\n    } else if (isAsyncIterable(value)) {\n        form.append(key, makeFile([\n            await new Response((0,_shims_mjs__WEBPACK_IMPORTED_MODULE_0__.ReadableStreamFrom)(value)).blob()\n        ], getName(value)));\n    } else if (isNamedBlob(value)) {\n        form.append(key, value, getName(value));\n    } else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry)=>addFormValue(form, key + \"[]\", entry)));\n    } else if (typeof value === \"object\") {\n        await Promise.all(Object.entries(value).map(([name, prop])=>addFormValue(form, `${key}[${name}]`, prop)));\n    } else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n}; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceBoolean: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceFloat),\n/* harmony export */   coerceInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.coerceInteger),\n/* harmony export */   ensurePresent: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.ensurePresent),\n/* harmony export */   formatRequestDetails: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.formatRequestDetails),\n/* harmony export */   fromBase64: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.fromBase64),\n/* harmony export */   hasOwn: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.hasOwn),\n/* harmony export */   isAbsoluteURL: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isAbsoluteURL),\n/* harmony export */   isArray: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isArray),\n/* harmony export */   isEmptyObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isEmptyObj),\n/* harmony export */   isObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isObj),\n/* harmony export */   isReadonlyArray: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.isReadonlyArray),\n/* harmony export */   loggerFor: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.loggerFor),\n/* harmony export */   maybeCoerceBoolean: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeCoerceInteger),\n/* harmony export */   maybeObj: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.maybeObj),\n/* harmony export */   parseLogLevel: () => (/* reexport safe */ _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__.parseLogLevel),\n/* harmony export */   readEnv: () => (/* reexport safe */ _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__.readEnv),\n/* harmony export */   safeJSON: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.safeJSON),\n/* harmony export */   sleep: () => (/* reexport safe */ _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__.sleep),\n/* harmony export */   toBase64: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.toBase64),\n/* harmony export */   toFloat32Array: () => (/* reexport safe */ _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__.toFloat32Array),\n/* harmony export */   uuid4: () => (/* reexport safe */ _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__.uuid4),\n/* harmony export */   validatePositiveInteger: () => (/* reexport safe */ _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__.validatePositiveInteger)\n/* harmony export */ });\n/* harmony import */ var _utils_values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n/* harmony import */ var _utils_base64_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/base64.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/base64.mjs\");\n/* harmony import */ var _utils_env_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/env.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/env.mjs\");\n/* harmony import */ var _utils_log_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/log.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs\");\n/* harmony import */ var _utils_uuid_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/uuid.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/uuid.mjs\");\n/* harmony import */ var _utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/sleep.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n //# sourceMappingURL=utils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkQ7QUFDQTtBQUNIO0FBQ0E7QUFDQztBQUNDLENBQ2xDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzLm1qcz8wZDIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy92YWx1ZXMubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9iYXNlNjQubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9lbnYubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy9sb2cubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91dGlscy91dWlkLm1qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHMvc2xlZXAubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/base64.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/base64.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBase64: () => (/* binding */ fromBase64),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toFloat32Array: () => (/* binding */ toFloat32Array)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n/* harmony import */ var _bytes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bytes.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nconst toBase64 = (data)=>{\n    if (!data) return \"\";\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        return globalThis.Buffer.from(data).toString(\"base64\");\n    }\n    if (typeof data === \"string\") {\n        data = (0,_bytes_mjs__WEBPACK_IMPORTED_MODULE_1__.encodeUTF8)(data);\n    }\n    if (typeof btoa !== \"undefined\") {\n        return btoa(String.fromCharCode.apply(null, data));\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot generate base64 string; Expected `Buffer` or `btoa` to be defined\");\n};\nconst fromBase64 = (str)=>{\n    if (typeof globalThis.Buffer !== \"undefined\") {\n        const buf = globalThis.Buffer.from(str, \"base64\");\n        return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    if (typeof atob !== \"undefined\") {\n        const bstr = atob(str);\n        const buf = new Uint8Array(bstr.length);\n        for(let i = 0; i < bstr.length; i++){\n            buf[i] = bstr.charCodeAt(i);\n        }\n        return buf;\n    }\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(\"Cannot decode base64 string; Expected `Buffer` or `atob` to be defined\");\n};\n/**\n * Converts a Base64 encoded string to a Float32Array.\n * @param base64Str - The Base64 encoded string.\n * @returns An Array of numbers interpreted as Float32 values.\n */ const toFloat32Array = (base64Str)=>{\n    if (typeof Buffer !== \"undefined\") {\n        // for Node.js environment\n        const buf = Buffer.from(base64Str, \"base64\");\n        return Array.from(new Float32Array(buf.buffer, buf.byteOffset, buf.length / Float32Array.BYTES_PER_ELEMENT));\n    } else {\n        // for legacy web platform APIs\n        const binaryStr = atob(base64Str);\n        const len = binaryStr.length;\n        const bytes = new Uint8Array(len);\n        for(let i = 0; i < len; i++){\n            bytes[i] = binaryStr.charCodeAt(i);\n        }\n        return Array.from(new Float32Array(bytes.buffer));\n    }\n}; //# sourceMappingURL=base64.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYmFzZTY0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNWO0FBQ2xDLE1BQU1FLFdBQVcsQ0FBQ0M7SUFDckIsSUFBSSxDQUFDQSxNQUNELE9BQU87SUFDWCxJQUFJLE9BQU9DLFdBQVdDLE1BQU0sS0FBSyxhQUFhO1FBQzFDLE9BQU9ELFdBQVdDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDSCxNQUFNSSxRQUFRLENBQUM7SUFDakQ7SUFDQSxJQUFJLE9BQU9KLFNBQVMsVUFBVTtRQUMxQkEsT0FBT0Ysc0RBQVVBLENBQUNFO0lBQ3RCO0lBQ0EsSUFBSSxPQUFPSyxTQUFTLGFBQWE7UUFDN0IsT0FBT0EsS0FBS0MsT0FBT0MsWUFBWSxDQUFDQyxLQUFLLENBQUMsTUFBTVI7SUFDaEQ7SUFDQSxNQUFNLElBQUlILHdEQUFXQSxDQUFDO0FBQzFCLEVBQUU7QUFDSyxNQUFNWSxhQUFhLENBQUNDO0lBQ3ZCLElBQUksT0FBT1QsV0FBV0MsTUFBTSxLQUFLLGFBQWE7UUFDMUMsTUFBTVMsTUFBTVYsV0FBV0MsTUFBTSxDQUFDQyxJQUFJLENBQUNPLEtBQUs7UUFDeEMsT0FBTyxJQUFJRSxXQUFXRCxJQUFJRSxNQUFNLEVBQUVGLElBQUlHLFVBQVUsRUFBRUgsSUFBSUksVUFBVTtJQUNwRTtJQUNBLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCLE1BQU1DLE9BQU9ELEtBQUtOO1FBQ2xCLE1BQU1DLE1BQU0sSUFBSUMsV0FBV0ssS0FBS0MsTUFBTTtRQUN0QyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsS0FBS0MsTUFBTSxFQUFFQyxJQUFLO1lBQ2xDUixHQUFHLENBQUNRLEVBQUUsR0FBR0YsS0FBS0csVUFBVSxDQUFDRDtRQUM3QjtRQUNBLE9BQU9SO0lBQ1g7SUFDQSxNQUFNLElBQUlkLHdEQUFXQSxDQUFDO0FBQzFCLEVBQUU7QUFDRjs7OztDQUlDLEdBQ00sTUFBTXdCLGlCQUFpQixDQUFDQztJQUMzQixJQUFJLE9BQU9wQixXQUFXLGFBQWE7UUFDL0IsMEJBQTBCO1FBQzFCLE1BQU1TLE1BQU1ULE9BQU9DLElBQUksQ0FBQ21CLFdBQVc7UUFDbkMsT0FBT0MsTUFBTXBCLElBQUksQ0FBQyxJQUFJcUIsYUFBYWIsSUFBSUUsTUFBTSxFQUFFRixJQUFJRyxVQUFVLEVBQUVILElBQUlPLE1BQU0sR0FBR00sYUFBYUMsaUJBQWlCO0lBQzlHLE9BQ0s7UUFDRCwrQkFBK0I7UUFDL0IsTUFBTUMsWUFBWVYsS0FBS007UUFDdkIsTUFBTUssTUFBTUQsVUFBVVIsTUFBTTtRQUM1QixNQUFNVSxRQUFRLElBQUloQixXQUFXZTtRQUM3QixJQUFLLElBQUlSLElBQUksR0FBR0EsSUFBSVEsS0FBS1IsSUFBSztZQUMxQlMsS0FBSyxDQUFDVCxFQUFFLEdBQUdPLFVBQVVOLFVBQVUsQ0FBQ0Q7UUFDcEM7UUFDQSxPQUFPSSxNQUFNcEIsSUFBSSxDQUFDLElBQUlxQixhQUFhSSxNQUFNZixNQUFNO0lBQ25EO0FBQ0osRUFBRSxDQUNGLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2ludGVybmFsL3V0aWxzL2Jhc2U2NC5tanM/ZjAyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgT3BlbkFJRXJyb3IgfSBmcm9tIFwiLi4vLi4vY29yZS9lcnJvci5tanNcIjtcbmltcG9ydCB7IGVuY29kZVVURjggfSBmcm9tIFwiLi9ieXRlcy5tanNcIjtcbmV4cG9ydCBjb25zdCB0b0Jhc2U2NCA9IChkYXRhKSA9PiB7XG4gICAgaWYgKCFkYXRhKVxuICAgICAgICByZXR1cm4gJyc7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLkJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oZGF0YSkudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGRhdGEgPSBlbmNvZGVVVEY4KGRhdGEpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgZGF0YSkpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgT3BlbkFJRXJyb3IoJ0Nhbm5vdCBnZW5lcmF0ZSBiYXNlNjQgc3RyaW5nOyBFeHBlY3RlZCBgQnVmZmVyYCBvciBgYnRvYWAgdG8gYmUgZGVmaW5lZCcpO1xufTtcbmV4cG9ydCBjb25zdCBmcm9tQmFzZTY0ID0gKHN0cikgPT4ge1xuICAgIGlmICh0eXBlb2YgZ2xvYmFsVGhpcy5CdWZmZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IGdsb2JhbFRoaXMuQnVmZmVyLmZyb20oc3RyLCAnYmFzZTY0Jyk7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGgpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGF0b2IgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnN0IGJzdHIgPSBhdG9iKHN0cik7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KGJzdHIubGVuZ3RoKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBic3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBidWZbaV0gPSBic3RyLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKCdDYW5ub3QgZGVjb2RlIGJhc2U2NCBzdHJpbmc7IEV4cGVjdGVkIGBCdWZmZXJgIG9yIGBhdG9iYCB0byBiZSBkZWZpbmVkJyk7XG59O1xuLyoqXG4gKiBDb252ZXJ0cyBhIEJhc2U2NCBlbmNvZGVkIHN0cmluZyB0byBhIEZsb2F0MzJBcnJheS5cbiAqIEBwYXJhbSBiYXNlNjRTdHIgLSBUaGUgQmFzZTY0IGVuY29kZWQgc3RyaW5nLlxuICogQHJldHVybnMgQW4gQXJyYXkgb2YgbnVtYmVycyBpbnRlcnByZXRlZCBhcyBGbG9hdDMyIHZhbHVlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IHRvRmxvYXQzMkFycmF5ID0gKGJhc2U2NFN0cikgPT4ge1xuICAgIGlmICh0eXBlb2YgQnVmZmVyICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAvLyBmb3IgTm9kZS5qcyBlbnZpcm9ubWVudFxuICAgICAgICBjb25zdCBidWYgPSBCdWZmZXIuZnJvbShiYXNlNjRTdHIsICdiYXNlNjQnKTtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20obmV3IEZsb2F0MzJBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmxlbmd0aCAvIEZsb2F0MzJBcnJheS5CWVRFU19QRVJfRUxFTUVOVCkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gZm9yIGxlZ2FjeSB3ZWIgcGxhdGZvcm0gQVBJc1xuICAgICAgICBjb25zdCBiaW5hcnlTdHIgPSBhdG9iKGJhc2U2NFN0cik7XG4gICAgICAgIGNvbnN0IGxlbiA9IGJpbmFyeVN0ci5sZW5ndGg7XG4gICAgICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkobGVuKTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAgICAgYnl0ZXNbaV0gPSBiaW5hcnlTdHIuY2hhckNvZGVBdChpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShuZXcgRmxvYXQzMkFycmF5KGJ5dGVzLmJ1ZmZlcikpO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlNjQubWpzLm1hcCJdLCJuYW1lcyI6WyJPcGVuQUlFcnJvciIsImVuY29kZVVURjgiLCJ0b0Jhc2U2NCIsImRhdGEiLCJnbG9iYWxUaGlzIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiYnRvYSIsIlN0cmluZyIsImZyb21DaGFyQ29kZSIsImFwcGx5IiwiZnJvbUJhc2U2NCIsInN0ciIsImJ1ZiIsIlVpbnQ4QXJyYXkiLCJidWZmZXIiLCJieXRlT2Zmc2V0IiwiYnl0ZUxlbmd0aCIsImF0b2IiLCJic3RyIiwibGVuZ3RoIiwiaSIsImNoYXJDb2RlQXQiLCJ0b0Zsb2F0MzJBcnJheSIsImJhc2U2NFN0ciIsIkFycmF5IiwiRmxvYXQzMkFycmF5IiwiQllURVNfUEVSX0VMRU1FTlQiLCJiaW5hcnlTdHIiLCJsZW4iLCJieXRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/base64.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   decodeUTF8: () => (/* binding */ decodeUTF8),\n/* harmony export */   encodeUTF8: () => (/* binding */ encodeUTF8)\n/* harmony export */ });\nfunction concatBytes(buffers) {\n    let length = 0;\n    for (const buffer of buffers){\n        length += buffer.length;\n    }\n    const output = new Uint8Array(length);\n    let index = 0;\n    for (const buffer of buffers){\n        output.set(buffer, index);\n        index += buffer.length;\n    }\n    return output;\n}\nlet encodeUTF8_;\nfunction encodeUTF8(str) {\n    let encoder;\n    return (encodeUTF8_ ?? (encoder = new globalThis.TextEncoder(), encodeUTF8_ = encoder.encode.bind(encoder)))(str);\n}\nlet decodeUTF8_;\nfunction decodeUTF8(bytes) {\n    let decoder;\n    return (decodeUTF8_ ?? (decoder = new globalThis.TextDecoder(), decodeUTF8_ = decoder.decode.bind(decoder)))(bytes);\n} //# sourceMappingURL=bytes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvYnl0ZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLFNBQVNBLFlBQVlDLE9BQU87SUFDL0IsSUFBSUMsU0FBUztJQUNiLEtBQUssTUFBTUMsVUFBVUYsUUFBUztRQUMxQkMsVUFBVUMsT0FBT0QsTUFBTTtJQUMzQjtJQUNBLE1BQU1FLFNBQVMsSUFBSUMsV0FBV0g7SUFDOUIsSUFBSUksUUFBUTtJQUNaLEtBQUssTUFBTUgsVUFBVUYsUUFBUztRQUMxQkcsT0FBT0csR0FBRyxDQUFDSixRQUFRRztRQUNuQkEsU0FBU0gsT0FBT0QsTUFBTTtJQUMxQjtJQUNBLE9BQU9FO0FBQ1g7QUFDQSxJQUFJSTtBQUNHLFNBQVNDLFdBQVdDLEdBQUc7SUFDMUIsSUFBSUM7SUFDSixPQUFPLENBQUNILGVBQ0gsV0FBVyxJQUFJSSxXQUFXQyxXQUFXLElBQU1MLGNBQWNHLFFBQVFHLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDSixRQUFRLENBQUMsRUFBR0Q7QUFDbEc7QUFDQSxJQUFJTTtBQUNHLFNBQVNDLFdBQVdDLEtBQUs7SUFDNUIsSUFBSUM7SUFDSixPQUFPLENBQUNILGVBQ0gsV0FBVyxJQUFJSixXQUFXUSxXQUFXLElBQU1KLGNBQWNHLFFBQVFFLE1BQU0sQ0FBQ04sSUFBSSxDQUFDSSxRQUFRLENBQUMsRUFBR0Q7QUFDbEcsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9ieXRlcy5tanM/NzA5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY29uY2F0Qnl0ZXMoYnVmZmVycykge1xuICAgIGxldCBsZW5ndGggPSAwO1xuICAgIGZvciAoY29uc3QgYnVmZmVyIG9mIGJ1ZmZlcnMpIHtcbiAgICAgICAgbGVuZ3RoICs9IGJ1ZmZlci5sZW5ndGg7XG4gICAgfVxuICAgIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgbGV0IGluZGV4ID0gMDtcbiAgICBmb3IgKGNvbnN0IGJ1ZmZlciBvZiBidWZmZXJzKSB7XG4gICAgICAgIG91dHB1dC5zZXQoYnVmZmVyLCBpbmRleCk7XG4gICAgICAgIGluZGV4ICs9IGJ1ZmZlci5sZW5ndGg7XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXQ7XG59XG5sZXQgZW5jb2RlVVRGOF87XG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVVRGOChzdHIpIHtcbiAgICBsZXQgZW5jb2RlcjtcbiAgICByZXR1cm4gKGVuY29kZVVURjhfID8/XG4gICAgICAgICgoZW5jb2RlciA9IG5ldyBnbG9iYWxUaGlzLlRleHRFbmNvZGVyKCkpLCAoZW5jb2RlVVRGOF8gPSBlbmNvZGVyLmVuY29kZS5iaW5kKGVuY29kZXIpKSkpKHN0cik7XG59XG5sZXQgZGVjb2RlVVRGOF87XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVVRGOChieXRlcykge1xuICAgIGxldCBkZWNvZGVyO1xuICAgIHJldHVybiAoZGVjb2RlVVRGOF8gPz9cbiAgICAgICAgKChkZWNvZGVyID0gbmV3IGdsb2JhbFRoaXMuVGV4dERlY29kZXIoKSksIChkZWNvZGVVVEY4XyA9IGRlY29kZXIuZGVjb2RlLmJpbmQoZGVjb2RlcikpKSkoYnl0ZXMpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ynl0ZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJjb25jYXRCeXRlcyIsImJ1ZmZlcnMiLCJsZW5ndGgiLCJidWZmZXIiLCJvdXRwdXQiLCJVaW50OEFycmF5IiwiaW5kZXgiLCJzZXQiLCJlbmNvZGVVVEY4XyIsImVuY29kZVVURjgiLCJzdHIiLCJlbmNvZGVyIiwiZ2xvYmFsVGhpcyIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwiYmluZCIsImRlY29kZVVURjhfIiwiZGVjb2RlVVRGOCIsImJ5dGVzIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiZGVjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/bytes.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/env.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/env.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readEnv: () => (/* binding */ readEnv)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */ const readEnv = (env)=>{\n    if (typeof globalThis.process !== \"undefined\") {\n        return globalThis.process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof globalThis.Deno !== \"undefined\") {\n        return globalThis.Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n}; //# sourceMappingURL=env.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvZW52Lm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsc0ZBQXNGO0FBQ3RGOzs7Ozs7Q0FNQyxHQUNNLE1BQU1BLFVBQVUsQ0FBQ0M7SUFDcEIsSUFBSSxPQUFPQyxXQUFXQyxPQUFPLEtBQUssYUFBYTtRQUMzQyxPQUFPRCxXQUFXQyxPQUFPLENBQUNGLEdBQUcsRUFBRSxDQUFDQSxJQUFJLEVBQUVHLFVBQVVDO0lBQ3BEO0lBQ0EsSUFBSSxPQUFPSCxXQUFXSSxJQUFJLEtBQUssYUFBYTtRQUN4QyxPQUFPSixXQUFXSSxJQUFJLENBQUNMLEdBQUcsRUFBRU0sTUFBTU4sTUFBTUc7SUFDNUM7SUFDQSxPQUFPQztBQUNYLEVBQUUsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9lbnYubWpzP2YwNDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbi8qKlxuICogUmVhZCBhbiBlbnZpcm9ubWVudCB2YXJpYWJsZS5cbiAqXG4gKiBUcmltcyBiZWdpbm5pbmcgYW5kIHRyYWlsaW5nIHdoaXRlc3BhY2UuXG4gKlxuICogV2lsbCByZXR1cm4gdW5kZWZpbmVkIGlmIHRoZSBlbnZpcm9ubWVudCB2YXJpYWJsZSBkb2Vzbid0IGV4aXN0IG9yIGNhbm5vdCBiZSBhY2Nlc3NlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IHJlYWRFbnYgPSAoZW52KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLnByb2Nlc3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLnByb2Nlc3MuZW52Py5bZW52XT8udHJpbSgpID8/IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzLkRlbm8gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLkRlbm8uZW52Py5nZXQ/LihlbnYpPy50cmltKCk7XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52Lm1qcy5tYXAiXSwibmFtZXMiOlsicmVhZEVudiIsImVudiIsImdsb2JhbFRoaXMiLCJwcm9jZXNzIiwidHJpbSIsInVuZGVmaW5lZCIsIkRlbm8iLCJnZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/env.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatRequestDetails: () => (/* binding */ formatRequestDetails),\n/* harmony export */   loggerFor: () => (/* binding */ loggerFor),\n/* harmony export */   parseLogLevel: () => (/* binding */ parseLogLevel)\n/* harmony export */ });\n/* harmony import */ var _values_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./values.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nconst levelNumbers = {\n    off: 0,\n    error: 200,\n    warn: 300,\n    info: 400,\n    debug: 500\n};\nconst parseLogLevel = (maybeLevel, sourceName, client)=>{\n    if (!maybeLevel) {\n        return undefined;\n    }\n    if ((0,_values_mjs__WEBPACK_IMPORTED_MODULE_0__.hasOwn)(levelNumbers, maybeLevel)) {\n        return maybeLevel;\n    }\n    loggerFor(client).warn(`${sourceName} was set to ${JSON.stringify(maybeLevel)}, expected one of ${JSON.stringify(Object.keys(levelNumbers))}`);\n    return undefined;\n};\nfunction noop() {}\nfunction makeLogFn(fnLevel, logger, logLevel) {\n    if (!logger || levelNumbers[fnLevel] > levelNumbers[logLevel]) {\n        return noop;\n    } else {\n        // Don't wrap logger functions, we want the stacktrace intact!\n        return logger[fnLevel].bind(logger);\n    }\n}\nconst noopLogger = {\n    error: noop,\n    warn: noop,\n    info: noop,\n    debug: noop\n};\nlet cachedLoggers = /* @__PURE__ */ new WeakMap();\nfunction loggerFor(client) {\n    const logger = client.logger;\n    const logLevel = client.logLevel ?? \"off\";\n    if (!logger) {\n        return noopLogger;\n    }\n    const cachedLogger = cachedLoggers.get(logger);\n    if (cachedLogger && cachedLogger[0] === logLevel) {\n        return cachedLogger[1];\n    }\n    const levelLogger = {\n        error: makeLogFn(\"error\", logger, logLevel),\n        warn: makeLogFn(\"warn\", logger, logLevel),\n        info: makeLogFn(\"info\", logger, logLevel),\n        debug: makeLogFn(\"debug\", logger, logLevel)\n    };\n    cachedLoggers.set(logger, [\n        logLevel,\n        levelLogger\n    ]);\n    return levelLogger;\n}\nconst formatRequestDetails = (details)=>{\n    if (details.options) {\n        details.options = {\n            ...details.options\n        };\n        delete details.options[\"headers\"]; // redundant + leaks internals\n    }\n    if (details.headers) {\n        details.headers = Object.fromEntries((details.headers instanceof Headers ? [\n            ...details.headers\n        ] : Object.entries(details.headers)).map(([name, value])=>[\n                name,\n                name.toLowerCase() === \"authorization\" || name.toLowerCase() === \"cookie\" || name.toLowerCase() === \"set-cookie\" ? \"***\" : value\n            ]));\n    }\n    if (\"retryOfRequestLogID\" in details) {\n        if (details.retryOfRequestLogID) {\n            details.retryOf = details.retryOfRequestLogID;\n        }\n        delete details.retryOfRequestLogID;\n    }\n    return details;\n}; //# sourceMappingURL=log.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvbG9nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hEO0FBQ3RDLE1BQU1DLGVBQWU7SUFDakJDLEtBQUs7SUFDTEMsT0FBTztJQUNQQyxNQUFNO0lBQ05DLE1BQU07SUFDTkMsT0FBTztBQUNYO0FBQ08sTUFBTUMsZ0JBQWdCLENBQUNDLFlBQVlDLFlBQVlDO0lBQ2xELElBQUksQ0FBQ0YsWUFBWTtRQUNiLE9BQU9HO0lBQ1g7SUFDQSxJQUFJWCxtREFBTUEsQ0FBQ0MsY0FBY08sYUFBYTtRQUNsQyxPQUFPQTtJQUNYO0lBQ0FJLFVBQVVGLFFBQVFOLElBQUksQ0FBQyxDQUFDLEVBQUVLLFdBQVcsWUFBWSxFQUFFSSxLQUFLQyxTQUFTLENBQUNOLFlBQVksa0JBQWtCLEVBQUVLLEtBQUtDLFNBQVMsQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDZixlQUFlLENBQUM7SUFDN0ksT0FBT1U7QUFDWCxFQUFFO0FBQ0YsU0FBU00sUUFBUztBQUNsQixTQUFTQyxVQUFVQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsUUFBUTtJQUN4QyxJQUFJLENBQUNELFVBQVVuQixZQUFZLENBQUNrQixRQUFRLEdBQUdsQixZQUFZLENBQUNvQixTQUFTLEVBQUU7UUFDM0QsT0FBT0o7SUFDWCxPQUNLO1FBQ0QsOERBQThEO1FBQzlELE9BQU9HLE1BQU0sQ0FBQ0QsUUFBUSxDQUFDRyxJQUFJLENBQUNGO0lBQ2hDO0FBQ0o7QUFDQSxNQUFNRyxhQUFhO0lBQ2ZwQixPQUFPYztJQUNQYixNQUFNYTtJQUNOWixNQUFNWTtJQUNOWCxPQUFPVztBQUNYO0FBQ0EsSUFBSU8sZ0JBQWdCLGFBQWEsR0FBRyxJQUFJQztBQUNqQyxTQUFTYixVQUFVRixNQUFNO0lBQzVCLE1BQU1VLFNBQVNWLE9BQU9VLE1BQU07SUFDNUIsTUFBTUMsV0FBV1gsT0FBT1csUUFBUSxJQUFJO0lBQ3BDLElBQUksQ0FBQ0QsUUFBUTtRQUNULE9BQU9HO0lBQ1g7SUFDQSxNQUFNRyxlQUFlRixjQUFjRyxHQUFHLENBQUNQO0lBQ3ZDLElBQUlNLGdCQUFnQkEsWUFBWSxDQUFDLEVBQUUsS0FBS0wsVUFBVTtRQUM5QyxPQUFPSyxZQUFZLENBQUMsRUFBRTtJQUMxQjtJQUNBLE1BQU1FLGNBQWM7UUFDaEJ6QixPQUFPZSxVQUFVLFNBQVNFLFFBQVFDO1FBQ2xDakIsTUFBTWMsVUFBVSxRQUFRRSxRQUFRQztRQUNoQ2hCLE1BQU1hLFVBQVUsUUFBUUUsUUFBUUM7UUFDaENmLE9BQU9ZLFVBQVUsU0FBU0UsUUFBUUM7SUFDdEM7SUFDQUcsY0FBY0ssR0FBRyxDQUFDVCxRQUFRO1FBQUNDO1FBQVVPO0tBQVk7SUFDakQsT0FBT0E7QUFDWDtBQUNPLE1BQU1FLHVCQUF1QixDQUFDQztJQUNqQyxJQUFJQSxRQUFRQyxPQUFPLEVBQUU7UUFDakJELFFBQVFDLE9BQU8sR0FBRztZQUFFLEdBQUdELFFBQVFDLE9BQU87UUFBQztRQUN2QyxPQUFPRCxRQUFRQyxPQUFPLENBQUMsVUFBVSxFQUFFLDhCQUE4QjtJQUNyRTtJQUNBLElBQUlELFFBQVFFLE9BQU8sRUFBRTtRQUNqQkYsUUFBUUUsT0FBTyxHQUFHbEIsT0FBT21CLFdBQVcsQ0FBQyxDQUFDSCxRQUFRRSxPQUFPLFlBQVlFLFVBQVU7ZUFBSUosUUFBUUUsT0FBTztTQUFDLEdBQUdsQixPQUFPcUIsT0FBTyxDQUFDTCxRQUFRRSxPQUFPLEdBQUdJLEdBQUcsQ0FBQyxDQUFDLENBQUNDLE1BQU1DLE1BQU0sR0FBSztnQkFDdEpEO2dCQUNDQSxLQUFLRSxXQUFXLE9BQU8sbUJBQ3BCRixLQUFLRSxXQUFXLE9BQU8sWUFDdkJGLEtBQUtFLFdBQVcsT0FBTyxlQUN2QixRQUNFRDthQUNUO0lBQ0w7SUFDQSxJQUFJLHlCQUF5QlIsU0FBUztRQUNsQyxJQUFJQSxRQUFRVSxtQkFBbUIsRUFBRTtZQUM3QlYsUUFBUVcsT0FBTyxHQUFHWCxRQUFRVSxtQkFBbUI7UUFDakQ7UUFDQSxPQUFPVixRQUFRVSxtQkFBbUI7SUFDdEM7SUFDQSxPQUFPVjtBQUNYLEVBQUUsQ0FDRixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9sb2cubWpzP2RmZTkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IGhhc093biB9IGZyb20gXCIuL3ZhbHVlcy5tanNcIjtcbmNvbnN0IGxldmVsTnVtYmVycyA9IHtcbiAgICBvZmY6IDAsXG4gICAgZXJyb3I6IDIwMCxcbiAgICB3YXJuOiAzMDAsXG4gICAgaW5mbzogNDAwLFxuICAgIGRlYnVnOiA1MDAsXG59O1xuZXhwb3J0IGNvbnN0IHBhcnNlTG9nTGV2ZWwgPSAobWF5YmVMZXZlbCwgc291cmNlTmFtZSwgY2xpZW50KSA9PiB7XG4gICAgaWYgKCFtYXliZUxldmVsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChoYXNPd24obGV2ZWxOdW1iZXJzLCBtYXliZUxldmVsKSkge1xuICAgICAgICByZXR1cm4gbWF5YmVMZXZlbDtcbiAgICB9XG4gICAgbG9nZ2VyRm9yKGNsaWVudCkud2FybihgJHtzb3VyY2VOYW1lfSB3YXMgc2V0IHRvICR7SlNPTi5zdHJpbmdpZnkobWF5YmVMZXZlbCl9LCBleHBlY3RlZCBvbmUgb2YgJHtKU09OLnN0cmluZ2lmeShPYmplY3Qua2V5cyhsZXZlbE51bWJlcnMpKX1gKTtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufTtcbmZ1bmN0aW9uIG5vb3AoKSB7IH1cbmZ1bmN0aW9uIG1ha2VMb2dGbihmbkxldmVsLCBsb2dnZXIsIGxvZ0xldmVsKSB7XG4gICAgaWYgKCFsb2dnZXIgfHwgbGV2ZWxOdW1iZXJzW2ZuTGV2ZWxdID4gbGV2ZWxOdW1iZXJzW2xvZ0xldmVsXSkge1xuICAgICAgICByZXR1cm4gbm9vcDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIC8vIERvbid0IHdyYXAgbG9nZ2VyIGZ1bmN0aW9ucywgd2Ugd2FudCB0aGUgc3RhY2t0cmFjZSBpbnRhY3QhXG4gICAgICAgIHJldHVybiBsb2dnZXJbZm5MZXZlbF0uYmluZChsb2dnZXIpO1xuICAgIH1cbn1cbmNvbnN0IG5vb3BMb2dnZXIgPSB7XG4gICAgZXJyb3I6IG5vb3AsXG4gICAgd2Fybjogbm9vcCxcbiAgICBpbmZvOiBub29wLFxuICAgIGRlYnVnOiBub29wLFxufTtcbmxldCBjYWNoZWRMb2dnZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBXZWFrTWFwKCk7XG5leHBvcnQgZnVuY3Rpb24gbG9nZ2VyRm9yKGNsaWVudCkge1xuICAgIGNvbnN0IGxvZ2dlciA9IGNsaWVudC5sb2dnZXI7XG4gICAgY29uc3QgbG9nTGV2ZWwgPSBjbGllbnQubG9nTGV2ZWwgPz8gJ29mZic7XG4gICAgaWYgKCFsb2dnZXIpIHtcbiAgICAgICAgcmV0dXJuIG5vb3BMb2dnZXI7XG4gICAgfVxuICAgIGNvbnN0IGNhY2hlZExvZ2dlciA9IGNhY2hlZExvZ2dlcnMuZ2V0KGxvZ2dlcik7XG4gICAgaWYgKGNhY2hlZExvZ2dlciAmJiBjYWNoZWRMb2dnZXJbMF0gPT09IGxvZ0xldmVsKSB7XG4gICAgICAgIHJldHVybiBjYWNoZWRMb2dnZXJbMV07XG4gICAgfVxuICAgIGNvbnN0IGxldmVsTG9nZ2VyID0ge1xuICAgICAgICBlcnJvcjogbWFrZUxvZ0ZuKCdlcnJvcicsIGxvZ2dlciwgbG9nTGV2ZWwpLFxuICAgICAgICB3YXJuOiBtYWtlTG9nRm4oJ3dhcm4nLCBsb2dnZXIsIGxvZ0xldmVsKSxcbiAgICAgICAgaW5mbzogbWFrZUxvZ0ZuKCdpbmZvJywgbG9nZ2VyLCBsb2dMZXZlbCksXG4gICAgICAgIGRlYnVnOiBtYWtlTG9nRm4oJ2RlYnVnJywgbG9nZ2VyLCBsb2dMZXZlbCksXG4gICAgfTtcbiAgICBjYWNoZWRMb2dnZXJzLnNldChsb2dnZXIsIFtsb2dMZXZlbCwgbGV2ZWxMb2dnZXJdKTtcbiAgICByZXR1cm4gbGV2ZWxMb2dnZXI7XG59XG5leHBvcnQgY29uc3QgZm9ybWF0UmVxdWVzdERldGFpbHMgPSAoZGV0YWlscykgPT4ge1xuICAgIGlmIChkZXRhaWxzLm9wdGlvbnMpIHtcbiAgICAgICAgZGV0YWlscy5vcHRpb25zID0geyAuLi5kZXRhaWxzLm9wdGlvbnMgfTtcbiAgICAgICAgZGVsZXRlIGRldGFpbHMub3B0aW9uc1snaGVhZGVycyddOyAvLyByZWR1bmRhbnQgKyBsZWFrcyBpbnRlcm5hbHNcbiAgICB9XG4gICAgaWYgKGRldGFpbHMuaGVhZGVycykge1xuICAgICAgICBkZXRhaWxzLmhlYWRlcnMgPSBPYmplY3QuZnJvbUVudHJpZXMoKGRldGFpbHMuaGVhZGVycyBpbnN0YW5jZW9mIEhlYWRlcnMgPyBbLi4uZGV0YWlscy5oZWFkZXJzXSA6IE9iamVjdC5lbnRyaWVzKGRldGFpbHMuaGVhZGVycykpLm1hcCgoW25hbWUsIHZhbHVlXSkgPT4gW1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIChuYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdhdXRob3JpemF0aW9uJyB8fFxuICAgICAgICAgICAgICAgIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2Nvb2tpZScgfHxcbiAgICAgICAgICAgICAgICBuYW1lLnRvTG93ZXJDYXNlKCkgPT09ICdzZXQtY29va2llJykgP1xuICAgICAgICAgICAgICAgICcqKionXG4gICAgICAgICAgICAgICAgOiB2YWx1ZSxcbiAgICAgICAgXSkpO1xuICAgIH1cbiAgICBpZiAoJ3JldHJ5T2ZSZXF1ZXN0TG9nSUQnIGluIGRldGFpbHMpIHtcbiAgICAgICAgaWYgKGRldGFpbHMucmV0cnlPZlJlcXVlc3RMb2dJRCkge1xuICAgICAgICAgICAgZGV0YWlscy5yZXRyeU9mID0gZGV0YWlscy5yZXRyeU9mUmVxdWVzdExvZ0lEO1xuICAgICAgICB9XG4gICAgICAgIGRlbGV0ZSBkZXRhaWxzLnJldHJ5T2ZSZXF1ZXN0TG9nSUQ7XG4gICAgfVxuICAgIHJldHVybiBkZXRhaWxzO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZy5tanMubWFwIl0sIm5hbWVzIjpbImhhc093biIsImxldmVsTnVtYmVycyIsIm9mZiIsImVycm9yIiwid2FybiIsImluZm8iLCJkZWJ1ZyIsInBhcnNlTG9nTGV2ZWwiLCJtYXliZUxldmVsIiwic291cmNlTmFtZSIsImNsaWVudCIsInVuZGVmaW5lZCIsImxvZ2dlckZvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJPYmplY3QiLCJrZXlzIiwibm9vcCIsIm1ha2VMb2dGbiIsImZuTGV2ZWwiLCJsb2dnZXIiLCJsb2dMZXZlbCIsImJpbmQiLCJub29wTG9nZ2VyIiwiY2FjaGVkTG9nZ2VycyIsIldlYWtNYXAiLCJjYWNoZWRMb2dnZXIiLCJnZXQiLCJsZXZlbExvZ2dlciIsInNldCIsImZvcm1hdFJlcXVlc3REZXRhaWxzIiwiZGV0YWlscyIsIm9wdGlvbnMiLCJoZWFkZXJzIiwiZnJvbUVudHJpZXMiLCJIZWFkZXJzIiwiZW50cmllcyIsIm1hcCIsIm5hbWUiLCJ2YWx1ZSIsInRvTG93ZXJDYXNlIiwicmV0cnlPZlJlcXVlc3RMb2dJRCIsInJldHJ5T2YiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/log.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPathTagFunction: () => (/* binding */ createPathTagFunction),\n/* harmony export */   encodeURIPath: () => (/* binding */ encodeURIPath),\n/* harmony export */   path: () => (/* binding */ path)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n\n/**\n * Percent-encode everything that isn't safe to have in a path without encoding safe chars.\n *\n * Taken from https://datatracker.ietf.org/doc/html/rfc3986#section-3.3:\n * > unreserved  = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n * > sub-delims  = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * > pchar       = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n */ function encodeURIPath(str) {\n    return str.replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]+/g, encodeURIComponent);\n}\nconst EMPTY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.create(null));\nconst createPathTagFunction = (pathEncoder = encodeURIPath)=>function path(statics, ...params) {\n        // If there are no params, no processing is needed.\n        if (statics.length === 1) return statics[0];\n        let postPath = false;\n        const invalidSegments = [];\n        const path1 = statics.reduce((previousValue, currentValue, index)=>{\n            if (/[?#]/.test(currentValue)) {\n                postPath = true;\n            }\n            const value = params[index];\n            let encoded = (postPath ? encodeURIComponent : pathEncoder)(\"\" + value);\n            if (index !== params.length && (value == null || typeof value === \"object\" && // handle values from other realms\n            value.toString === Object.getPrototypeOf(Object.getPrototypeOf(value.hasOwnProperty ?? EMPTY) ?? EMPTY)?.toString)) {\n                encoded = value + \"\";\n                invalidSegments.push({\n                    start: previousValue.length + currentValue.length,\n                    length: encoded.length,\n                    error: `Value of type ${Object.prototype.toString.call(value).slice(8, -1)} is not a valid path parameter`\n                });\n            }\n            return previousValue + currentValue + (index === params.length ? \"\" : encoded);\n        }, \"\");\n        const pathOnly = path1.split(/[?#]/, 1)[0];\n        const invalidSegmentPattern = /(?<=^|\\/)(?:\\.|%2e){1,2}(?=\\/|$)/gi;\n        let match;\n        // Find all invalid segments\n        while((match = invalidSegmentPattern.exec(pathOnly)) !== null){\n            invalidSegments.push({\n                start: match.index,\n                length: match[0].length,\n                error: `Value \"${match[0]}\" can\\'t be safely passed as a path parameter`\n            });\n        }\n        invalidSegments.sort((a, b)=>a.start - b.start);\n        if (invalidSegments.length > 0) {\n            let lastEnd = 0;\n            const underline = invalidSegments.reduce((acc, segment)=>{\n                const spaces = \" \".repeat(segment.start - lastEnd);\n                const arrows = \"^\".repeat(segment.length);\n                lastEnd = segment.start + segment.length;\n                return acc + spaces + arrows;\n            }, \"\");\n            throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Path parameters result in path with invalid segments:\\n${invalidSegments.map((e)=>e.error).join(\"\\n\")}\\n${path1}\\n${underline}`);\n        }\n        return path1;\n    };\n/**\n * URI-encodes path params and ensures no unsafe /./ or /../ path segments are introduced.\n */ const path = /* @__PURE__ */ createPathTagFunction(encodeURIPath); //# sourceMappingURL=path.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   sleep: () => (/* binding */ sleep)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms)); //# sourceMappingURL=sleep.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvc2xlZXAubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxzRkFBc0Y7QUFDL0UsTUFBTUEsUUFBUSxDQUFDQyxLQUFPLElBQUlDLFFBQVEsQ0FBQ0MsVUFBWUMsV0FBV0QsU0FBU0YsS0FBSyxDQUMvRSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy9zbGVlcC5tanM/MjdjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IGNvbnN0IHNsZWVwID0gKG1zKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gc2V0VGltZW91dChyZXNvbHZlLCBtcykpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2xlZXAubWpzLm1hcCJdLCJuYW1lcyI6WyJzbGVlcCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/uuid.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/uuid.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuid4: () => (/* binding */ uuid4)\n/* harmony export */ });\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n/**\n * https://stackoverflow.com/a/2117523\n */ let uuid4 = function() {\n    const { crypto } = globalThis;\n    if (crypto?.randomUUID) {\n        uuid4 = crypto.randomUUID.bind(crypto);\n        return crypto.randomUUID();\n    }\n    const u8 = new Uint8Array(1);\n    const randomByte = crypto ? ()=>crypto.getRandomValues(u8)[0] : ()=>Math.random() * 0xff & 0xff;\n    return \"10000000-1000-4000-8000-100000000000\".replace(/[018]/g, (c)=>(+c ^ randomByte() & 15 >> +c / 4).toString(16));\n}; //# sourceMappingURL=uuid.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdXVpZC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNGQUFzRjtBQUN0Rjs7Q0FFQyxHQUNNLElBQUlBLFFBQVE7SUFDZixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHQztJQUNuQixJQUFJRCxRQUFRRSxZQUFZO1FBQ3BCSCxRQUFRQyxPQUFPRSxVQUFVLENBQUNDLElBQUksQ0FBQ0g7UUFDL0IsT0FBT0EsT0FBT0UsVUFBVTtJQUM1QjtJQUNBLE1BQU1FLEtBQUssSUFBSUMsV0FBVztJQUMxQixNQUFNQyxhQUFhTixTQUFTLElBQU1BLE9BQU9PLGVBQWUsQ0FBQ0gsR0FBRyxDQUFDLEVBQUUsR0FBRyxJQUFNLEtBQU1LLE1BQU0sS0FBSyxPQUFRO0lBQ2pHLE9BQU8sdUNBQXVDQyxPQUFPLENBQUMsVUFBVSxDQUFDQyxJQUFNLENBQUMsQ0FBQ0EsSUFBS0wsZUFBZ0IsTUFBTyxDQUFDSyxJQUFJLENBQUcsRUFBR0MsUUFBUSxDQUFDO0FBQzdILEVBQUUsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9pbnRlcm5hbC91dGlscy91dWlkLm1qcz9jYTE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG4vKipcbiAqIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yMTE3NTIzXG4gKi9cbmV4cG9ydCBsZXQgdXVpZDQgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgeyBjcnlwdG8gfSA9IGdsb2JhbFRoaXM7XG4gICAgaWYgKGNyeXB0bz8ucmFuZG9tVVVJRCkge1xuICAgICAgICB1dWlkNCA9IGNyeXB0by5yYW5kb21VVUlELmJpbmQoY3J5cHRvKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0by5yYW5kb21VVUlEKCk7XG4gICAgfVxuICAgIGNvbnN0IHU4ID0gbmV3IFVpbnQ4QXJyYXkoMSk7XG4gICAgY29uc3QgcmFuZG9tQnl0ZSA9IGNyeXB0byA/ICgpID0+IGNyeXB0by5nZXRSYW5kb21WYWx1ZXModTgpWzBdIDogKCkgPT4gKE1hdGgucmFuZG9tKCkgKiAweGZmKSAmIDB4ZmY7XG4gICAgcmV0dXJuICcxMDAwMDAwMC0xMDAwLTQwMDAtODAwMC0xMDAwMDAwMDAwMDAnLnJlcGxhY2UoL1swMThdL2csIChjKSA9PiAoK2MgXiAocmFuZG9tQnl0ZSgpICYgKDE1ID4+ICgrYyAvIDQpKSkpLnRvU3RyaW5nKDE2KSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXVpZC5tanMubWFwIl0sIm5hbWVzIjpbInV1aWQ0IiwiY3J5cHRvIiwiZ2xvYmFsVGhpcyIsInJhbmRvbVVVSUQiLCJiaW5kIiwidTgiLCJVaW50OEFycmF5IiwicmFuZG9tQnl0ZSIsImdldFJhbmRvbVZhbHVlcyIsIk1hdGgiLCJyYW5kb20iLCJyZXBsYWNlIiwiYyIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/uuid.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceBoolean: () => (/* binding */ coerceBoolean),\n/* harmony export */   coerceFloat: () => (/* binding */ coerceFloat),\n/* harmony export */   coerceInteger: () => (/* binding */ coerceInteger),\n/* harmony export */   ensurePresent: () => (/* binding */ ensurePresent),\n/* harmony export */   hasOwn: () => (/* binding */ hasOwn),\n/* harmony export */   isAbsoluteURL: () => (/* binding */ isAbsoluteURL),\n/* harmony export */   isArray: () => (/* binding */ isArray),\n/* harmony export */   isEmptyObj: () => (/* binding */ isEmptyObj),\n/* harmony export */   isObj: () => (/* binding */ isObj),\n/* harmony export */   isReadonlyArray: () => (/* binding */ isReadonlyArray),\n/* harmony export */   maybeCoerceBoolean: () => (/* binding */ maybeCoerceBoolean),\n/* harmony export */   maybeCoerceFloat: () => (/* binding */ maybeCoerceFloat),\n/* harmony export */   maybeCoerceInteger: () => (/* binding */ maybeCoerceInteger),\n/* harmony export */   maybeObj: () => (/* binding */ maybeObj),\n/* harmony export */   safeJSON: () => (/* binding */ safeJSON),\n/* harmony export */   validatePositiveInteger: () => (/* binding */ validatePositiveInteger)\n/* harmony export */ });\n/* harmony import */ var _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/error.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url)=>{\n    return startsWithSchemeRegexp.test(url);\n};\nlet isArray = (val)=>(isArray = Array.isArray, isArray(val));\nlet isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */ function maybeObj(x) {\n    if (typeof x !== \"object\") {\n        return {};\n    }\n    return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n    if (!obj) return true;\n    for(const _k in obj)return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction isObj(obj) {\n    return obj != null && typeof obj === \"object\" && !Array.isArray(obj);\n}\nconst ensurePresent = (value)=>{\n    if (value == null) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    }\n    return value;\n};\nconst validatePositiveInteger = (name, n)=>{\n    if (typeof n !== \"number\" || !Number.isInteger(n)) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nconst coerceInteger = (value)=>{\n    if (typeof value === \"number\") return Math.round(value);\n    if (typeof value === \"string\") return parseInt(value, 10);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceFloat = (value)=>{\n    if (typeof value === \"number\") return value;\n    if (typeof value === \"string\") return parseFloat(value);\n    throw new _core_error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nconst coerceBoolean = (value)=>{\n    if (typeof value === \"boolean\") return value;\n    if (typeof value === \"string\") return value === \"true\";\n    return Boolean(value);\n};\nconst maybeCoerceInteger = (value)=>{\n    if (value == null) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nconst maybeCoerceFloat = (value)=>{\n    if (value == null) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nconst maybeCoerceBoolean = (value)=>{\n    if (value == null) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\nconst safeJSON = (text)=>{\n    try {\n        return JSON.parse(text);\n    } catch (err) {\n        return undefined;\n    }\n}; //# sourceMappingURL=values.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdmFsdWVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNuRCxpREFBaUQ7QUFDakQsTUFBTUMseUJBQXlCO0FBQ3hCLE1BQU1DLGdCQUFnQixDQUFDQztJQUMxQixPQUFPRix1QkFBdUJHLElBQUksQ0FBQ0Q7QUFDdkMsRUFBRTtBQUNLLElBQUlFLFVBQVUsQ0FBQ0MsTUFBUyxXQUFXQyxNQUFNRixPQUFPLEVBQUdBLFFBQVFDLElBQUcsRUFBRztBQUNqRSxJQUFJRSxrQkFBa0JILFFBQVE7QUFDckMsa0ZBQWtGLEdBQzNFLFNBQVNJLFNBQVNDLENBQUM7SUFDdEIsSUFBSSxPQUFPQSxNQUFNLFVBQVU7UUFDdkIsT0FBTyxDQUFDO0lBQ1o7SUFDQSxPQUFPQSxLQUFLLENBQUM7QUFDakI7QUFDQSx1Q0FBdUM7QUFDaEMsU0FBU0MsV0FBV0MsR0FBRztJQUMxQixJQUFJLENBQUNBLEtBQ0QsT0FBTztJQUNYLElBQUssTUFBTUMsTUFBTUQsSUFDYixPQUFPO0lBQ1gsT0FBTztBQUNYO0FBQ0EsNkRBQTZEO0FBQ3RELFNBQVNFLE9BQU9GLEdBQUcsRUFBRUcsR0FBRztJQUMzQixPQUFPQyxPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDUCxLQUFLRztBQUNyRDtBQUNPLFNBQVNLLE1BQU1SLEdBQUc7SUFDckIsT0FBT0EsT0FBTyxRQUFRLE9BQU9BLFFBQVEsWUFBWSxDQUFDTCxNQUFNRixPQUFPLENBQUNPO0FBQ3BFO0FBQ08sTUFBTVMsZ0JBQWdCLENBQUNDO0lBQzFCLElBQUlBLFNBQVMsTUFBTTtRQUNmLE1BQU0sSUFBSXRCLHdEQUFXQSxDQUFDLENBQUMsMENBQTBDLEVBQUVzQixNQUFNLFNBQVMsQ0FBQztJQUN2RjtJQUNBLE9BQU9BO0FBQ1gsRUFBRTtBQUNLLE1BQU1DLDBCQUEwQixDQUFDQyxNQUFNQztJQUMxQyxJQUFJLE9BQU9BLE1BQU0sWUFBWSxDQUFDQyxPQUFPQyxTQUFTLENBQUNGLElBQUk7UUFDL0MsTUFBTSxJQUFJekIsd0RBQVdBLENBQUMsQ0FBQyxFQUFFd0IsS0FBSyxtQkFBbUIsQ0FBQztJQUN0RDtJQUNBLElBQUlDLElBQUksR0FBRztRQUNQLE1BQU0sSUFBSXpCLHdEQUFXQSxDQUFDLENBQUMsRUFBRXdCLEtBQUssMkJBQTJCLENBQUM7SUFDOUQ7SUFDQSxPQUFPQztBQUNYLEVBQUU7QUFDSyxNQUFNRyxnQkFBZ0IsQ0FBQ047SUFDMUIsSUFBSSxPQUFPQSxVQUFVLFVBQ2pCLE9BQU9PLEtBQUtDLEtBQUssQ0FBQ1I7SUFDdEIsSUFBSSxPQUFPQSxVQUFVLFVBQ2pCLE9BQU9TLFNBQVNULE9BQU87SUFDM0IsTUFBTSxJQUFJdEIsd0RBQVdBLENBQUMsQ0FBQyxpQkFBaUIsRUFBRXNCLE1BQU0sUUFBUSxFQUFFLE9BQU9BLE1BQU0sZUFBZSxDQUFDO0FBQzNGLEVBQUU7QUFDSyxNQUFNVSxjQUFjLENBQUNWO0lBQ3hCLElBQUksT0FBT0EsVUFBVSxVQUNqQixPQUFPQTtJQUNYLElBQUksT0FBT0EsVUFBVSxVQUNqQixPQUFPVyxXQUFXWDtJQUN0QixNQUFNLElBQUl0Qix3REFBV0EsQ0FBQyxDQUFDLGlCQUFpQixFQUFFc0IsTUFBTSxRQUFRLEVBQUUsT0FBT0EsTUFBTSxlQUFlLENBQUM7QUFDM0YsRUFBRTtBQUNLLE1BQU1ZLGdCQUFnQixDQUFDWjtJQUMxQixJQUFJLE9BQU9BLFVBQVUsV0FDakIsT0FBT0E7SUFDWCxJQUFJLE9BQU9BLFVBQVUsVUFDakIsT0FBT0EsVUFBVTtJQUNyQixPQUFPYSxRQUFRYjtBQUNuQixFQUFFO0FBQ0ssTUFBTWMscUJBQXFCLENBQUNkO0lBQy9CLElBQUlBLFNBQVMsTUFBTTtRQUNmLE9BQU9lO0lBQ1g7SUFDQSxPQUFPVCxjQUFjTjtBQUN6QixFQUFFO0FBQ0ssTUFBTWdCLG1CQUFtQixDQUFDaEI7SUFDN0IsSUFBSUEsU0FBUyxNQUFNO1FBQ2YsT0FBT2U7SUFDWDtJQUNBLE9BQU9MLFlBQVlWO0FBQ3ZCLEVBQUU7QUFDSyxNQUFNaUIscUJBQXFCLENBQUNqQjtJQUMvQixJQUFJQSxTQUFTLE1BQU07UUFDZixPQUFPZTtJQUNYO0lBQ0EsT0FBT0gsY0FBY1o7QUFDekIsRUFBRTtBQUNLLE1BQU1rQixXQUFXLENBQUNDO0lBQ3JCLElBQUk7UUFDQSxPQUFPQyxLQUFLQyxLQUFLLENBQUNGO0lBQ3RCLEVBQ0EsT0FBT0csS0FBSztRQUNSLE9BQU9QO0lBQ1g7QUFDSixFQUFFLENBQ0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvaW50ZXJuYWwvdXRpbHMvdmFsdWVzLm1qcz9hNDk3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBPcGVuQUlFcnJvciB9IGZyb20gXCIuLi8uLi9jb3JlL2Vycm9yLm1qc1wiO1xuLy8gaHR0cHM6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmwtc2NoZW1lLXN0cmluZ1xuY29uc3Qgc3RhcnRzV2l0aFNjaGVtZVJlZ2V4cCA9IC9eW2Etel1bYS16MC05Ky4tXSo6L2k7XG5leHBvcnQgY29uc3QgaXNBYnNvbHV0ZVVSTCA9ICh1cmwpID0+IHtcbiAgICByZXR1cm4gc3RhcnRzV2l0aFNjaGVtZVJlZ2V4cC50ZXN0KHVybCk7XG59O1xuZXhwb3J0IGxldCBpc0FycmF5ID0gKHZhbCkgPT4gKChpc0FycmF5ID0gQXJyYXkuaXNBcnJheSksIGlzQXJyYXkodmFsKSk7XG5leHBvcnQgbGV0IGlzUmVhZG9ubHlBcnJheSA9IGlzQXJyYXk7XG4vKiogUmV0dXJucyBhbiBvYmplY3QgaWYgdGhlIGdpdmVuIHZhbHVlIGlzbid0IGFuIG9iamVjdCwgb3RoZXJ3aXNlIHJldHVybnMgYXMtaXMgKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXliZU9iaih4KSB7XG4gICAgaWYgKHR5cGVvZiB4ICE9PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIHJldHVybiB4ID8/IHt9O1xufVxuLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM0NDkxMjg3XG5leHBvcnQgZnVuY3Rpb24gaXNFbXB0eU9iaihvYmopIHtcbiAgICBpZiAoIW9iailcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgZm9yIChjb25zdCBfayBpbiBvYmopXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbi8vIGh0dHBzOi8vZXNsaW50Lm9yZy9kb2NzL2xhdGVzdC9ydWxlcy9uby1wcm90b3R5cGUtYnVpbHRpbnNcbmV4cG9ydCBmdW5jdGlvbiBoYXNPd24ob2JqLCBrZXkpIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09iaihvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgdHlwZW9mIG9iaiA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkob2JqKTtcbn1cbmV4cG9ydCBjb25zdCBlbnN1cmVQcmVzZW50ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IE9wZW5BSUVycm9yKGBFeHBlY3RlZCBhIHZhbHVlIHRvIGJlIGdpdmVuIGJ1dCByZWNlaXZlZCAke3ZhbHVlfSBpbnN0ZWFkLmApO1xuICAgIH1cbiAgICByZXR1cm4gdmFsdWU7XG59O1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlUG9zaXRpdmVJbnRlZ2VyID0gKG5hbWUsIG4pID0+IHtcbiAgICBpZiAodHlwZW9mIG4gIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKG4pKSB7XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgJHtuYW1lfSBtdXN0IGJlIGFuIGludGVnZXJgKTtcbiAgICB9XG4gICAgaWYgKG4gPCAwKSB7XG4gICAgICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgJHtuYW1lfSBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcmApO1xuICAgIH1cbiAgICByZXR1cm4gbjtcbn07XG5leHBvcnQgY29uc3QgY29lcmNlSW50ZWdlciA9ICh2YWx1ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInKVxuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSk7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBwYXJzZUludCh2YWx1ZSwgMTApO1xuICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgQ291bGQgbm90IGNvZXJjZSAke3ZhbHVlfSAodHlwZTogJHt0eXBlb2YgdmFsdWV9KSBpbnRvIGEgbnVtYmVyYCk7XG59O1xuZXhwb3J0IGNvbnN0IGNvZXJjZUZsb2F0ID0gKHZhbHVlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIHBhcnNlRmxvYXQodmFsdWUpO1xuICAgIHRocm93IG5ldyBPcGVuQUlFcnJvcihgQ291bGQgbm90IGNvZXJjZSAke3ZhbHVlfSAodHlwZTogJHt0eXBlb2YgdmFsdWV9KSBpbnRvIGEgbnVtYmVyYCk7XG59O1xuZXhwb3J0IGNvbnN0IGNvZXJjZUJvb2xlYW4gPSAodmFsdWUpID0+IHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpXG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJylcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSAndHJ1ZSc7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBtYXliZUNvZXJjZUludGVnZXIgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlSW50ZWdlcih2YWx1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IG1heWJlQ29lcmNlRmxvYXQgPSAodmFsdWUpID0+IHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlRmxvYXQodmFsdWUpO1xufTtcbmV4cG9ydCBjb25zdCBtYXliZUNvZXJjZUJvb2xlYW4gPSAodmFsdWUpID0+IHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlQm9vbGVhbih2YWx1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IHNhZmVKU09OID0gKHRleHQpID0+IHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh0ZXh0KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12YWx1ZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJPcGVuQUlFcnJvciIsInN0YXJ0c1dpdGhTY2hlbWVSZWdleHAiLCJpc0Fic29sdXRlVVJMIiwidXJsIiwidGVzdCIsImlzQXJyYXkiLCJ2YWwiLCJBcnJheSIsImlzUmVhZG9ubHlBcnJheSIsIm1heWJlT2JqIiwieCIsImlzRW1wdHlPYmoiLCJvYmoiLCJfayIsImhhc093biIsImtleSIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImlzT2JqIiwiZW5zdXJlUHJlc2VudCIsInZhbHVlIiwidmFsaWRhdGVQb3NpdGl2ZUludGVnZXIiLCJuYW1lIiwibiIsIk51bWJlciIsImlzSW50ZWdlciIsImNvZXJjZUludGVnZXIiLCJNYXRoIiwicm91bmQiLCJwYXJzZUludCIsImNvZXJjZUZsb2F0IiwicGFyc2VGbG9hdCIsImNvZXJjZUJvb2xlYW4iLCJCb29sZWFuIiwibWF5YmVDb2VyY2VJbnRlZ2VyIiwidW5kZWZpbmVkIiwibWF5YmVDb2VyY2VGbG9hdCIsIm1heWJlQ29lcmNlQm9vbGVhbiIsInNhZmVKU09OIiwidGV4dCIsIkpTT04iLCJwYXJzZSIsImVyciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/values.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AbstractChatCompletionRunner.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AbstractChatCompletionRunner.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AbstractChatCompletionRunner: () => (/* binding */ AbstractChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/chatCompletionUtils.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./EventStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RunnableFunction.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/RunnableFunction.mjs\");\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionToolCall, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\n\n\n\n\n\n\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nclass AbstractChatCompletionRunner extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_4__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit(\"chatCompletion\", chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message) this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!(\"content\" in message)) message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit(\"message\", message);\n            if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit(\"functionToolCallResult\", message.content);\n            } else if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls){\n                    if (tool_call.type === \"function\") {\n                        this._emit(\"functionToolCall\", tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */ async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalContent() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalMessage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */ async finalFunctionToolCall() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n    }\n    async finalFunctionToolCallResult() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [\n            ...this._chatCompletions\n        ];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion) this._emit(\"finalChatCompletion\", completion);\n        const finalMessage = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage) this._emit(\"finalMessage\", finalMessage);\n        const finalContent = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent) this._emit(\"finalContent\", finalContent);\n        const finalFunctionCall = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCall).call(this);\n        if (finalFunctionCall) this._emit(\"finalFunctionToolCall\", finalFunctionCall);\n        const finalFunctionCallResult = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionToolCallResult).call(this);\n        if (finalFunctionCallResult != null) this._emit(\"finalFunctionToolCallResult\", finalFunctionCallResult);\n        if (this._chatCompletions.some((c)=>c.usage)) {\n            this._emit(\"totalUsage\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({\n            ...params,\n            stream: false\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        return this._addChatCompletion((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__.parseChatCompletion)(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runTools(client, params, options) {\n        const role = \"tool\";\n        const { tool_choice = \"auto\", stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== \"string\" && tool_choice.type === \"function\" && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool)=>{\n            if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_2__.isAutoParsableTool)(tool)) {\n                if (!tool.$callback) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"Tool given to `.runTools()` that does not have an associated function\");\n                }\n                return {\n                    type: \"function\",\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || \"\",\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true\n                    }\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools){\n            if (f.type === \"function\") {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = \"tools\" in params ? inputTools.map((t)=>t.type === \"function\" ? {\n                type: \"function\",\n                function: {\n                    name: t.function.name || t.function.function.name,\n                    parameters: t.function.parameters,\n                    description: t.function.description,\n                    strict: t.function.strict\n                }\n            } : t) : undefined;\n        for (const message of params.messages){\n            this._addMessage(message, false);\n        }\n        for(let i = 0; i < maxChatCompletions; ++i){\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [\n                    ...this.messages\n                ]\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls){\n                if (tool_call.type !== \"function\") continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName).map((name)=>JSON.stringify(name)).join(\", \")}. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                } else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = (0,_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_5__.isRunnableFunctionWithParse)(fn) ? await fn.parse(args) : args;\n                } catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({\n                        role,\n                        tool_call_id,\n                        content\n                    });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({\n                    role,\n                    tool_call_id,\n                    content\n                });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while(i-- > 0){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message)) {\n            // TODO: support audio here\n            const ret = {\n                ...message,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null\n            };\n            return ret;\n        }\n    }\n    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletionMessage with role=assistant\");\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCall = function _AbstractChatCompletionRunner_getFinalFunctionToolCall() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isAssistantMessage)(message) && message?.tool_calls?.length) {\n            return message.tool_calls.filter((x)=>x.type === \"function\").at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionToolCallResult = function _AbstractChatCompletionRunner_getFinalFunctionToolCallResult() {\n    for(let i = this.messages.length - 1; i >= 0; i--){\n        const message = this.messages[i];\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.isToolMessage)(message) && message.content != null && typeof message.content === \"string\" && this.messages.some((x)=>x.role === \"assistant\" && x.tool_calls?.some((y)=>y.type === \"function\" && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0\n    };\n    for (const { usage } of this._chatCompletions){\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.\");\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return typeof rawContent === \"string\" ? rawContent : rawContent === undefined ? \"undefined\" : JSON.stringify(rawContent);\n}; //# sourceMappingURL=AbstractChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AbstractChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AssistantStream.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AssistantStream.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssistantStream: () => (/* binding */ AssistantStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../streaming.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/streaming.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./EventStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs\");\nvar _AssistantStream_instances, _a, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\n\n\n\n\n\nclass AssistantStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_3__.EventStream {\n    constructor(){\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new _a();\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_1__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(runId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runToolAssistantStream(runId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.submitToolOutputs(runId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new _a();\n        runner._run(()=>runner._threadAssistantStream(params, thread, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new _a();\n        runner._run(()=>runner._runAssistantStream(threadId, runs, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    currentEvent() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run was not received.\");\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await thread.createAndRun(body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        const body = {\n            ...params,\n            stream: true\n        };\n        const stream = await run.create(threadId, body, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addRun((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)){\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === \"index\" || key === \"type\") {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === \"string\" && typeof deltaValue === \"string\") {\n                accValue += deltaValue;\n            } else if (typeof accValue === \"number\" && typeof deltaValue === \"number\") {\n                accValue += deltaValue;\n            } else if ((0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(accValue) && (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            } else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x)=>typeof x === \"string\" || typeof x === \"number\")) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue){\n                    if (!(0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_4__.isObj)(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry[\"index\"];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error(\"Expected array delta entry to have an `index` property\");\n                    }\n                    if (typeof index !== \"number\") {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    } else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            } else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, runId, params, options);\n    }\n}\n_a = AssistantStream, _AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended) return;\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentEvent, event, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch(event.event){\n        case \"thread.created\":\n            break;\n        case \"thread.run.created\":\n        case \"thread.run.queued\":\n        case \"thread.run.in_progress\":\n        case \"thread.run.requires_action\":\n        case \"thread.run.completed\":\n        case \"thread.run.incomplete\":\n        case \"thread.run.failed\":\n        case \"thread.run.cancelling\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case \"thread.run.step.created\":\n        case \"thread.run.step.in_progress\":\n        case \"thread.run.step.delta\":\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case \"thread.message.created\":\n        case \"thread.message.in_progress\":\n        case \"thread.message.delta\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case \"error\":\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error(\"Encountered an error event in event processing - errors should be processed earlier\");\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\")) throw Error(\"Final run has not been received\");\n    return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent){\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == \"text\") {\n            this._emit(\"textCreated\", snapshotContent.text);\n        }\n    }\n    switch(event.event){\n        case \"thread.message.created\":\n            this._emit(\"messageCreated\", event.data);\n            break;\n        case \"thread.message.in_progress\":\n            break;\n        case \"thread.message.delta\":\n            this._emit(\"messageDelta\", event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content){\n                    //If it is text delta, emit a text delta event\n                    if (content.type == \"text\" && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == \"text\") {\n                            this._emit(\"textDelta\", textDelta, snapshot.text);\n                        } else {\n                            throw Error(\"The snapshot associated with this text delta is not text or missing\");\n                        }\n                    }\n                    if (content.index != (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\")) {\n                            switch((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").type){\n                                case \"text\":\n                                    this._emit(\"textDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case \"image_file\":\n                                    this._emit(\"imageFileDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContent, \"f\").image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //We emit the latest content we were working on on completion (including incomplete)\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch(currentContent.type){\n                        case \"image_file\":\n                            this._emit(\"imageFileDone\", currentContent.image_file, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case \"text\":\n                            this._emit(\"textDone\", currentContent.text, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit(\"messageDone\", event.data);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch(event.event){\n        case \"thread.run.step.created\":\n            this._emit(\"runStepCreated\", event.data);\n            break;\n        case \"thread.run.step.delta\":\n            const delta = event.data.delta;\n            if (delta.step_details && delta.step_details.type == \"tool_calls\" && delta.step_details.tool_calls && accumulatedRunStep.step_details.type == \"tool_calls\") {\n                for (const toolCall of delta.step_details.tool_calls){\n                    if (toolCall.index == (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit(\"toolCallDelta\", toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    } else {\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) this._emit(\"toolCallCreated\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit(\"runStepDelta\", event.data.delta, accumulatedRunStep);\n            break;\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == \"tool_calls\") {\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit(\"runStepDone\", event.data, accumulatedRunStep);\n            break;\n        case \"thread.run.step.in_progress\":\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_events, \"f\").push(event);\n    this._emit(\"event\", event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch(event.event){\n        case \"thread.run.step.created\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case \"thread.run.step.delta\":\n            let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error(\"Received a RunStepDelta before creation of a snapshot\");\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = _a.accumulateDelta(snapshot, data.delta);\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case \"thread.run.step.completed\":\n        case \"thread.run.step.failed\":\n        case \"thread.run.step.cancelled\":\n        case \"thread.run.step.expired\":\n        case \"thread.run.step.in_progress\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id]) return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error(\"No snapshot available\");\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch(event.event){\n        case \"thread.message.created\":\n            //On creation the snapshot is just the initial message\n            return [\n                event.data,\n                newContent\n            ];\n        case \"thread.message.delta\":\n            if (!snapshot) {\n                throw Error(\"Received a delta with no existing snapshot (there should be one from message creation)\");\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content){\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    } else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [\n                snapshot,\n                newContent\n            ];\n        case \"thread.message.in_progress\":\n        case \"thread.message.completed\":\n        case \"thread.message.incomplete\":\n            //No changes on other thread events\n            if (snapshot) {\n                return [\n                    snapshot,\n                    newContent\n                ];\n            } else {\n                throw Error(\"Received thread message event with no existing snapshot\");\n            }\n    }\n    throw Error(\"Tried to accumulate a non-message event\");\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return _a.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch(event.event){\n        case \"thread.run.created\":\n            break;\n        case \"thread.run.queued\":\n            break;\n        case \"thread.run.in_progress\":\n            break;\n        case \"thread.run.requires_action\":\n        case \"thread.run.cancelled\":\n        case \"thread.run.failed\":\n        case \"thread.run.completed\":\n        case \"thread.run.expired\":\n        case \"thread.run.incomplete\":\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_finalRun, event.data, \"f\");\n            if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit(\"toolCallDone\", (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _AssistantStream_currentToolCall, \"f\"));\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case \"thread.run.cancelling\":\n            break;\n    }\n};\nfunction assertNever(_x) {} //# sourceMappingURL=AssistantStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AssistantStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionRunner.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionRunner.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* binding */ ChatCompletionRunner)\n/* harmony export */ });\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\n/* harmony import */ var _chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chatCompletionUtils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/chatCompletionUtils.mjs\");\n\n\nclass ChatCompletionRunner extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_0__.AbstractChatCompletionRunner {\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if ((0,_chatCompletionUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.isAssistantMessage)(message) && message.content) {\n            this._emit(\"content\", message.content);\n        }\n    }\n} //# sourceMappingURL=ChatCompletionRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uUnVubmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUY7QUFDcEI7QUFDeEQsTUFBTUUsNkJBQTZCRiwyRkFBNEJBO0lBQ2xFLE9BQU9HLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDckMsTUFBTUMsU0FBUyxJQUFJTDtRQUNuQixNQUFNTSxPQUFPO1lBQ1QsR0FBR0YsT0FBTztZQUNWRyxTQUFTO2dCQUFFLEdBQUdILFNBQVNHLE9BQU87Z0JBQUUsNkJBQTZCO1lBQVc7UUFDNUU7UUFDQUYsT0FBT0csSUFBSSxDQUFDLElBQU1ILE9BQU9JLFNBQVMsQ0FBQ1AsUUFBUUMsUUFBUUc7UUFDbkQsT0FBT0Q7SUFDWDtJQUNBSyxZQUFZQyxPQUFPLEVBQUVDLE9BQU8sSUFBSSxFQUFFO1FBQzlCLEtBQUssQ0FBQ0YsWUFBWUMsU0FBU0M7UUFDM0IsSUFBSWIsNEVBQWtCQSxDQUFDWSxZQUFZQSxRQUFRRSxPQUFPLEVBQUU7WUFDaEQsSUFBSSxDQUFDQyxLQUFLLENBQUMsV0FBV0gsUUFBUUUsT0FBTztRQUN6QztJQUNKO0FBQ0osRUFDQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9saWIvQ2hhdENvbXBsZXRpb25SdW5uZXIubWpzP2FhZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDaGF0Q29tcGxldGlvblJ1bm5lciwgfSBmcm9tIFwiLi9BYnN0cmFjdENoYXRDb21wbGV0aW9uUnVubmVyLm1qc1wiO1xuaW1wb3J0IHsgaXNBc3Npc3RhbnRNZXNzYWdlIH0gZnJvbSBcIi4vY2hhdENvbXBsZXRpb25VdGlscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBDaGF0Q29tcGxldGlvblJ1bm5lciBleHRlbmRzIEFic3RyYWN0Q2hhdENvbXBsZXRpb25SdW5uZXIge1xuICAgIHN0YXRpYyBydW5Ub29scyhjbGllbnQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBydW5uZXIgPSBuZXcgQ2hhdENvbXBsZXRpb25SdW5uZXIoKTtcbiAgICAgICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IC4uLm9wdGlvbnM/LmhlYWRlcnMsICdYLVN0YWlubGVzcy1IZWxwZXItTWV0aG9kJzogJ3J1blRvb2xzJyB9LFxuICAgICAgICB9O1xuICAgICAgICBydW5uZXIuX3J1bigoKSA9PiBydW5uZXIuX3J1blRvb2xzKGNsaWVudCwgcGFyYW1zLCBvcHRzKSk7XG4gICAgICAgIHJldHVybiBydW5uZXI7XG4gICAgfVxuICAgIF9hZGRNZXNzYWdlKG1lc3NhZ2UsIGVtaXQgPSB0cnVlKSB7XG4gICAgICAgIHN1cGVyLl9hZGRNZXNzYWdlKG1lc3NhZ2UsIGVtaXQpO1xuICAgICAgICBpZiAoaXNBc3Npc3RhbnRNZXNzYWdlKG1lc3NhZ2UpICYmIG1lc3NhZ2UuY29udGVudCkge1xuICAgICAgICAgICAgdGhpcy5fZW1pdCgnY29udGVudCcsIG1lc3NhZ2UuY29udGVudCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGF0Q29tcGxldGlvblJ1bm5lci5tanMubWFwIl0sIm5hbWVzIjpbIkFic3RyYWN0Q2hhdENvbXBsZXRpb25SdW5uZXIiLCJpc0Fzc2lzdGFudE1lc3NhZ2UiLCJDaGF0Q29tcGxldGlvblJ1bm5lciIsInJ1blRvb2xzIiwiY2xpZW50IiwicGFyYW1zIiwib3B0aW9ucyIsInJ1bm5lciIsIm9wdHMiLCJoZWFkZXJzIiwiX3J1biIsIl9ydW5Ub29scyIsIl9hZGRNZXNzYWdlIiwibWVzc2FnZSIsImVtaXQiLCJjb250ZW50IiwiX2VtaXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStream.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStream.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStream: () => (/* binding */ ChatCompletionStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_vendor/partial-json-parser/parser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/_vendor/partial-json-parser/parser.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../streaming.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/streaming.mjs\");\n/* harmony import */ var _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AbstractChatCompletionRunner.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AbstractChatCompletionRunner.mjs\");\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\n\n\n\n\n\n\nclass ChatCompletionStream extends _AbstractChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.AbstractChatCompletionRunner {\n    constructor(params){\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_params, params, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */ static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(()=>runner._runChatCompletion(client, {\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({\n            ...params,\n            stream: true\n        }, {\n            ...options,\n            signal: this.controller.signal\n        });\n        this._connected();\n        for await (const chunk of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__.Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream){\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.APIUserAbortError();\n        }\n        return this._addChatCompletion((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null\n        };\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended) return;\n        const completion = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit(\"chunk\", chunk, completion);\n        for (const choice of chunk.choices){\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.content) {\n                this._emit(\"content\", choice.delta.content, choiceSnapshot.message.content);\n                this._emit(\"content.delta\", {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed\n                });\n            }\n            if (choice.delta.refusal != null && choiceSnapshot.message?.role === \"assistant\" && choiceSnapshot.message?.refusal) {\n                this._emit(\"refusal.delta\", {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.content.delta\", {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? []\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === \"assistant\") {\n                this._emit(\"logprobs.refusal.delta\", {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? []\n                });\n            }\n            const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []){\n                if (state.current_tool_call_index !== toolCall.index) {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []){\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === \"function\") {\n                    this._emit(\"tool_calls.function.arguments.delta\", {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? \"\"\n                    });\n                } else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error(\"no tool call snapshot\");\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error(\"tool call snapshot missing `type`\");\n        }\n        if (toolCallSnapshot.type === \"function\") {\n            const inputTool = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool)=>(0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isChatCompletionFunctionTool)(tool) && tool.function.name === toolCallSnapshot.function.name); // TS doesn't narrow based on isChatCompletionTool\n            this._emit(\"tool_calls.function.arguments.done\", {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isAutoParsableTool)(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments) : null\n            });\n        } else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit(\"content.done\", {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit(\"refusal.done\", {\n                refusal: choiceSnapshot.message.refusal\n            });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit(\"logprobs.content.done\", {\n                content: choiceSnapshot.logprobs.content\n            });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit(\"logprobs.refusal.done\", {\n                refusal: choiceSnapshot.logprobs.refusal\n            });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`request ended without sending any chunks`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.isAutoParsableResponseFormat)(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: []\n            }, \"f\");\n        } else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices){\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = {\n                    finish_reason,\n                    index,\n                    message: {},\n                    logprobs,\n                    ...other\n                };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                } else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\") && (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.hasAutoParseableInput)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === \"length\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.LengthFinishReasonError();\n                    }\n                    if (finish_reason === \"content_filter\") {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta) continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || \"\") + refusal;\n            }\n            if (role) choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                } else {\n                    if (function_call.name) choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = \"\");\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || \"\") + content;\n                if (!choice.message.refusal && (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.partialParse)(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls) choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls){\n                    const tool_call = (_d = choice.message.tool_calls)[index] ?? (_d[index] = {});\n                    Object.assign(tool_call, rest);\n                    if (id) tool_call.id = id;\n                    if (type) tool_call.type = type;\n                    if (fn) tool_call.function ?? (tool_call.function = {\n                        name: fn.name ?? \"\",\n                        arguments: \"\"\n                    });\n                    if (fn?.name) tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.shouldParseToolCall)((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = (0,_vendor_partial_json_parser_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.partialParse)(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"chunk\", (chunk)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            } else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((chunk)=>chunk ? {\n                            value: chunk,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const chunk = pushQueue.shift();\n                return {\n                    value: chunk,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    toReadableStream() {\n        const stream = new _streaming_mjs__WEBPACK_IMPORTED_MODULE_4__.Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest })=>{\n            if (!finish_reason) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: {\n                            arguments: args,\n                            name\n                        },\n                        role,\n                        refusal: message.refusal ?? null\n                    },\n                    finish_reason,\n                    index,\n                    logprobs\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i)=>{\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_2__.OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return {\n                                ...toolRest,\n                                id,\n                                type,\n                                function: {\n                                    ...fnRest,\n                                    name,\n                                    arguments: args\n                                }\n                            };\n                        })\n                    }\n                };\n            }\n            return {\n                ...choiceRest,\n                message: {\n                    ...messageRest,\n                    content,\n                    role,\n                    refusal: message.refusal ?? null\n                },\n                finish_reason,\n                index,\n                logprobs\n            };\n        }),\n        created,\n        model,\n        object: \"chat.completion\",\n        ...system_fingerprint ? {\n            system_fingerprint\n        } : {}\n    };\n    return (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeParseChatCompletion)(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */ function assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) {} //# sourceMappingURL=ChatCompletionStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* binding */ ChatCompletionStreamingRunner)\n/* harmony export */ });\n/* harmony import */ var _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ChatCompletionStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStream.mjs\");\n\nclass ChatCompletionStreamingRunner extends _ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(()=>runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(// @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"runTools\"\n            }\n        };\n        runner._run(()=>runner._runTools(client, params, opts));\n        return runner;\n    }\n} //# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL0NoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFrRTtBQUMzRCxNQUFNQyxzQ0FBc0NELDJFQUFvQkE7SUFDbkUsT0FBT0UsbUJBQW1CQyxNQUFNLEVBQUU7UUFDOUIsTUFBTUMsU0FBUyxJQUFJSCw4QkFBOEI7UUFDakRHLE9BQU9DLElBQUksQ0FBQyxJQUFNRCxPQUFPRSxtQkFBbUIsQ0FBQ0g7UUFDN0MsT0FBT0M7SUFDWDtJQUNBLE9BQU9HLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDckMsTUFBTU4sU0FBUyxJQUFJSCw4QkFDbkIscURBQXFEO1FBQ3JEUTtRQUNBLE1BQU1FLE9BQU87WUFDVCxHQUFHRCxPQUFPO1lBQ1ZFLFNBQVM7Z0JBQUUsR0FBR0YsU0FBU0UsT0FBTztnQkFBRSw2QkFBNkI7WUFBVztRQUM1RTtRQUNBUixPQUFPQyxJQUFJLENBQUMsSUFBTUQsT0FBT1MsU0FBUyxDQUFDTCxRQUFRQyxRQUFRRTtRQUNuRCxPQUFPUDtJQUNYO0FBQ0osRUFDQSwwREFBMEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9saWIvQ2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIubWpzPzNhMjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhdENvbXBsZXRpb25TdHJlYW0gfSBmcm9tIFwiLi9DaGF0Q29tcGxldGlvblN0cmVhbS5tanNcIjtcbmV4cG9ydCBjbGFzcyBDaGF0Q29tcGxldGlvblN0cmVhbWluZ1J1bm5lciBleHRlbmRzIENoYXRDb21wbGV0aW9uU3RyZWFtIHtcbiAgICBzdGF0aWMgZnJvbVJlYWRhYmxlU3RyZWFtKHN0cmVhbSkge1xuICAgICAgICBjb25zdCBydW5uZXIgPSBuZXcgQ2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIobnVsbCk7XG4gICAgICAgIHJ1bm5lci5fcnVuKCgpID0+IHJ1bm5lci5fZnJvbVJlYWRhYmxlU3RyZWFtKHN0cmVhbSkpO1xuICAgICAgICByZXR1cm4gcnVubmVyO1xuICAgIH1cbiAgICBzdGF0aWMgcnVuVG9vbHMoY2xpZW50LCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcnVubmVyID0gbmV3IENoYXRDb21wbGV0aW9uU3RyZWFtaW5nUnVubmVyKFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIFRPRE8gdGhlc2UgdHlwZXMgYXJlIGluY29tcGF0aWJsZVxuICAgICAgICBwYXJhbXMpO1xuICAgICAgICBjb25zdCBvcHRzID0ge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgLi4ub3B0aW9ucz8uaGVhZGVycywgJ1gtU3RhaW5sZXNzLUhlbHBlci1NZXRob2QnOiAncnVuVG9vbHMnIH0sXG4gICAgICAgIH07XG4gICAgICAgIHJ1bm5lci5fcnVuKCgpID0+IHJ1bm5lci5fcnVuVG9vbHMoY2xpZW50LCBwYXJhbXMsIG9wdHMpKTtcbiAgICAgICAgcmV0dXJuIHJ1bm5lcjtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DaGF0Q29tcGxldGlvblN0cmVhbWluZ1J1bm5lci5tanMubWFwIl0sIm5hbWVzIjpbIkNoYXRDb21wbGV0aW9uU3RyZWFtIiwiQ2hhdENvbXBsZXRpb25TdHJlYW1pbmdSdW5uZXIiLCJmcm9tUmVhZGFibGVTdHJlYW0iLCJzdHJlYW0iLCJydW5uZXIiLCJfcnVuIiwiX2Zyb21SZWFkYWJsZVN0cmVhbSIsInJ1blRvb2xzIiwiY2xpZW50IiwicGFyYW1zIiwib3B0aW9ucyIsIm9wdHMiLCJoZWFkZXJzIiwiX3J1blRvb2xzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventStream: () => (/* binding */ EventStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\n\n\nclass EventStream {\n    constructor(){\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, ()=>{});\n        _EventStream_rejectConnectedPromise.set(this, ()=>{});\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, ()=>{});\n        _EventStream_rejectEndPromise.set(this, ()=>{});\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_connectedPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_endPromise, new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_connectedPromise, \"f\").catch(()=>{});\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\").catch(()=>{});\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(()=>{\n            executor().then(()=>{\n                this._emitFinal();\n                this._emit(\"end\");\n            }, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit(\"connect\");\n    }\n    get ended() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ on(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener\n        });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ off(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners) return this;\n        const index = listeners.findIndex((l)=>l.listener === listener);\n        if (index >= 0) listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */ once(event, listener) {\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] || ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({\n            listener,\n            once: true\n        });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */ emitted(event) {\n        return new Promise((resolve, reject)=>{\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== \"error\") this.once(\"error\", reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if ((0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === \"end\") {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_ended, true, \"f\");\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l)=>!l.once);\n            listeners.forEach(({ listener })=>listener(...args));\n        }\n        if (event === \"abort\") {\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n            return;\n        }\n        if (event === \"error\") {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!(0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit(\"end\");\n        }\n    }\n    _emitFinal() {}\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === \"AbortError\") {\n        error = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError) {\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _EventStream_aborted, true, \"f\");\n        return this._emit(\"abort\", error);\n    }\n    if (error instanceof _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError) {\n        return this._emit(\"error\", error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit(\"error\", openAIError);\n    }\n    return this._emit(\"error\", new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(String(error)));\n}; //# sourceMappingURL=EventStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ResponsesParser.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ResponsesParser.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addOutputText: () => (/* binding */ addOutputText),\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   makeParseableResponseTool: () => (/* binding */ makeParseableResponseTool),\n/* harmony export */   maybeParseResponse: () => (/* binding */ maybeParseResponse),\n/* harmony export */   parseResponse: () => (/* binding */ parseResponse),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/parser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs\");\n\n\nfunction maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item)=>{\n                if (item.type === \"function_call\") {\n                    return {\n                        ...item,\n                        parsed_arguments: null\n                    };\n                }\n                if (item.type === \"message\") {\n                    return {\n                        ...item,\n                        content: item.content.map((content)=>({\n                                ...content,\n                                parsed: null\n                            }))\n                    };\n                } else {\n                    return item;\n                }\n            })\n        };\n    }\n    return parseResponse(response, params);\n}\nfunction parseResponse(response, params) {\n    const output = response.output.map((item)=>{\n        if (item.type === \"function_call\") {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item)\n            };\n        }\n        if (item.type === \"message\") {\n            const content = item.content.map((content)=>{\n                if (content.type === \"output_text\") {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text)\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, {\n        output\n    });\n    if (!Object.getOwnPropertyDescriptor(response, \"output_text\")) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, \"output_parsed\", {\n        enumerable: true,\n        get () {\n            for (const output of parsed.output){\n                if (output.type !== \"message\") {\n                    continue;\n                }\n                for (const content of output.content){\n                    if (content.type === \"output_text\" && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        }\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (\"$parseRaw\" in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nfunction hasAutoParseableInput(params) {\n    if ((0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_1__.isAutoParsableResponseFormat)(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nfunction makeParseableResponseTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool)=>tool.type === \"function\" && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments) : inputTool?.strict ? JSON.parse(toolCall.arguments) : null\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nfunction addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output){\n        if (output.type !== \"message\") {\n            continue;\n        }\n        for (const content of output.content){\n            if (content.type === \"output_text\") {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join(\"\");\n} //# sourceMappingURL=ResponsesParser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ResponsesParser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/RunnableFunction.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/RunnableFunction.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParsingToolFunction: () => (/* binding */ ParsingToolFunction),\n/* harmony export */   isRunnableFunctionWithParse: () => (/* binding */ isRunnableFunctionWithParse)\n/* harmony export */ });\nfunction isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === \"function\";\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */ class ParsingToolFunction {\n    constructor(input){\n        this.type = \"function\";\n        this.function = input;\n    }\n} //# sourceMappingURL=RunnableFunction.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1J1bm5hYmxlRnVuY3Rpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sU0FBU0EsNEJBQTRCQyxFQUFFO0lBQzFDLE9BQU8sT0FBT0EsR0FBR0MsS0FBSyxLQUFLO0FBQy9CO0FBQ0E7OztDQUdDLEdBQ00sTUFBTUM7SUFDVEMsWUFBWUMsS0FBSyxDQUFFO1FBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFDWixJQUFJLENBQUNDLFFBQVEsR0FBR0Y7SUFDcEI7QUFDSixFQUNBLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL2xpYi9SdW5uYWJsZUZ1bmN0aW9uLm1qcz8yODg0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1J1bm5hYmxlRnVuY3Rpb25XaXRoUGFyc2UoZm4pIHtcbiAgICByZXR1cm4gdHlwZW9mIGZuLnBhcnNlID09PSAnZnVuY3Rpb24nO1xufVxuLyoqXG4gKiBUaGlzIGlzIGhlbHBlciBjbGFzcyBmb3IgcGFzc2luZyBhIGBmdW5jdGlvbmAgYW5kIGBwYXJzZWAgd2hlcmUgdGhlIGBmdW5jdGlvbmBcbiAqIGFyZ3VtZW50IHR5cGUgbWF0Y2hlcyB0aGUgYHBhcnNlYCByZXR1cm4gdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFBhcnNpbmdUb29sRnVuY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0KSB7XG4gICAgICAgIHRoaXMudHlwZSA9ICdmdW5jdGlvbic7XG4gICAgICAgIHRoaXMuZnVuY3Rpb24gPSBpbnB1dDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SdW5uYWJsZUZ1bmN0aW9uLm1qcy5tYXAiXSwibmFtZXMiOlsiaXNSdW5uYWJsZUZ1bmN0aW9uV2l0aFBhcnNlIiwiZm4iLCJwYXJzZSIsIlBhcnNpbmdUb29sRnVuY3Rpb24iLCJjb25zdHJ1Y3RvciIsImlucHV0IiwidHlwZSIsImZ1bmN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/RunnableFunction.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/Util.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/Util.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettledWithThrow: () => (/* binding */ allSettledWithThrow)\n/* harmony export */ });\n/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */ const allSettledWithThrow = async (promises)=>{\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result)=>result.status === \"rejected\");\n    if (rejected.length) {\n        for (const result of rejected){\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results){\n        if (result.status === \"fulfilled\") {\n            values.push(result.value);\n        }\n    }\n    return values;\n}; //# sourceMappingURL=Util.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL1V0aWwubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNNLE1BQU1BLHNCQUFzQixPQUFPQztJQUN0QyxNQUFNQyxVQUFVLE1BQU1DLFFBQVFDLFVBQVUsQ0FBQ0g7SUFDekMsTUFBTUksV0FBV0gsUUFBUUksTUFBTSxDQUFDLENBQUNDLFNBQVdBLE9BQU9DLE1BQU0sS0FBSztJQUM5RCxJQUFJSCxTQUFTSSxNQUFNLEVBQUU7UUFDakIsS0FBSyxNQUFNRixVQUFVRixTQUFVO1lBQzNCSyxRQUFRQyxLQUFLLENBQUNKLE9BQU9LLE1BQU07UUFDL0I7UUFDQSxNQUFNLElBQUlDLE1BQU0sQ0FBQyxFQUFFUixTQUFTSSxNQUFNLENBQUMseUNBQXlDLENBQUM7SUFDakY7SUFDQSw4RUFBOEU7SUFDOUUsTUFBTUssU0FBUyxFQUFFO0lBQ2pCLEtBQUssTUFBTVAsVUFBVUwsUUFBUztRQUMxQixJQUFJSyxPQUFPQyxNQUFNLEtBQUssYUFBYTtZQUMvQk0sT0FBT0MsSUFBSSxDQUFDUixPQUFPUyxLQUFLO1FBQzVCO0lBQ0o7SUFDQSxPQUFPRjtBQUNYLEVBQUUsQ0FDRixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9saWIvVXRpbC5tanM/MTNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpa2UgYFByb21pc2UuYWxsU2V0dGxlZCgpYCBidXQgdGhyb3dzIGFuIGVycm9yIGlmIGFueSBwcm9taXNlcyBhcmUgcmVqZWN0ZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBhbGxTZXR0bGVkV2l0aFRocm93ID0gYXN5bmMgKHByb21pc2VzKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IFByb21pc2UuYWxsU2V0dGxlZChwcm9taXNlcyk7XG4gICAgY29uc3QgcmVqZWN0ZWQgPSByZXN1bHRzLmZpbHRlcigocmVzdWx0KSA9PiByZXN1bHQuc3RhdHVzID09PSAncmVqZWN0ZWQnKTtcbiAgICBpZiAocmVqZWN0ZWQubGVuZ3RoKSB7XG4gICAgICAgIGZvciAoY29uc3QgcmVzdWx0IG9mIHJlamVjdGVkKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKHJlc3VsdC5yZWFzb24pO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtyZWplY3RlZC5sZW5ndGh9IHByb21pc2UocykgZmFpbGVkIC0gc2VlIHRoZSBhYm92ZSBlcnJvcnNgKTtcbiAgICB9XG4gICAgLy8gTm90ZTogVFMgd2FzIGNvbXBsYWluaW5nIGFib3V0IHVzaW5nIGAuZmlsdGVyKCkubWFwKClgIGhlcmUgZm9yIHNvbWUgcmVhc29uXG4gICAgY29uc3QgdmFsdWVzID0gW107XG4gICAgZm9yIChjb25zdCByZXN1bHQgb2YgcmVzdWx0cykge1xuICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gJ2Z1bGZpbGxlZCcpIHtcbiAgICAgICAgICAgIHZhbHVlcy5wdXNoKHJlc3VsdC52YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlcztcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VdGlsLm1qcy5tYXAiXSwibmFtZXMiOlsiYWxsU2V0dGxlZFdpdGhUaHJvdyIsInByb21pc2VzIiwicmVzdWx0cyIsIlByb21pc2UiLCJhbGxTZXR0bGVkIiwicmVqZWN0ZWQiLCJmaWx0ZXIiLCJyZXN1bHQiLCJzdGF0dXMiLCJsZW5ndGgiLCJjb25zb2xlIiwiZXJyb3IiLCJyZWFzb24iLCJFcnJvciIsInZhbHVlcyIsInB1c2giLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/Util.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/chatCompletionUtils.mjs":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/chatCompletionUtils.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAssistantMessage: () => (/* binding */ isAssistantMessage),\n/* harmony export */   isPresent: () => (/* binding */ isPresent),\n/* harmony export */   isToolMessage: () => (/* binding */ isToolMessage)\n/* harmony export */ });\nconst isAssistantMessage = (message)=>{\n    return message?.role === \"assistant\";\n};\nconst isToolMessage = (message)=>{\n    return message?.role === \"tool\";\n};\nfunction isPresent(obj) {\n    return obj != null;\n} //# sourceMappingURL=chatCompletionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL2NoYXRDb21wbGV0aW9uVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPLE1BQU1BLHFCQUFxQixDQUFDQztJQUMvQixPQUFPQSxTQUFTQyxTQUFTO0FBQzdCLEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0IsQ0FBQ0Y7SUFDMUIsT0FBT0EsU0FBU0MsU0FBUztBQUM3QixFQUFFO0FBQ0ssU0FBU0UsVUFBVUMsR0FBRztJQUN6QixPQUFPQSxPQUFPO0FBQ2xCLEVBQ0EsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvbGliL2NoYXRDb21wbGV0aW9uVXRpbHMubWpzPzI0OTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzQXNzaXN0YW50TWVzc2FnZSA9IChtZXNzYWdlKSA9PiB7XG4gICAgcmV0dXJuIG1lc3NhZ2U/LnJvbGUgPT09ICdhc3Npc3RhbnQnO1xufTtcbmV4cG9ydCBjb25zdCBpc1Rvb2xNZXNzYWdlID0gKG1lc3NhZ2UpID0+IHtcbiAgICByZXR1cm4gbWVzc2FnZT8ucm9sZSA9PT0gJ3Rvb2wnO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBpc1ByZXNlbnQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhdENvbXBsZXRpb25VdGlscy5tanMubWFwIl0sIm5hbWVzIjpbImlzQXNzaXN0YW50TWVzc2FnZSIsIm1lc3NhZ2UiLCJyb2xlIiwiaXNUb29sTWVzc2FnZSIsImlzUHJlc2VudCIsIm9iaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/chatCompletionUtils.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertToolCallsAreChatCompletionFunctionToolCalls: () => (/* binding */ assertToolCallsAreChatCompletionFunctionToolCalls),\n/* harmony export */   hasAutoParseableInput: () => (/* binding */ hasAutoParseableInput),\n/* harmony export */   isAutoParsableResponseFormat: () => (/* binding */ isAutoParsableResponseFormat),\n/* harmony export */   isAutoParsableTool: () => (/* binding */ isAutoParsableTool),\n/* harmony export */   isChatCompletionFunctionTool: () => (/* binding */ isChatCompletionFunctionTool),\n/* harmony export */   makeParseableResponseFormat: () => (/* binding */ makeParseableResponseFormat),\n/* harmony export */   makeParseableTextFormat: () => (/* binding */ makeParseableTextFormat),\n/* harmony export */   makeParseableTool: () => (/* binding */ makeParseableTool),\n/* harmony export */   maybeParseChatCompletion: () => (/* binding */ maybeParseChatCompletion),\n/* harmony export */   parseChatCompletion: () => (/* binding */ parseChatCompletion),\n/* harmony export */   shouldParseToolCall: () => (/* binding */ shouldParseToolCall),\n/* harmony export */   validateInputTools: () => (/* binding */ validateInputTools)\n/* harmony export */ });\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n\nfunction isChatCompletionFunctionTool(tool) {\n    return tool !== undefined && \"function\" in tool && tool.function !== undefined;\n}\nfunction makeParseableResponseFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction makeParseableTextFormat(response_format, parser) {\n    const obj = {\n        ...response_format\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-response-format\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableResponseFormat(response_format) {\n    return response_format?.[\"$brand\"] === \"auto-parseable-response-format\";\n}\nfunction makeParseableTool(tool, { parser, callback }) {\n    const obj = {\n        ...tool\n    };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: \"auto-parseable-tool\",\n            enumerable: false\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false\n        },\n        $callback: {\n            value: callback,\n            enumerable: false\n        }\n    });\n    return obj;\n}\nfunction isAutoParsableTool(tool) {\n    return tool?.[\"$brand\"] === \"auto-parseable-tool\";\n}\nfunction maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice)=>{\n                assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n                return {\n                    ...choice,\n                    message: {\n                        ...choice.message,\n                        parsed: null,\n                        ...choice.message.tool_calls ? {\n                            tool_calls: choice.message.tool_calls\n                        } : undefined\n                    }\n                };\n            })\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nfunction parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice)=>{\n        if (choice.finish_reason === \"length\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.LengthFinishReasonError();\n        }\n        if (choice.finish_reason === \"content_filter\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.ContentFilterFinishReasonError();\n        }\n        assertToolCallsAreChatCompletionFunctionToolCalls(choice.message.tool_calls);\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...choice.message.tool_calls ? {\n                    tool_calls: choice.message.tool_calls?.map((toolCall)=>parseToolCall(params, toolCall)) ?? undefined\n                } : undefined,\n                parsed: choice.message.content && !choice.message.refusal ? parseResponseFormat(params, choice.message.content) : null\n            }\n        };\n    });\n    return {\n        ...completion,\n        choices\n    };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== \"json_schema\") {\n        return null;\n    }\n    if (params.response_format?.type === \"json_schema\") {\n        if (\"$parseRaw\" in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool)=>isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name); // TS doesn't narrow based on isChatCompletionTool\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments) : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments) : null\n        }\n    };\n}\nfunction shouldParseToolCall(params, toolCall) {\n    if (!params || !(\"tools\" in params) || !params.tools) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool)=>isChatCompletionFunctionTool(inputTool) && inputTool.function?.name === toolCall.function.name);\n    return isChatCompletionFunctionTool(inputTool) && (isAutoParsableTool(inputTool) || inputTool?.function.strict || false);\n}\nfunction hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return params.tools?.some((t)=>isAutoParsableTool(t) || t.type === \"function\" && t.function.strict === true) ?? false;\n}\nfunction assertToolCallsAreChatCompletionFunctionToolCalls(toolCalls) {\n    for (const toolCall of toolCalls || []){\n        if (toolCall.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool calls are supported; Received \\`${toolCall.type}\\``);\n        }\n    }\n}\nfunction validateInputTools(tools) {\n    for (const tool of tools ?? []){\n        if (tool.type !== \"function\") {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_0__.OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n} //# sourceMappingURL=parser.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/responses/ResponseStream.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/responses/ResponseStream.mjs ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseStream: () => (/* binding */ ResponseStream)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../EventStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/EventStream.mjs\");\n/* harmony import */ var _ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ResponsesParser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ResponsesParser.mjs\");\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\n\n\n\n\nclass ResponseStream extends _EventStream_mjs__WEBPACK_IMPORTED_MODULE_2__.EventStream {\n    constructor(params){\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(()=>runner._createOrRetrieveResponse(client, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    \"X-Stainless-Helper-Method\": \"stream\"\n                }\n            }));\n        return runner;\n    }\n    async _createOrRetrieveResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted) this.controller.abort();\n            signal.addEventListener(\"abort\", ()=>this.controller.abort());\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        let stream;\n        let starting_after = null;\n        if (\"response_id\" in params) {\n            stream = await client.responses.retrieve(params.response_id, {\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal,\n                stream: true\n            });\n            starting_after = params.starting_after ?? null;\n        } else {\n            stream = await client.responses.create({\n                ...params,\n                stream: true\n            }, {\n                ...options,\n                signal: this.controller.signal\n            });\n        }\n        this._connected();\n        for await (const event of stream){\n            (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event, starting_after);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.APIUserAbortError();\n        }\n        return (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended) return;\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event, starting_after) {\n        if (this.ended) return;\n        const maybeEmit = (name, event)=>{\n            if (starting_after == null || event.sequence_number > starting_after) {\n                this._emit(name, event);\n            }\n        };\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        maybeEmit(\"event\", event);\n        switch(event.type){\n            case \"response.output_text.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        maybeEmit(\"response.output_text.delta\", {\n                            ...event,\n                            snapshot: content.text\n                        });\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = response.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        maybeEmit(\"response.function_call_arguments.delta\", {\n                            ...event,\n                            snapshot: output.arguments\n                        });\n                    }\n                    break;\n                }\n            default:\n                maybeEmit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`request ended without sending any events`);\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_params, \"f\"));\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== \"response.created\") {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch(event.type){\n            case \"response.output_item.added\":\n                {\n                    snapshot.output.push(event.item);\n                    break;\n                }\n            case \"response.content_part.added\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    const type = output.type;\n                    const part = event.part;\n                    if (type === \"message\" && part.type !== \"reasoning_text\") {\n                        output.content.push(part);\n                    } else if (type === \"reasoning\" && part.type === \"reasoning_text\") {\n                        if (!output.content) {\n                            output.content = [];\n                        }\n                        output.content.push(part);\n                    }\n                    break;\n                }\n            case \"response.output_text.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"message\") {\n                        const content = output.content[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"output_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                        }\n                        content.text += event.delta;\n                    }\n                    break;\n                }\n            case \"response.function_call_arguments.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"function_call\") {\n                        output.arguments += event.delta;\n                    }\n                    break;\n                }\n            case \"response.reasoning_text.delta\":\n                {\n                    const output = snapshot.output[event.output_index];\n                    if (!output) {\n                        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing output at index ${event.output_index}`);\n                    }\n                    if (output.type === \"reasoning\") {\n                        const content = output.content?.[event.content_index];\n                        if (!content) {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`missing content at index ${event.content_index}`);\n                        }\n                        if (content.type !== \"reasoning_text\") {\n                            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(`expected content to be 'reasoning_text', got ${content.type}`);\n                        }\n                        content.text += event.delta;\n                    }\n                    break;\n                }\n            case \"response.completed\":\n                {\n                    (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldSet)(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                    break;\n                }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on(\"event\", (event)=>{\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            } else {\n                pushQueue.push(event);\n            }\n        });\n        this.on(\"end\", ()=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"abort\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on(\"error\", (err)=>{\n            done = true;\n            for (const reader of readQueue){\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async ()=>{\n                if (!pushQueue.length) {\n                    if (done) {\n                        return {\n                            value: undefined,\n                            done: true\n                        };\n                    }\n                    return new Promise((resolve, reject)=>readQueue.push({\n                            resolve,\n                            reject\n                        })).then((event)=>event ? {\n                            value: event,\n                            done: false\n                        } : {\n                            value: undefined,\n                            done: true\n                        });\n                }\n                const event = pushQueue.shift();\n                return {\n                    value: event,\n                    done: false\n                };\n            },\n            return: async ()=>{\n                this.abort();\n                return {\n                    value: undefined,\n                    done: true\n                };\n            }\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */ async finalResponse() {\n        await this.done();\n        const response = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _ResponseStream_finalResponse, \"f\");\n        if (!response) throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.OpenAIError(\"stream ended without producing a ChatCompletion\");\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return (0,_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeParseResponse)(snapshot, params);\n} //# sourceMappingURL=ResponseStream.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/responses/ResponseStream.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/audio.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/audio.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* binding */ Audio)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _speech_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./speech.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/speech.mjs\");\n/* harmony import */ var _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcriptions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/transcriptions.mjs\");\n/* harmony import */ var _translations_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./translations.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/translations.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Audio extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.transcriptions = new _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions(this._client);\n        this.translations = new _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations(this._client);\n        this.speech = new _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech(this._client);\n    }\n}\nAudio.Transcriptions = _transcriptions_mjs__WEBPACK_IMPORTED_MODULE_2__.Transcriptions;\nAudio.Translations = _translations_mjs__WEBPACK_IMPORTED_MODULE_3__.Translations;\nAudio.Speech = _speech_mjs__WEBPACK_IMPORTED_MODULE_1__.Speech; //# sourceMappingURL=audio.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL2F1ZGlvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNaO0FBQ0o7QUFDb0I7QUFDSDtBQUNEO0FBQ0g7QUFDNUMsTUFBTU8sY0FBY1AsMkRBQVdBO0lBQ2xDUSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsY0FBYyxHQUFHLElBQUlQLCtEQUFnQyxDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUN2RSxJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJUCwyREFBNEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87UUFDakUsSUFBSSxDQUFDRSxNQUFNLEdBQUcsSUFBSVosK0NBQWdCLENBQUMsSUFBSSxDQUFDVSxPQUFPO0lBQ25EO0FBQ0o7QUFDQUosTUFBTUgsY0FBYyxHQUFHQSwrREFBY0E7QUFDckNHLE1BQU1ELFlBQVksR0FBR0EsMkRBQVlBO0FBQ2pDQyxNQUFNTCxNQUFNLEdBQUdBLCtDQUFNQSxFQUNyQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYXVkaW8vYXVkaW8ubWpzPzdhMWUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBTcGVlY2hBUEkgZnJvbSBcIi4vc3BlZWNoLm1qc1wiO1xuaW1wb3J0IHsgU3BlZWNoIH0gZnJvbSBcIi4vc3BlZWNoLm1qc1wiO1xuaW1wb3J0ICogYXMgVHJhbnNjcmlwdGlvbnNBUEkgZnJvbSBcIi4vdHJhbnNjcmlwdGlvbnMubWpzXCI7XG5pbXBvcnQgeyBUcmFuc2NyaXB0aW9ucywgfSBmcm9tIFwiLi90cmFuc2NyaXB0aW9ucy5tanNcIjtcbmltcG9ydCAqIGFzIFRyYW5zbGF0aW9uc0FQSSBmcm9tIFwiLi90cmFuc2xhdGlvbnMubWpzXCI7XG5pbXBvcnQgeyBUcmFuc2xhdGlvbnMsIH0gZnJvbSBcIi4vdHJhbnNsYXRpb25zLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEF1ZGlvIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnRyYW5zY3JpcHRpb25zID0gbmV3IFRyYW5zY3JpcHRpb25zQVBJLlRyYW5zY3JpcHRpb25zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMudHJhbnNsYXRpb25zID0gbmV3IFRyYW5zbGF0aW9uc0FQSS5UcmFuc2xhdGlvbnModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5zcGVlY2ggPSBuZXcgU3BlZWNoQVBJLlNwZWVjaCh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cbkF1ZGlvLlRyYW5zY3JpcHRpb25zID0gVHJhbnNjcmlwdGlvbnM7XG5BdWRpby5UcmFuc2xhdGlvbnMgPSBUcmFuc2xhdGlvbnM7XG5BdWRpby5TcGVlY2ggPSBTcGVlY2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdWRpby5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiU3BlZWNoQVBJIiwiU3BlZWNoIiwiVHJhbnNjcmlwdGlvbnNBUEkiLCJUcmFuc2NyaXB0aW9ucyIsIlRyYW5zbGF0aW9uc0FQSSIsIlRyYW5zbGF0aW9ucyIsIkF1ZGlvIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJ0cmFuc2NyaXB0aW9ucyIsIl9jbGllbnQiLCJ0cmFuc2xhdGlvbnMiLCJzcGVlY2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/audio.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/speech.mjs":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/speech.mjs ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Speech: () => (/* binding */ Speech)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Speech extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Generates audio from the input text.\n     *\n     * @example\n     * ```ts\n     * const speech = await client.audio.speech.create({\n     *   input: 'input',\n     *   model: 'string',\n     *   voice: 'ash',\n     * });\n     *\n     * const content = await speech.blob();\n     * console.log(content);\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/audio/speech\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/octet-stream\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=speech.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3NwZWVjaC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0k7QUFDbkQsTUFBTUUsZUFBZUYsMkRBQVdBO0lBQ25DOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxpQkFBaUI7WUFDdENIO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRVEsUUFBUTtnQkFBMkI7Z0JBQUdKLFNBQVNHO2FBQVE7WUFDaEZFLGtCQUFrQjtRQUN0QjtJQUNKO0FBQ0osRUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYXVkaW8vc3BlZWNoLm1qcz9jM2FkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5leHBvcnQgY2xhc3MgU3BlZWNoIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhdWRpbyBmcm9tIHRoZSBpbnB1dCB0ZXh0LlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHNwZWVjaCA9IGF3YWl0IGNsaWVudC5hdWRpby5zcGVlY2guY3JlYXRlKHtcbiAgICAgKiAgIGlucHV0OiAnaW5wdXQnLFxuICAgICAqICAgbW9kZWw6ICdzdHJpbmcnLFxuICAgICAqICAgdm9pY2U6ICdhc2gnLFxuICAgICAqIH0pO1xuICAgICAqXG4gICAgICogY29uc3QgY29udGVudCA9IGF3YWl0IHNwZWVjaC5ibG9iKCk7XG4gICAgICogY29uc29sZS5sb2coY29udGVudCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvYXVkaW8vc3BlZWNoJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgQWNjZXB0OiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgICAgICBfX2JpbmFyeVJlc3BvbnNlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGVlY2gubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsImJ1aWxkSGVhZGVycyIsIlNwZWVjaCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJoZWFkZXJzIiwiQWNjZXB0IiwiX19iaW5hcnlSZXNwb25zZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/speech.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/transcriptions.mjs":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/transcriptions.mjs ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transcriptions: () => (/* binding */ Transcriptions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Transcriptions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/transcriptions\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=transcriptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zY3JpcHRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDbUI7QUFDbEUsTUFBTUUsdUJBQXVCRiwyREFBV0E7SUFDM0NHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyx5QkFBeUJOLGtGQUEyQkEsQ0FBQztZQUMxRUc7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFFBQVFKLEtBQUtJLE1BQU0sSUFBSTtZQUN2QkMsWUFBWTtnQkFBRUMsT0FBT04sS0FBS00sS0FBSztZQUFDO1FBQ3BDLEdBQUcsSUFBSSxDQUFDSixPQUFPO0lBQ25CO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYXVkaW8vdHJhbnNjcmlwdGlvbnMubWpzPzA4YmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmV4cG9ydCBjbGFzcyBUcmFuc2NyaXB0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9hdWRpby90cmFuc2NyaXB0aW9ucycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UsXG4gICAgICAgICAgICBfX21ldGFkYXRhOiB7IG1vZGVsOiBib2R5Lm1vZGVsIH0sXG4gICAgICAgIH0sIHRoaXMuX2NsaWVudCkpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYW5zY3JpcHRpb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMiLCJUcmFuc2NyaXB0aW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJzdHJlYW0iLCJfX21ldGFkYXRhIiwibW9kZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/transcriptions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/translations.mjs":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/translations.mjs ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Translations: () => (/* binding */ Translations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Translations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/audio/translations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            __metadata: {\n                model: body.model\n            }\n        }, this._client));\n    }\n} //# sourceMappingURL=translations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2F1ZGlvL3RyYW5zbGF0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ21CO0FBQ2xFLE1BQU1FLHFCQUFxQkYsMkRBQVdBO0lBQ3pDRyxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsdUJBQXVCTixrRkFBMkJBLENBQUM7WUFBRUc7WUFBTSxHQUFHQyxPQUFPO1lBQUVHLFlBQVk7Z0JBQUVDLE9BQU9MLEtBQUtLLEtBQUs7WUFBQztRQUFFLEdBQUcsSUFBSSxDQUFDSCxPQUFPO0lBQ3JKO0FBQ0osRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYXVkaW8vdHJhbnNsYXRpb25zLm1qcz9iNmEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhbnNsYXRpb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2F1ZGlvL3RyYW5zbGF0aW9ucycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMsIF9fbWV0YWRhdGE6IHsgbW9kZWw6IGJvZHkubW9kZWwgfSB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2xhdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIm11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsIlRyYW5zbGF0aW9ucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJfX21ldGFkYXRhIiwibW9kZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/translations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/batches.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/batches.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Batches: () => (/* binding */ Batches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Batches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */ create(body, options) {\n        return this._client.post(\"/batches\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieves a batch.\n     */ retrieve(batchID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}`, options);\n    }\n    /**\n     * List your organization's batches.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/batches\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */ cancel(batchID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/batches/${batchID}/cancel`, options);\n    }\n} //# sourceMappingURL=batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JhdGNoZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDbkM7QUFDQztBQUNGO0FBQzNDLE1BQU1HLGdCQUFnQkgsMkRBQVdBO0lBQ3BDOztLQUVDLEdBQ0RJLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxZQUFZO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzVEO0lBQ0E7O0tBRUMsR0FDREcsU0FBU0MsT0FBTyxFQUFFSixPQUFPLEVBQUU7UUFDdkIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ksR0FBRyxDQUFDVCwwREFBSyxDQUFDLFNBQVMsRUFBRVEsUUFBUSxDQUFDLEVBQUVKO0lBQ3hEO0lBQ0E7O0tBRUMsR0FDRE0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNPLFVBQVUsQ0FBQyxZQUFhYiw0REFBVUEsRUFBRztZQUFFWTtZQUFPLEdBQUdQLE9BQU87UUFBQztJQUNqRjtJQUNBOzs7O0tBSUMsR0FDRFMsT0FBT0wsT0FBTyxFQUFFSixPQUFPLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDTiwwREFBSyxDQUFDLFNBQVMsRUFBRVEsUUFBUSxPQUFPLENBQUMsRUFBRUo7SUFDaEU7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iYXRjaGVzLm1qcz9mMDYyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgQmF0Y2hlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuZCBleGVjdXRlcyBhIGJhdGNoIGZyb20gYW4gdXBsb2FkZWQgZmlsZSBvZiByZXF1ZXN0c1xuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2JhdGNoZXMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIGJhdGNoLlxuICAgICAqL1xuICAgIHJldHJpZXZlKGJhdGNoSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2JhdGNoZXMvJHtiYXRjaElEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IHlvdXIgb3JnYW5pemF0aW9uJ3MgYmF0Y2hlcy5cbiAgICAgKi9cbiAgICBsaXN0KHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvYmF0Y2hlcycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FuY2VscyBhbiBpbi1wcm9ncmVzcyBiYXRjaC4gVGhlIGJhdGNoIHdpbGwgYmUgaW4gc3RhdHVzIGBjYW5jZWxsaW5nYCBmb3IgdXAgdG9cbiAgICAgKiAxMCBtaW51dGVzLCBiZWZvcmUgY2hhbmdpbmcgdG8gYGNhbmNlbGxlZGAsIHdoZXJlIGl0IHdpbGwgaGF2ZSBwYXJ0aWFsIHJlc3VsdHNcbiAgICAgKiAoaWYgYW55KSBhdmFpbGFibGUgaW4gdGhlIG91dHB1dCBmaWxlLlxuICAgICAqL1xuICAgIGNhbmNlbChiYXRjaElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvYmF0Y2hlcy8ke2JhdGNoSUR9L2NhbmNlbGAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhdGNoZXMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiQmF0Y2hlcyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJyZXRyaWV2ZSIsImJhdGNoSUQiLCJnZXQiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiY2FuY2VsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/batches.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/assistants.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/assistants.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Assistants: () => (/* binding */ Assistants)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Assistants extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.create({\n     *   model: 'gpt-4o',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/assistants\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.retrieve(\n     *   'assistant_id',\n     * );\n     * ```\n     */ retrieve(assistantID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistant = await client.beta.assistants.update(\n     *   'assistant_id',\n     * );\n     * ```\n     */ update(assistantID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of assistants.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const assistant of client.beta.assistants.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/assistants\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete an assistant.\n     *\n     * @example\n     * ```ts\n     * const assistantDeleted =\n     *   await client.beta.assistants.delete('assistant_id');\n     * ```\n     */ delete(assistantID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/assistants/${assistantID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=assistants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYXNzaXN0YW50cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDQztBQUNHO0FBQ0w7QUFDOUMsTUFBTUksbUJBQW1CSiwyREFBV0E7SUFDdkM7Ozs7Ozs7OztLQVNDLEdBQ0RLLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxlQUFlO1lBQ3BDSDtZQUNBLEdBQUdDLE9BQU87WUFDVkcsU0FBU1IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdLLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEQyxTQUFTQyxXQUFXLEVBQUVMLE9BQU8sRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSyxHQUFHLENBQUNWLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUN2RCxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDREksT0FBT0YsV0FBVyxFQUFFTixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNOLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUN4RE47WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVULE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDUyxVQUFVLENBQUMsZUFBZ0JoQiw0REFBVUEsRUFBRztZQUN4RGU7WUFDQSxHQUFHVCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7Ozs7Ozs7S0FRQyxHQUNEUSxPQUFPTixXQUFXLEVBQUVMLE9BQU8sRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDVSxNQUFNLENBQUNmLDBEQUFLLENBQUMsWUFBWSxFQUFFUyxZQUFZLENBQUMsRUFBRTtZQUMxRCxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7QUFDSixFQUNBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL2Fzc2lzdGFudHMubWpzPzEyZmQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEFzc2lzdGFudHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGFzc2lzdGFudCB3aXRoIGEgbW9kZWwgYW5kIGluc3RydWN0aW9ucy5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnQgPSBhd2FpdCBjbGllbnQuYmV0YS5hc3Npc3RhbnRzLmNyZWF0ZSh7XG4gICAgICogICBtb2RlbDogJ2dwdC00bycsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvYXNzaXN0YW50cycsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXRyaWV2ZXMgYW4gYXNzaXN0YW50LlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGFzc2lzdGFudCA9IGF3YWl0IGNsaWVudC5iZXRhLmFzc2lzdGFudHMucmV0cmlldmUoXG4gICAgICogICAnYXNzaXN0YW50X2lkJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGFzc2lzdGFudElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9hc3Npc3RhbnRzLyR7YXNzaXN0YW50SUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTW9kaWZpZXMgYW4gYXNzaXN0YW50LlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGFzc2lzdGFudCA9IGF3YWl0IGNsaWVudC5iZXRhLmFzc2lzdGFudHMudXBkYXRlKFxuICAgICAqICAgJ2Fzc2lzdGFudF9pZCcsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICB1cGRhdGUoYXNzaXN0YW50SUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9hc3Npc3RhbnRzLyR7YXNzaXN0YW50SUR9YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIGFzc2lzdGFudHMuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgYXNzaXN0YW50IG9mIGNsaWVudC5iZXRhLmFzc2lzdGFudHMubGlzdCgpKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2Fzc2lzdGFudHMnLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGFuIGFzc2lzdGFudC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBhc3Npc3RhbnREZWxldGVkID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5iZXRhLmFzc2lzdGFudHMuZGVsZXRlKCdhc3Npc3RhbnRfaWQnKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkZWxldGUoYXNzaXN0YW50SUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2Fzc2lzdGFudHMvJHthc3Npc3RhbnRJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFzc2lzdGFudHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiQXNzaXN0YW50cyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJoZWFkZXJzIiwicmV0cmlldmUiLCJhc3Npc3RhbnRJRCIsImdldCIsInVwZGF0ZSIsImxpc3QiLCJxdWVyeSIsImdldEFQSUxpc3QiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/assistants.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/beta.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/beta.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Beta: () => (/* binding */ Beta)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./assistants.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/assistants.mjs\");\n/* harmony import */ var _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./realtime/realtime.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/realtime.mjs\");\n/* harmony import */ var _chatkit_chatkit_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chatkit/chatkit.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/chatkit.mjs\");\n/* harmony import */ var _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./threads/threads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/threads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass Beta extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.realtime = new _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime(this._client);\n        this.chatkit = new _chatkit_chatkit_mjs__WEBPACK_IMPORTED_MODULE_3__.ChatKit(this._client);\n        this.assistants = new _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants(this._client);\n        this.threads = new _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_4__.Threads(this._client);\n    }\n}\nBeta.Realtime = _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_2__.Realtime;\nBeta.ChatKit = _chatkit_chatkit_mjs__WEBPACK_IMPORTED_MODULE_3__.ChatKit;\nBeta.Assistants = _assistants_mjs__WEBPACK_IMPORTED_MODULE_1__.Assistants;\nBeta.Threads = _threads_threads_mjs__WEBPACK_IMPORTED_MODULE_4__.Threads; //# sourceMappingURL=beta.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYmV0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0o7QUFDSDtBQUNRO0FBQ0g7QUFDQTtBQUNKO0FBQ0k7QUFDSDtBQUMxQyxNQUFNUyxhQUFhVCwyREFBV0E7SUFDakNVLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVQsNERBQW9CLENBQUMsSUFBSSxDQUFDVSxPQUFPO1FBQ3JELElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUlULHlEQUFrQixDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUNsRCxJQUFJLENBQUNFLFVBQVUsR0FBRyxJQUFJZCx1REFBd0IsQ0FBQyxJQUFJLENBQUNZLE9BQU87UUFDM0QsSUFBSSxDQUFDRyxPQUFPLEdBQUcsSUFBSVQseURBQWtCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ3REO0FBQ0o7QUFDQUosS0FBS0wsUUFBUSxHQUFHQSw0REFBUUE7QUFDeEJLLEtBQUtILE9BQU8sR0FBR0EseURBQU9BO0FBQ3RCRyxLQUFLUCxVQUFVLEdBQUdBLHVEQUFVQTtBQUM1Qk8sS0FBS0QsT0FBTyxHQUFHQSx5REFBT0EsRUFDdEIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvYmV0YS5tanM/NGJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIEFzc2lzdGFudHNBUEkgZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCB7IEFzc2lzdGFudHMsIH0gZnJvbSBcIi4vYXNzaXN0YW50cy5tanNcIjtcbmltcG9ydCAqIGFzIFJlYWx0aW1lQVBJIGZyb20gXCIuL3JlYWx0aW1lL3JlYWx0aW1lLm1qc1wiO1xuaW1wb3J0IHsgUmVhbHRpbWUsIH0gZnJvbSBcIi4vcmVhbHRpbWUvcmVhbHRpbWUubWpzXCI7XG5pbXBvcnQgKiBhcyBDaGF0S2l0QVBJIGZyb20gXCIuL2NoYXRraXQvY2hhdGtpdC5tanNcIjtcbmltcG9ydCB7IENoYXRLaXQgfSBmcm9tIFwiLi9jaGF0a2l0L2NoYXRraXQubWpzXCI7XG5pbXBvcnQgKiBhcyBUaHJlYWRzQVBJIGZyb20gXCIuL3RocmVhZHMvdGhyZWFkcy5tanNcIjtcbmltcG9ydCB7IFRocmVhZHMsIH0gZnJvbSBcIi4vdGhyZWFkcy90aHJlYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEJldGEgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucmVhbHRpbWUgPSBuZXcgUmVhbHRpbWVBUEkuUmVhbHRpbWUodGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5jaGF0a2l0ID0gbmV3IENoYXRLaXRBUEkuQ2hhdEtpdCh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmFzc2lzdGFudHMgPSBuZXcgQXNzaXN0YW50c0FQSS5Bc3Npc3RhbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMudGhyZWFkcyA9IG5ldyBUaHJlYWRzQVBJLlRocmVhZHModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5CZXRhLlJlYWx0aW1lID0gUmVhbHRpbWU7XG5CZXRhLkNoYXRLaXQgPSBDaGF0S2l0O1xuQmV0YS5Bc3Npc3RhbnRzID0gQXNzaXN0YW50cztcbkJldGEuVGhyZWFkcyA9IFRocmVhZHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iZXRhLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJBc3Npc3RhbnRzQVBJIiwiQXNzaXN0YW50cyIsIlJlYWx0aW1lQVBJIiwiUmVhbHRpbWUiLCJDaGF0S2l0QVBJIiwiQ2hhdEtpdCIsIlRocmVhZHNBUEkiLCJUaHJlYWRzIiwiQmV0YSIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwicmVhbHRpbWUiLCJfY2xpZW50IiwiY2hhdGtpdCIsImFzc2lzdGFudHMiLCJ0aHJlYWRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/beta.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/chatkit.mjs":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/chatkit.mjs ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatKit: () => (/* binding */ ChatKit)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sessions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/sessions.mjs\");\n/* harmony import */ var _threads_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./threads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/threads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass ChatKit extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.sessions = new _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions(this._client);\n        this.threads = new _threads_mjs__WEBPACK_IMPORTED_MODULE_2__.Threads(this._client);\n    }\n}\nChatKit.Sessions = _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions;\nChatKit.Threads = _threads_mjs__WEBPACK_IMPORTED_MODULE_2__.Threads; //# sourceMappingURL=chatkit.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvY2hhdGtpdC9jaGF0a2l0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ1g7QUFDSjtBQUNFO0FBQ0g7QUFDbEMsTUFBTUssZ0JBQWdCTCwyREFBV0E7SUFDcENNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVAsbURBQW9CLENBQUMsSUFBSSxDQUFDUSxPQUFPO1FBQ3JELElBQUksQ0FBQ0MsT0FBTyxHQUFHLElBQUlQLGlEQUFrQixDQUFDLElBQUksQ0FBQ00sT0FBTztJQUN0RDtBQUNKO0FBQ0FKLFFBQVFILFFBQVEsR0FBR0EsbURBQVFBO0FBQzNCRyxRQUFRRCxPQUFPLEdBQUdBLGlEQUFPQSxFQUN6QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9jaGF0a2l0L2NoYXRraXQubWpzP2M4M2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBTZXNzaW9uc0FQSSBmcm9tIFwiLi9zZXNzaW9ucy5tanNcIjtcbmltcG9ydCB7IFNlc3Npb25zIH0gZnJvbSBcIi4vc2Vzc2lvbnMubWpzXCI7XG5pbXBvcnQgKiBhcyBUaHJlYWRzQVBJIGZyb20gXCIuL3RocmVhZHMubWpzXCI7XG5pbXBvcnQgeyBUaHJlYWRzLCB9IGZyb20gXCIuL3RocmVhZHMubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdEtpdCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5zZXNzaW9ucyA9IG5ldyBTZXNzaW9uc0FQSS5TZXNzaW9ucyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLnRocmVhZHMgPSBuZXcgVGhyZWFkc0FQSS5UaHJlYWRzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuQ2hhdEtpdC5TZXNzaW9ucyA9IFNlc3Npb25zO1xuQ2hhdEtpdC5UaHJlYWRzID0gVGhyZWFkcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXRraXQubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlNlc3Npb25zQVBJIiwiU2Vzc2lvbnMiLCJUaHJlYWRzQVBJIiwiVGhyZWFkcyIsIkNoYXRLaXQiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInNlc3Npb25zIiwiX2NsaWVudCIsInRocmVhZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/chatkit.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/sessions.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/sessions.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sessions: () => (/* binding */ Sessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Sessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a ChatKit session\n     *\n     * @example\n     * ```ts\n     * const chatSession =\n     *   await client.beta.chatkit.sessions.create({\n     *     user: 'x',\n     *     workflow: { id: 'id' },\n     *   });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/chatkit/sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancel a ChatKit session\n     *\n     * @example\n     * ```ts\n     * const chatSession =\n     *   await client.beta.chatkit.sessions.cancel('cksess_123');\n     * ```\n     */ cancel(sessionID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/chatkit/sessions/${sessionID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvY2hhdGtpdC9zZXNzaW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ0w7QUFDakQsTUFBTUcsaUJBQWlCSCwyREFBV0E7SUFDckM7Ozs7Ozs7Ozs7O0tBV0MsR0FDREksT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLHFCQUFxQjtZQUMxQ0g7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWtCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2xGO0lBQ0o7SUFDQTs7Ozs7Ozs7S0FRQyxHQUNEQyxPQUFPQyxTQUFTLEVBQUVMLE9BQU8sRUFBRTtRQUN2QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNOLDBEQUFLLENBQUMsa0JBQWtCLEVBQUVTLFVBQVUsT0FBTyxDQUFDLEVBQUU7WUFDbkUsR0FBR0wsT0FBTztZQUNWRyxTQUFTUixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFrQjtnQkFBR0ssU0FBU0c7YUFBUTtRQUNsRjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9jaGF0a2l0L3Nlc3Npb25zLm1qcz80ZDE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgU2Vzc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgQ2hhdEtpdCBzZXNzaW9uXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgY2hhdFNlc3Npb24gPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmJldGEuY2hhdGtpdC5zZXNzaW9ucy5jcmVhdGUoe1xuICAgICAqICAgICB1c2VyOiAneCcsXG4gICAgICogICAgIHdvcmtmbG93OiB7IGlkOiAnaWQnIH0sXG4gICAgICogICB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9jaGF0a2l0L3Nlc3Npb25zJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2NoYXRraXRfYmV0YT12MScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ2FuY2VsIGEgQ2hhdEtpdCBzZXNzaW9uXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgY2hhdFNlc3Npb24gPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmJldGEuY2hhdGtpdC5zZXNzaW9ucy5jYW5jZWwoJ2Nrc2Vzc18xMjMnKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjYW5jZWwoc2Vzc2lvbklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvY2hhdGtpdC9zZXNzaW9ucy8ke3Nlc3Npb25JRH0vY2FuY2VsYCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnY2hhdGtpdF9iZXRhPXYxJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiU2Vzc2lvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsImNhbmNlbCIsInNlc3Npb25JRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/sessions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/threads.mjs":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/threads.mjs ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Threads: () => (/* binding */ Threads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Threads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieve a ChatKit thread\n     *\n     * @example\n     * ```ts\n     * const chatkitThread =\n     *   await client.beta.chatkit.threads.retrieve('cthr_123');\n     * ```\n     */ retrieve(threadID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chatkit/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * List ChatKit threads\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatkitThread of client.beta.chatkit.threads.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/chatkit/threads\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.ConversationCursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a ChatKit thread\n     *\n     * @example\n     * ```ts\n     * const thread = await client.beta.chatkit.threads.delete(\n     *   'cthr_123',\n     * );\n     * ```\n     */ delete(threadID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chatkit/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * List ChatKit thread items\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const thread of client.beta.chatkit.threads.listItems(\n     *   'cthr_123',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ listItems(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chatkit/threads/${threadID}/items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.ConversationCursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"chatkit_beta=v1\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=threads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvY2hhdGtpdC90aHJlYWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNjO0FBQ1Y7QUFDTDtBQUNqRCxNQUFNSSxnQkFBZ0JKLDJEQUFXQTtJQUNwQzs7Ozs7Ozs7S0FRQyxHQUNESyxTQUFTQyxRQUFRLEVBQUVDLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUNOLDBEQUFLLENBQUMsaUJBQWlCLEVBQUVHLFNBQVMsQ0FBQyxFQUFFO1lBQ3pELEdBQUdDLE9BQU87WUFDVkcsU0FBU1IsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBa0I7Z0JBQUdLLFNBQVNHO2FBQVE7UUFDbEY7SUFDSjtJQUNBOzs7Ozs7Ozs7O0tBVUMsR0FDREMsS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRUwsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNLLFVBQVUsQ0FBQyxvQkFBcUJaLHdFQUFzQkEsRUFBRztZQUN6RVc7WUFDQSxHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWtCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2xGO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDREksT0FBT1IsUUFBUSxFQUFFQyxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ00sTUFBTSxDQUFDWCwwREFBSyxDQUFDLGlCQUFpQixFQUFFRyxTQUFTLENBQUMsRUFBRTtZQUM1RCxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWtCO2dCQUFHSyxTQUFTRzthQUFRO1FBQ2xGO0lBQ0o7SUFDQTs7Ozs7Ozs7Ozs7O0tBWUMsR0FDREssVUFBVVQsUUFBUSxFQUFFTSxRQUFRLENBQUMsQ0FBQyxFQUFFTCxPQUFPLEVBQUU7UUFDckMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDViwwREFBSyxDQUFDLGlCQUFpQixFQUFFRyxTQUFTLE1BQU0sQ0FBQyxFQUFHTCx3RUFBc0JBLEVBQUc7WUFBRVc7WUFBTyxHQUFHTCxPQUFPO1lBQUVHLFNBQVNSLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWtCO2dCQUFHSyxTQUFTRzthQUFRO1FBQUU7SUFDN007QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL2NoYXRraXQvdGhyZWFkcy5tanM/OGRkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IENvbnZlcnNhdGlvbkN1cnNvclBhZ2UsIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFRocmVhZHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgYSBDaGF0S2l0IHRocmVhZFxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGNoYXRraXRUaHJlYWQgPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmJldGEuY2hhdGtpdC50aHJlYWRzLnJldHJpZXZlKCdjdGhyXzEyMycpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKHRocmVhZElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9jaGF0a2l0L3RocmVhZHMvJHt0aHJlYWRJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdjaGF0a2l0X2JldGE9djEnIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgQ2hhdEtpdCB0aHJlYWRzXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgY2hhdGtpdFRocmVhZCBvZiBjbGllbnQuYmV0YS5jaGF0a2l0LnRocmVhZHMubGlzdCgpKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2NoYXRraXQvdGhyZWFkcycsIChDb252ZXJzYXRpb25DdXJzb3JQYWdlKSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdjaGF0a2l0X2JldGE9djEnIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIENoYXRLaXQgdGhyZWFkXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgdGhyZWFkID0gYXdhaXQgY2xpZW50LmJldGEuY2hhdGtpdC50aHJlYWRzLmRlbGV0ZShcbiAgICAgKiAgICdjdGhyXzEyMycsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBkZWxldGUodGhyZWFkSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2NoYXRraXQvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2NoYXRraXRfYmV0YT12MScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBDaGF0S2l0IHRocmVhZCBpdGVtc1xuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IHRocmVhZCBvZiBjbGllbnQuYmV0YS5jaGF0a2l0LnRocmVhZHMubGlzdEl0ZW1zKFxuICAgICAqICAgJ2N0aHJfMTIzJyxcbiAgICAgKiApKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdEl0ZW1zKHRocmVhZElELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvY2hhdGtpdC90aHJlYWRzLyR7dGhyZWFkSUR9L2l0ZW1zYCwgKENvbnZlcnNhdGlvbkN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zLCBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2NoYXRraXRfYmV0YT12MScgfSwgb3B0aW9ucz8uaGVhZGVyc10pIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRocmVhZHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbnZlcnNhdGlvbkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJwYXRoIiwiVGhyZWFkcyIsInJldHJpZXZlIiwidGhyZWFkSUQiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCIsImhlYWRlcnMiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIiwibGlzdEl0ZW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/chatkit/threads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/realtime.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/realtime.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Realtime: () => (/* binding */ Realtime)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sessions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/sessions.mjs\");\n/* harmony import */ var _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transcription-sessions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n/**\n * @deprecated Realtime has now launched and is generally available. The old beta API is now deprecated.\n */ class Realtime extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.sessions = new _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions(this._client);\n        this.transcriptionSessions = new _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = _sessions_mjs__WEBPACK_IMPORTED_MODULE_1__.Sessions;\nRealtime.TranscriptionSessions = _transcription_sessions_mjs__WEBPACK_IMPORTED_MODULE_2__.TranscriptionSessions; //# sourceMappingURL=realtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvcmVhbHRpbWUubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDWDtBQUNIO0FBQzhCO0FBQ0g7QUFDdEU7O0NBRUMsR0FDTSxNQUFNSyxpQkFBaUJMLDJEQUFXQTtJQUNyQ00sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFFBQVEsR0FBRyxJQUFJUCxtREFBb0IsQ0FBQyxJQUFJLENBQUNRLE9BQU87UUFDckQsSUFBSSxDQUFDQyxxQkFBcUIsR0FBRyxJQUFJUCw4RUFBOEMsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDaEc7QUFDSjtBQUNBSixTQUFTSCxRQUFRLEdBQUdBLG1EQUFRQTtBQUM1QkcsU0FBU0QscUJBQXFCLEdBQUdBLDhFQUFxQkEsRUFDdEQscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvcmVhbHRpbWUubWpzPzk0ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBTZXNzaW9uc0FQSSBmcm9tIFwiLi9zZXNzaW9ucy5tanNcIjtcbmltcG9ydCB7IFNlc3Npb25zLCB9IGZyb20gXCIuL3Nlc3Npb25zLm1qc1wiO1xuaW1wb3J0ICogYXMgVHJhbnNjcmlwdGlvblNlc3Npb25zQVBJIGZyb20gXCIuL3RyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzXCI7XG5pbXBvcnQgeyBUcmFuc2NyaXB0aW9uU2Vzc2lvbnMsIH0gZnJvbSBcIi4vdHJhbnNjcmlwdGlvbi1zZXNzaW9ucy5tanNcIjtcbi8qKlxuICogQGRlcHJlY2F0ZWQgUmVhbHRpbWUgaGFzIG5vdyBsYXVuY2hlZCBhbmQgaXMgZ2VuZXJhbGx5IGF2YWlsYWJsZS4gVGhlIG9sZCBiZXRhIEFQSSBpcyBub3cgZGVwcmVjYXRlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIFJlYWx0aW1lIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnNlc3Npb25zID0gbmV3IFNlc3Npb25zQVBJLlNlc3Npb25zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMudHJhbnNjcmlwdGlvblNlc3Npb25zID0gbmV3IFRyYW5zY3JpcHRpb25TZXNzaW9uc0FQSS5UcmFuc2NyaXB0aW9uU2Vzc2lvbnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5SZWFsdGltZS5TZXNzaW9ucyA9IFNlc3Npb25zO1xuUmVhbHRpbWUuVHJhbnNjcmlwdGlvblNlc3Npb25zID0gVHJhbnNjcmlwdGlvblNlc3Npb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhbHRpbWUubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlNlc3Npb25zQVBJIiwiU2Vzc2lvbnMiLCJUcmFuc2NyaXB0aW9uU2Vzc2lvbnNBUEkiLCJUcmFuc2NyaXB0aW9uU2Vzc2lvbnMiLCJSZWFsdGltZSIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwic2Vzc2lvbnMiLCJfY2xpZW50IiwidHJhbnNjcmlwdGlvblNlc3Npb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/realtime.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/sessions.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/sessions.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sessions: () => (/* binding */ Sessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Sessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const session =\n     *   await client.beta.realtime.sessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvc2Vzc2lvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ3RELE1BQU1FLGlCQUFpQkYsMkRBQVdBO0lBQ3JDOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RHLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxzQkFBc0I7WUFDM0NIO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTUCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR0ksU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS9yZWFsdGltZS9zZXNzaW9ucy5tanM/ZjFkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIFNlc3Npb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhbiBlcGhlbWVyYWwgQVBJIHRva2VuIGZvciB1c2UgaW4gY2xpZW50LXNpZGUgYXBwbGljYXRpb25zIHdpdGggdGhlXG4gICAgICogUmVhbHRpbWUgQVBJLiBDYW4gYmUgY29uZmlndXJlZCB3aXRoIHRoZSBzYW1lIHNlc3Npb24gcGFyYW1ldGVycyBhcyB0aGVcbiAgICAgKiBgc2Vzc2lvbi51cGRhdGVgIGNsaWVudCBldmVudC5cbiAgICAgKlxuICAgICAqIEl0IHJlc3BvbmRzIHdpdGggYSBzZXNzaW9uIG9iamVjdCwgcGx1cyBhIGBjbGllbnRfc2VjcmV0YCBrZXkgd2hpY2ggY29udGFpbnMgYVxuICAgICAqIHVzYWJsZSBlcGhlbWVyYWwgQVBJIHRva2VuIHRoYXQgY2FuIGJlIHVzZWQgdG8gYXV0aGVudGljYXRlIGJyb3dzZXIgY2xpZW50cyBmb3JcbiAgICAgKiB0aGUgUmVhbHRpbWUgQVBJLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHNlc3Npb24gPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmJldGEucmVhbHRpbWUuc2Vzc2lvbnMuY3JlYXRlKCk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVhbHRpbWUvc2Vzc2lvbnMnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiYnVpbGRIZWFkZXJzIiwiU2Vzc2lvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/sessions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TranscriptionSessions: () => (/* binding */ TranscriptionSessions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass TranscriptionSessions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     *\n     * @example\n     * ```ts\n     * const transcriptionSession =\n     *   await client.beta.realtime.transcriptionSessions.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/transcription_sessions\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=transcription-sessions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvcmVhbHRpbWUvdHJhbnNjcmlwdGlvbi1zZXNzaW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0k7QUFDdEQsTUFBTUUsOEJBQThCRiwyREFBV0E7SUFDbEQ7Ozs7Ozs7Ozs7Ozs7O0tBY0MsR0FDREcsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLG9DQUFvQztZQUN6REg7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNQLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHSSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7QUFDSixFQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9iZXRhL3JlYWx0aW1lL3RyYW5zY3JpcHRpb24tc2Vzc2lvbnMubWpzPzAzNjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmV4cG9ydCBjbGFzcyBUcmFuc2NyaXB0aW9uU2Vzc2lvbnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGFuIGVwaGVtZXJhbCBBUEkgdG9rZW4gZm9yIHVzZSBpbiBjbGllbnQtc2lkZSBhcHBsaWNhdGlvbnMgd2l0aCB0aGVcbiAgICAgKiBSZWFsdGltZSBBUEkgc3BlY2lmaWNhbGx5IGZvciByZWFsdGltZSB0cmFuc2NyaXB0aW9ucy4gQ2FuIGJlIGNvbmZpZ3VyZWQgd2l0aFxuICAgICAqIHRoZSBzYW1lIHNlc3Npb24gcGFyYW1ldGVycyBhcyB0aGUgYHRyYW5zY3JpcHRpb25fc2Vzc2lvbi51cGRhdGVgIGNsaWVudCBldmVudC5cbiAgICAgKlxuICAgICAqIEl0IHJlc3BvbmRzIHdpdGggYSBzZXNzaW9uIG9iamVjdCwgcGx1cyBhIGBjbGllbnRfc2VjcmV0YCBrZXkgd2hpY2ggY29udGFpbnMgYVxuICAgICAqIHVzYWJsZSBlcGhlbWVyYWwgQVBJIHRva2VuIHRoYXQgY2FuIGJlIHVzZWQgdG8gYXV0aGVudGljYXRlIGJyb3dzZXIgY2xpZW50cyBmb3JcbiAgICAgKiB0aGUgUmVhbHRpbWUgQVBJLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHRyYW5zY3JpcHRpb25TZXNzaW9uID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5iZXRhLnJlYWx0aW1lLnRyYW5zY3JpcHRpb25TZXNzaW9ucy5jcmVhdGUoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9yZWFsdGltZS90cmFuc2NyaXB0aW9uX3Nlc3Npb25zJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHJhbnNjcmlwdGlvbi1zZXNzaW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiYnVpbGRIZWFkZXJzIiwiVHJhbnNjcmlwdGlvblNlc3Npb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/realtime/transcription-sessions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/messages.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/messages.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieve a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(messageID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of messages for a given thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${threadID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Deletes a message.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(messageID, params, options) {\n        const { thread_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/messages/${messageID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9tZXNzYWdlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNHO0FBQ0w7QUFDeEQ7O0NBRUMsR0FDTSxNQUFNSSxpQkFBaUJKLDJEQUFXQTtJQUNyQzs7OztLQUlDLEdBQ0RLLE9BQU9DLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDUCwwREFBSyxDQUFDLFNBQVMsRUFBRUcsU0FBUyxTQUFTLENBQUMsRUFBRTtZQUMzREM7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RDLFNBQVNDLFNBQVMsRUFBRUMsTUFBTSxFQUFFTixPQUFPLEVBQUU7UUFDakMsTUFBTSxFQUFFTyxTQUFTLEVBQUUsR0FBR0Q7UUFDdEIsT0FBTyxJQUFJLENBQUNMLE9BQU8sQ0FBQ08sR0FBRyxDQUFDYiwwREFBSyxDQUFDLFNBQVMsRUFBRVksVUFBVSxVQUFVLEVBQUVGLFVBQVUsQ0FBQyxFQUFFO1lBQ3hFLEdBQUdMLE9BQU87WUFDVkcsU0FBU1QsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7O0tBSUMsR0FDRE0sT0FBT0osU0FBUyxFQUFFQyxNQUFNLEVBQUVOLE9BQU8sRUFBRTtRQUMvQixNQUFNLEVBQUVPLFNBQVMsRUFBRSxHQUFHUixNQUFNLEdBQUdPO1FBQy9CLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxTQUFTLEVBQUVZLFVBQVUsVUFBVSxFQUFFRixVQUFVLENBQUMsRUFBRTtZQUN6RU47WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHTSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RPLEtBQUtaLFFBQVEsRUFBRWEsUUFBUSxDQUFDLENBQUMsRUFBRVgsT0FBTyxFQUFFO1FBQ2hDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNXLFVBQVUsQ0FBQ2pCLDBEQUFLLENBQUMsU0FBUyxFQUFFRyxTQUFTLFNBQVMsQ0FBQyxFQUFHTCw0REFBVUEsRUFBRztZQUMvRWtCO1lBQ0EsR0FBR1gsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEVSxPQUFPUixTQUFTLEVBQUVDLE1BQU0sRUFBRU4sT0FBTyxFQUFFO1FBQy9CLE1BQU0sRUFBRU8sU0FBUyxFQUFFLEdBQUdEO1FBQ3RCLE9BQU8sSUFBSSxDQUFDTCxPQUFPLENBQUNZLE1BQU0sQ0FBQ2xCLDBEQUFLLENBQUMsU0FBUyxFQUFFWSxVQUFVLFVBQVUsRUFBRUYsVUFBVSxDQUFDLEVBQUU7WUFDM0UsR0FBR0wsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0FBQ0osRUFDQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS90aHJlYWRzL21lc3NhZ2VzLm1qcz82NWM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbi8qKlxuICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2VzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG1lc3NhZ2UuXG4gICAgICpcbiAgICAgKiBAZGVwcmVjYXRlZCBUaGUgQXNzaXN0YW50cyBBUEkgaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiB0aGUgUmVzcG9uc2VzIEFQSVxuICAgICAqL1xuICAgIGNyZWF0ZSh0aHJlYWRJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3RocmVhZHMvJHt0aHJlYWRJRH0vbWVzc2FnZXNgLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgYSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICByZXRyaWV2ZShtZXNzYWdlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHRocmVhZF9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vbWVzc2FnZXMvJHttZXNzYWdlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTW9kaWZpZXMgYSBtZXNzYWdlLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICB1cGRhdGUobWVzc2FnZUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQsIC4uLmJvZHkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC90aHJlYWRzLyR7dGhyZWFkX2lkfS9tZXNzYWdlcy8ke21lc3NhZ2VJRH1gLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhIGxpc3Qgb2YgbWVzc2FnZXMgZm9yIGEgZ2l2ZW4gdGhyZWFkLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICBsaXN0KHRocmVhZElELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfS9tZXNzYWdlc2AsIChDdXJzb3JQYWdlKSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGVzIGEgbWVzc2FnZS5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgZGVsZXRlKG1lc3NhZ2VJRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgdGhyZWFkX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC90aHJlYWRzLyR7dGhyZWFkX2lkfS9tZXNzYWdlcy8ke21lc3NhZ2VJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2VzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIk1lc3NhZ2VzIiwiY3JlYXRlIiwidGhyZWFkSUQiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwiaGVhZGVycyIsInJldHJpZXZlIiwibWVzc2FnZUlEIiwicGFyYW1zIiwidGhyZWFkX2lkIiwiZ2V0IiwidXBkYXRlIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/messages.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/runs.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/runs.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _steps_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./steps.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/steps.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../lib/AssistantStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.steps = new _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps(this._client);\n    }\n    create(threadID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, {\n            query: {\n                include\n            },\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * Retrieves a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of runs belonging to a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(threadID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${threadID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ cancel(runID, params, options) {\n        const { thread_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(run.id, {\n            thread_id: threadId\n        }, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */ createAndStream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async poll(runId, params, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: run, response } = await this.retrieve(runId, params, {\n                ...options,\n                headers: {\n                    ...options?.headers,\n                    ...headers\n                }\n            }).withResponse();\n            switch(run.status){\n                //If we are in any sort of intermediate state we poll\n                case \"queued\":\n                case \"in_progress\":\n                case \"cancelling\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_5__.sleep)(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case \"requires_action\":\n                case \"incomplete\":\n                case \"cancelled\":\n                case \"completed\":\n                case \"failed\":\n                case \"expired\":\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */ stream(threadId, body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(runID, params, options) {\n        const { thread_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/threads/${thread_id}/runs/${runID}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: params.stream ?? false\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async submitToolOutputsAndPoll(runId, params, options) {\n        const run = await this.submitToolOutputs(runId, params, options);\n        return await this.poll(run.id, params, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ submitToolOutputsStream(runId, params, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createToolAssistantStream(runId, this._client.beta.threads.runs, params, options);\n    }\n}\nRuns.Steps = _steps_mjs__WEBPACK_IMPORTED_MODULE_1__.Steps; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/runs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/steps.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/steps.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Steps: () => (/* binding */ Steps)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Steps extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a run step.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(stepID, params, options) {\n        const { thread_id, run_id, ...query } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${run_id}/steps/${stepID}`, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of run steps belonging to a run.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ list(runID, params, options) {\n        const { thread_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/threads/${thread_id}/runs/${runID}/steps`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=steps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9ydW5zL3N0ZXBzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUMxQjtBQUNDO0FBQ0c7QUFDTDtBQUMzRDs7Q0FFQyxHQUNNLE1BQU1JLGNBQWNKLDJEQUFXQTtJQUNsQzs7OztLQUlDLEdBQ0RLLFNBQVNDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsTUFBTSxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxPQUFPLEdBQUdKO1FBQ3hDLE9BQU8sSUFBSSxDQUFDSyxPQUFPLENBQUNDLEdBQUcsQ0FBQ1YsMERBQUssQ0FBQyxTQUFTLEVBQUVNLFVBQVUsTUFBTSxFQUFFQyxPQUFPLE9BQU8sRUFBRUosT0FBTyxDQUFDLEVBQUU7WUFDakZLO1lBQ0EsR0FBR0gsT0FBTztZQUNWTSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR00sU0FBU007YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEQyxLQUFLQyxLQUFLLEVBQUVULE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLE1BQU0sRUFBRUMsU0FBUyxFQUFFLEdBQUdFLE9BQU8sR0FBR0o7UUFDaEMsT0FBTyxJQUFJLENBQUNLLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDZCwwREFBSyxDQUFDLFNBQVMsRUFBRU0sVUFBVSxNQUFNLEVBQUVPLE1BQU0sTUFBTSxDQUFDLEVBQUdmLDREQUFVQSxFQUFHO1lBQzNGVTtZQUNBLEdBQUdILE9BQU87WUFDVk0sU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdNLFNBQVNNO2FBQVE7UUFDaEY7SUFDSjtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy9ydW5zL3N0ZXBzLm1qcz8wMjE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbi8qKlxuICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAqL1xuZXhwb3J0IGNsYXNzIFN0ZXBzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHJ1biBzdGVwLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICByZXRyaWV2ZShzdGVwSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHRocmVhZF9pZCwgcnVuX2lkLCAuLi5xdWVyeSB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vcnVucy8ke3J1bl9pZH0vc3RlcHMvJHtzdGVwSUR9YCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBydW4gc3RlcHMgYmVsb25naW5nIHRvIGEgcnVuLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICBsaXN0KHJ1bklELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB0aHJlYWRfaWQsIC4uLnF1ZXJ5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZF9pZH0vcnVucy8ke3J1bklEfS9zdGVwc2AsIChDdXJzb3JQYWdlKSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0ZXBzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIlN0ZXBzIiwicmV0cmlldmUiLCJzdGVwSUQiLCJwYXJhbXMiLCJvcHRpb25zIiwidGhyZWFkX2lkIiwicnVuX2lkIiwicXVlcnkiLCJfY2xpZW50IiwiZ2V0IiwiaGVhZGVycyIsImxpc3QiLCJydW5JRCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/steps.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/threads.mjs":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/threads.mjs ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Threads: () => (/* binding */ Threads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/messages.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/runs/runs.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/AssistantStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/AssistantStream.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n/**\n * @deprecated The Assistants API is deprecated in favor of the Responses API\n */ class Threads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs(this._client);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    /**\n     * Create a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ create(body = {}, options) {\n        return this._client.post(\"/threads\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ retrieve(threadID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ update(threadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a thread.\n     *\n     * @deprecated The Assistants API is deprecated in favor of the Responses API\n     */ delete(threadID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/threads/${threadID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post(\"/threads/runs\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ]),\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */ async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.id, {\n            thread_id: run.thread_id\n        }, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */ createAndRunStream(body, options) {\n        return _lib_AssistantStream_mjs__WEBPACK_IMPORTED_MODULE_4__.AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_2__.Runs;\nThreads.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=threads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2JldGEvdGhyZWFkcy90aHJlYWRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ1g7QUFDSDtBQUNBO0FBQ0g7QUFDcUI7QUFDTTtBQUNYO0FBQ3hEOztDQUVDLEdBQ00sTUFBTVEsZ0JBQWdCUiwyREFBV0E7SUFDcENTLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSVIsZ0RBQVksQ0FBQyxJQUFJLENBQUNTLE9BQU87UUFDekMsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSVosbURBQW9CLENBQUMsSUFBSSxDQUFDVyxPQUFPO0lBQ3pEO0lBQ0E7Ozs7S0FJQyxHQUNERSxPQUFPQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDdkIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDLFlBQVk7WUFDakNGO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNEQyxTQUFTQyxRQUFRLEVBQUVKLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDUyxHQUFHLENBQUNkLDBEQUFLLENBQUMsU0FBUyxFQUFFYSxTQUFTLENBQUMsRUFBRTtZQUNqRCxHQUFHSixPQUFPO1lBQ1ZFLFNBQVNiLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHVyxTQUFTRTthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0RJLE9BQU9GLFFBQVEsRUFBRUwsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLFNBQVMsRUFBRWEsU0FBUyxDQUFDLEVBQUU7WUFDbERMO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7Ozs7S0FJQyxHQUNESyxPQUFPSCxRQUFRLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDVyxNQUFNLENBQUNoQiwwREFBSyxDQUFDLFNBQVMsRUFBRWEsU0FBUyxDQUFDLEVBQUU7WUFDcEQsR0FBR0osT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0FNLGFBQWFULElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3hCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQyxpQkFBaUI7WUFDdENGO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTYixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1csU0FBU0U7YUFBUTtZQUM1RU8sUUFBUVYsS0FBS1UsTUFBTSxJQUFJO1FBQzNCO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0QsTUFBTUMsaUJBQWlCWCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQyxNQUFNVyxNQUFNLE1BQU0sSUFBSSxDQUFDSCxZQUFZLENBQUNULE1BQU1DO1FBQzFDLE9BQU8sTUFBTSxJQUFJLENBQUNMLElBQUksQ0FBQ2lCLElBQUksQ0FBQ0QsSUFBSUUsRUFBRSxFQUFFO1lBQUVDLFdBQVdILElBQUlHLFNBQVM7UUFBQyxHQUFHZDtJQUN0RTtJQUNBOztLQUVDLEdBQ0RlLG1CQUFtQmhCLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzlCLE9BQU9WLHFFQUFlQSxDQUFDMEIsMkJBQTJCLENBQUNqQixNQUFNLElBQUksQ0FBQ0gsT0FBTyxDQUFDcUIsSUFBSSxDQUFDQyxPQUFPLEVBQUVsQjtJQUN4RjtBQUNKO0FBQ0FSLFFBQVFKLElBQUksR0FBR0EsZ0RBQUlBO0FBQ25CSSxRQUFRTixRQUFRLEdBQUdBLG1EQUFRQSxFQUMzQixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvYmV0YS90aHJlYWRzL3RocmVhZHMubWpzPzcyYTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBNZXNzYWdlc0FQSSBmcm9tIFwiLi9tZXNzYWdlcy5tanNcIjtcbmltcG9ydCB7IE1lc3NhZ2VzLCB9IGZyb20gXCIuL21lc3NhZ2VzLm1qc1wiO1xuaW1wb3J0ICogYXMgUnVuc0FQSSBmcm9tIFwiLi9ydW5zL3J1bnMubWpzXCI7XG5pbXBvcnQgeyBSdW5zLCB9IGZyb20gXCIuL3J1bnMvcnVucy5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgQXNzaXN0YW50U3RyZWFtIH0gZnJvbSBcIi4uLy4uLy4uL2xpYi9Bc3Npc3RhbnRTdHJlYW0ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gKi9cbmV4cG9ydCBjbGFzcyBUaHJlYWRzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLnJ1bnMgPSBuZXcgUnVuc0FQSS5SdW5zKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMubWVzc2FnZXMgPSBuZXcgTWVzc2FnZXNBUEkuTWVzc2FnZXModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdGhyZWFkLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3RocmVhZHMnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGEgdGhyZWFkLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICByZXRyaWV2ZSh0aHJlYWRJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvdGhyZWFkcy8ke3RocmVhZElEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGEgdGhyZWFkLlxuICAgICAqXG4gICAgICogQGRlcHJlY2F0ZWQgVGhlIEFzc2lzdGFudHMgQVBJIGlzIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgdGhlIFJlc3BvbnNlcyBBUElcbiAgICAgKi9cbiAgICB1cGRhdGUodGhyZWFkSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC90aHJlYWRzLyR7dGhyZWFkSUR9YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIHRocmVhZC5cbiAgICAgKlxuICAgICAqIEBkZXByZWNhdGVkIFRoZSBBc3Npc3RhbnRzIEFQSSBpcyBkZXByZWNhdGVkIGluIGZhdm9yIG9mIHRoZSBSZXNwb25zZXMgQVBJXG4gICAgICovXG4gICAgZGVsZXRlKHRocmVhZElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC90aHJlYWRzLyR7dGhyZWFkSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY3JlYXRlQW5kUnVuKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvdGhyZWFkcy9ydW5zJywge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgICAgIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBBIGhlbHBlciB0byBjcmVhdGUgYSB0aHJlYWQsIHN0YXJ0IGEgcnVuIGFuZCB0aGVuIHBvbGwgZm9yIGEgdGVybWluYWwgc3RhdGUuXG4gICAgICogTW9yZSBpbmZvcm1hdGlvbiBvbiBSdW4gbGlmZWN5Y2xlcyBjYW4gYmUgZm91bmQgaGVyZTpcbiAgICAgKiBodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hc3Npc3RhbnRzL2hvdy1pdC13b3Jrcy9ydW5zLWFuZC1ydW4tc3RlcHNcbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVBbmRSdW5Qb2xsKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcnVuID0gYXdhaXQgdGhpcy5jcmVhdGVBbmRSdW4oYm9keSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLnJ1bnMucG9sbChydW4uaWQsIHsgdGhyZWFkX2lkOiBydW4udGhyZWFkX2lkIH0sIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSB0aHJlYWQgYW5kIHN0cmVhbSB0aGUgcnVuIGJhY2tcbiAgICAgKi9cbiAgICBjcmVhdGVBbmRSdW5TdHJlYW0oYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gQXNzaXN0YW50U3RyZWFtLmNyZWF0ZVRocmVhZEFzc2lzdGFudFN0cmVhbShib2R5LCB0aGlzLl9jbGllbnQuYmV0YS50aHJlYWRzLCBvcHRpb25zKTtcbiAgICB9XG59XG5UaHJlYWRzLlJ1bnMgPSBSdW5zO1xuVGhyZWFkcy5NZXNzYWdlcyA9IE1lc3NhZ2VzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGhyZWFkcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiTWVzc2FnZXNBUEkiLCJNZXNzYWdlcyIsIlJ1bnNBUEkiLCJSdW5zIiwiYnVpbGRIZWFkZXJzIiwiQXNzaXN0YW50U3RyZWFtIiwicGF0aCIsIlRocmVhZHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInJ1bnMiLCJfY2xpZW50IiwibWVzc2FnZXMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJoZWFkZXJzIiwicmV0cmlldmUiLCJ0aHJlYWRJRCIsImdldCIsInVwZGF0ZSIsImRlbGV0ZSIsImNyZWF0ZUFuZFJ1biIsInN0cmVhbSIsImNyZWF0ZUFuZFJ1blBvbGwiLCJydW4iLCJwb2xsIiwiaWQiLCJ0aHJlYWRfaWQiLCJjcmVhdGVBbmRSdW5TdHJlYW0iLCJjcmVhdGVUaHJlYWRBc3Npc3RhbnRTdHJlYW0iLCJiZXRhIiwidGhyZWFkcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/threads/threads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/chat.mjs":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/chat.mjs ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* binding */ Chat)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/completions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/completions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Chat extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.completions = new _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions(this._client);\n    }\n}\nChat.Completions = _completions_completions_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions; //# sourceMappingURL=chat.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY2hhdC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ1U7QUFDSDtBQUN0RCxNQUFNRyxhQUFhSCwyREFBV0E7SUFDakNJLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSUwscUVBQTBCLENBQUMsSUFBSSxDQUFDTSxPQUFPO0lBQ2xFO0FBQ0o7QUFDQUosS0FBS0QsV0FBVyxHQUFHQSxxRUFBV0EsRUFDOUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY2hhdC5tanM/MTVhOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIENvbXBsZXRpb25zQVBJIGZyb20gXCIuL2NvbXBsZXRpb25zL2NvbXBsZXRpb25zLm1qc1wiO1xuaW1wb3J0IHsgQ29tcGxldGlvbnMsIH0gZnJvbSBcIi4vY29tcGxldGlvbnMvY29tcGxldGlvbnMubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hhdCBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jb21wbGV0aW9ucyA9IG5ldyBDb21wbGV0aW9uc0FQSS5Db21wbGV0aW9ucyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cbkNoYXQuQ29tcGxldGlvbnMgPSBDb21wbGV0aW9ucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXQubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbXBsZXRpb25zQVBJIiwiQ29tcGxldGlvbnMiLCJDaGF0IiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJjb21wbGV0aW9ucyIsIl9jbGllbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/chat.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/completions.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/completions.mjs ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* reexport safe */ _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner),\n/* harmony export */   ChatCompletionStream: () => (/* reexport safe */ _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream),\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* reexport safe */ _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner),\n/* harmony export */   Completions: () => (/* binding */ Completions),\n/* harmony export */   ParsingToolFunction: () => (/* reexport safe */ _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__.ParsingToolFunction)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/messages.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n/* harmony import */ var _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../lib/ChatCompletionRunner.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../lib/ChatCompletionStreamingRunner.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStreamingRunner.mjs\");\n/* harmony import */ var _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../lib/ChatCompletionStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ChatCompletionStream.mjs\");\n/* harmony import */ var _lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../lib/parser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/parser.mjs\");\n/* harmony import */ var _lib_RunnableFunction_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../lib/RunnableFunction.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/RunnableFunction.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.messages = new _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/chat/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion =\n     *   await client.chat.completions.retrieve('completion_id');\n     * ```\n     */ retrieve(completionID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     *\n     * @example\n     * ```ts\n     * const chatCompletion = await client.chat.completions.update(\n     *   'completion_id',\n     *   { metadata: { foo: 'string' } },\n     * );\n     * ```\n     */ update(completionID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List stored Chat Completions. Only Chat Completions that have been stored with\n     * the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletion of client.chat.completions.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/chat/completions\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     *\n     * @example\n     * ```ts\n     * const chatCompletionDeleted =\n     *   await client.chat.completions.delete('completion_id');\n     * ```\n     */ delete(completionID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/chat/completions/${completionID}`, options);\n    }\n    parse(body, options) {\n        (0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.validateInputTools)(body.tools);\n        return this._client.chat.completions.create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                \"X-Stainless-Helper-Method\": \"chat.completions.parse\"\n            }\n        })._thenUnwrap((completion)=>(0,_lib_parser_mjs__WEBPACK_IMPORTED_MODULE_7__.parseChatCompletion)(completion, body));\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return _lib_ChatCompletionStreamingRunner_mjs__WEBPACK_IMPORTED_MODULE_5__.ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return _lib_ChatCompletionRunner_mjs__WEBPACK_IMPORTED_MODULE_4__.ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */ stream(body, options) {\n        return _lib_ChatCompletionStream_mjs__WEBPACK_IMPORTED_MODULE_6__.ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n\n\n\n\nCompletions.Messages = _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages; //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/completions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/index.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/index.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChatCompletionRunner: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionRunner),\n/* harmony export */   ChatCompletionStream: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStream),\n/* harmony export */   ChatCompletionStreamingRunner: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ChatCompletionStreamingRunner),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.Completions),\n/* harmony export */   Messages: () => (/* reexport safe */ _messages_mjs__WEBPACK_IMPORTED_MODULE_1__.Messages),\n/* harmony export */   ParsingToolFunction: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_0__.ParsingToolFunction)\n/* harmony export */ });\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./completions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/completions.mjs\");\n/* harmony import */ var _messages_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./messages.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/messages.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JDO0FBQ2Y7QUFDUSxDQUMxQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY2hhdC9jb21wbGV0aW9ucy9pbmRleC5tanM/MjUyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuZXhwb3J0IHsgQ29tcGxldGlvbnMsIH0gZnJvbSBcIi4vY29tcGxldGlvbnMubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21wbGV0aW9ucy5tanNcIjtcbmV4cG9ydCB7IE1lc3NhZ2VzIH0gZnJvbSBcIi4vbWVzc2FnZXMubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIkNvbXBsZXRpb25zIiwiTWVzc2FnZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/messages.mjs":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/messages.mjs ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Messages: () => (/* binding */ Messages)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Messages extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get the messages in a stored chat completion. Only Chat Completions that have\n     * been created with the `store` parameter set to `true` will be returned.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n     *   'completion_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(completionID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/chat/completions/${completionID}/messages`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=messages.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvbWVzc2FnZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNGO0FBQ2pELE1BQU1HLGlCQUFpQkgsMkRBQVdBO0lBQ3JDOzs7Ozs7Ozs7Ozs7O0tBYUMsR0FDREksS0FBS0MsWUFBWSxFQUFFQyxRQUFRLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDcEMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDUCwwREFBSyxDQUFDLGtCQUFrQixFQUFFRyxhQUFhLFNBQVMsQ0FBQyxFQUFHSiw0REFBVUEsRUFBRztZQUFFSztZQUFPLEdBQUdDLE9BQU87UUFBQztJQUN4SDtBQUNKLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvY29tcGxldGlvbnMvbWVzc2FnZXMubWpzPzdkNDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBNZXNzYWdlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIG1lc3NhZ2VzIGluIGEgc3RvcmVkIGNoYXQgY29tcGxldGlvbi4gT25seSBDaGF0IENvbXBsZXRpb25zIHRoYXQgaGF2ZVxuICAgICAqIGJlZW4gY3JlYXRlZCB3aXRoIHRoZSBgc3RvcmVgIHBhcmFtZXRlciBzZXQgdG8gYHRydWVgIHdpbGwgYmUgcmV0dXJuZWQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgY2hhdENvbXBsZXRpb25TdG9yZU1lc3NhZ2Ugb2YgY2xpZW50LmNoYXQuY29tcGxldGlvbnMubWVzc2FnZXMubGlzdChcbiAgICAgKiAgICdjb21wbGV0aW9uX2lkJyxcbiAgICAgKiApKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChjb21wbGV0aW9uSUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9jaGF0L2NvbXBsZXRpb25zLyR7Y29tcGxldGlvbklEfS9tZXNzYWdlc2AsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJNZXNzYWdlcyIsImxpc3QiLCJjb21wbGV0aW9uSUQiLCJxdWVyeSIsIm9wdGlvbnMiLCJfY2xpZW50IiwiZ2V0QVBJTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/messages.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/index.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/index.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* reexport safe */ _chat_mjs__WEBPACK_IMPORTED_MODULE_0__.Chat),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__.Completions)\n/* harmony export */ });\n/* harmony import */ var _chat_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/chat.mjs\");\n/* harmony import */ var _completions_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./completions/index.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/completions/index.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDcEQ7QUFDcUIsQ0FDdkQsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NoYXQvaW5kZXgubWpzP2ZkZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCB7IENoYXQgfSBmcm9tIFwiLi9jaGF0Lm1qc1wiO1xuZXhwb3J0IHsgQ29tcGxldGlvbnMsIH0gZnJvbSBcIi4vY29tcGxldGlvbnMvaW5kZXgubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIkNoYXQiLCJDb21wbGV0aW9ucyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/completions.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/completions.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Completions: () => (/* binding */ Completions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Completions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    create(body, options) {\n        return this._client.post(\"/completions\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n} //# sourceMappingURL=completions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbXBsZXRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUM1QyxNQUFNQyxvQkFBb0JELDJEQUFXQTtJQUN4Q0UsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGdCQUFnQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87WUFBRUcsUUFBUUosS0FBS0ksTUFBTSxJQUFJO1FBQU07SUFDOUY7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb21wbGV0aW9ucy5tanM/NjZkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmV4cG9ydCBjbGFzcyBDb21wbGV0aW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9jb21wbGV0aW9ucycsIHsgYm9keSwgLi4ub3B0aW9ucywgc3RyZWFtOiBib2R5LnN0cmVhbSA/PyBmYWxzZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wbGV0aW9ucy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ29tcGxldGlvbnMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Iiwic3RyZWFtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/completions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/containers.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/containers.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Containers: () => (/* binding */ Containers)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./files/files.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass Containers extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files(this._client);\n    }\n    /**\n     * Create Container\n     */ create(body, options) {\n        return this._client.post(\"/containers\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Retrieve Container\n     */ retrieve(containerID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, options);\n    }\n    /**\n     * List Containers\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/containers\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container\n     */ delete(containerID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/containers/${containerID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nContainers.Files = _files_files_mjs__WEBPACK_IMPORTED_MODULE_1__.Files; //# sourceMappingURL=containers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvY29udGFpbmVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ1I7QUFDSDtBQUNZO0FBQ0c7QUFDTDtBQUM5QyxNQUFNTSxtQkFBbUJOLDJEQUFXQTtJQUN2Q08sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJUixtREFBYyxDQUFDLElBQUksQ0FBQ1MsT0FBTztJQUNoRDtJQUNBOztLQUVDLEdBQ0RDLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQyxlQUFlO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQy9EO0lBQ0E7O0tBRUMsR0FDREUsU0FBU0MsV0FBVyxFQUFFSCxPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ08sR0FBRyxDQUFDWiwwREFBSyxDQUFDLFlBQVksRUFBRVcsWUFBWSxDQUFDLEVBQUVIO0lBQy9EO0lBQ0E7O0tBRUMsR0FDREssS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRU4sT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNVLFVBQVUsQ0FBQyxlQUFnQmpCLDREQUFVQSxFQUFHO1lBQUVnQjtZQUFPLEdBQUdOLE9BQU87UUFBQztJQUNwRjtJQUNBOztLQUVDLEdBQ0RRLE9BQU9MLFdBQVcsRUFBRUgsT0FBTyxFQUFFO1FBQ3pCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNXLE1BQU0sQ0FBQ2hCLDBEQUFLLENBQUMsWUFBWSxFQUFFVyxZQUFZLENBQUMsRUFBRTtZQUMxRCxHQUFHSCxPQUFPO1lBQ1ZTLFNBQVNsQixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRW1CLFFBQVE7Z0JBQU07Z0JBQUdWLFNBQVNTO2FBQVE7UUFDL0Q7SUFDSjtBQUNKO0FBQ0FoQixXQUFXSixLQUFLLEdBQUdBLG1EQUFLQSxFQUN4Qix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udGFpbmVycy9jb250YWluZXJzLm1qcz84YWI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgRmlsZXNBUEkgZnJvbSBcIi4vZmlsZXMvZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBGaWxlcywgfSBmcm9tIFwiLi9maWxlcy9maWxlcy5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgQ29udGFpbmVycyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5maWxlcyA9IG5ldyBGaWxlc0FQSS5GaWxlcyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgQ29udGFpbmVyXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvY29udGFpbmVycycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgQ29udGFpbmVyXG4gICAgICovXG4gICAgcmV0cmlldmUoY29udGFpbmVySUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJJRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCBDb250YWluZXJzXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2NvbnRhaW5lcnMnLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBDb250YWluZXJcbiAgICAgKi9cbiAgICBkZWxldGUoY29udGFpbmVySUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJyovKicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG5Db250YWluZXJzLkZpbGVzID0gRmlsZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250YWluZXJzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJGaWxlc0FQSSIsIkZpbGVzIiwiQ3Vyc29yUGFnZSIsImJ1aWxkSGVhZGVycyIsInBhdGgiLCJDb250YWluZXJzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJmaWxlcyIsIl9jbGllbnQiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJyZXRyaWV2ZSIsImNvbnRhaW5lcklEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImhlYWRlcnMiLCJBY2NlcHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/containers.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/content.mjs":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/content.mjs ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Content: () => (/* binding */ Content)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Content extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieve Container File Content\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/containers/${container_id}/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n} //# sourceMappingURL=content.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvZmlsZXMvY29udGVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUM3QjtBQUNJO0FBQ0w7QUFDakQsTUFBTUcsZ0JBQWdCSCwyREFBV0E7SUFDcEM7O0tBRUMsR0FDREksU0FBU0MsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRTtRQUM5QixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHRjtRQUN6QixPQUFPLElBQUksQ0FBQ0csT0FBTyxDQUFDQyxHQUFHLENBQUNSLDBEQUFLLENBQUMsWUFBWSxFQUFFTSxhQUFhLE9BQU8sRUFBRUgsT0FBTyxRQUFRLENBQUMsRUFBRTtZQUNoRixHQUFHRSxPQUFPO1lBQ1ZJLFNBQVNWLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFVyxRQUFRO2dCQUFxQjtnQkFBR0wsU0FBU0k7YUFBUTtZQUMxRUUsa0JBQWtCO1FBQ3RCO0lBQ0o7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb250YWluZXJzL2ZpbGVzL2NvbnRlbnQubWpzPzBlMzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBDb250ZW50IGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIENvbnRhaW5lciBGaWxlIENvbnRlbnRcbiAgICAgKi9cbiAgICByZXRyaWV2ZShmaWxlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGNvbnRhaW5lcl9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvY29udGFpbmVycy8ke2NvbnRhaW5lcl9pZH0vZmlsZXMvJHtmaWxlSUR9L2NvbnRlbnRgLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL2JpbmFyeScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGVudC5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIkNvbnRlbnQiLCJyZXRyaWV2ZSIsImZpbGVJRCIsInBhcmFtcyIsIm9wdGlvbnMiLCJjb250YWluZXJfaWQiLCJfY2xpZW50IiwiZ2V0IiwiaGVhZGVycyIsIkFjY2VwdCIsIl9fYmluYXJ5UmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/content.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/files.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/files.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _content_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/content.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.content = new _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content(this._client);\n    }\n    /**\n     * Create a Container File\n     *\n     * You can send either a multipart/form-data request with the raw file content, or\n     * a JSON request with a file ID.\n     */ create(containerID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_4__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Retrieve Container File\n     */ retrieve(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, options);\n    }\n    /**\n     * List Container files\n     */ list(containerID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${containerID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete Container File\n     */ delete(fileID, params, options) {\n        const { container_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/containers/${container_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nFiles.Content = _content_mjs__WEBPACK_IMPORTED_MODULE_1__.Content; //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnRhaW5lcnMvZmlsZXMvZmlsZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDYjtBQUNKO0FBQ2tCO0FBQ0c7QUFDZTtBQUNwQjtBQUNqRCxNQUFNTyxjQUFjUCwyREFBV0E7SUFDbENRLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSVQsaURBQWtCLENBQUMsSUFBSSxDQUFDVSxPQUFPO0lBQ3REO0lBQ0E7Ozs7O0tBS0MsR0FDREMsT0FBT0MsV0FBVyxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUNWLDBEQUFLLENBQUMsWUFBWSxFQUFFTyxZQUFZLE1BQU0sQ0FBQyxFQUFFUixrRkFBMkJBLENBQUM7WUFBRVM7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNKLE9BQU87SUFDcEk7SUFDQTs7S0FFQyxHQUNETSxTQUFTQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUosT0FBTyxFQUFFO1FBQzlCLE1BQU0sRUFBRUssWUFBWSxFQUFFLEdBQUdEO1FBQ3pCLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNVLEdBQUcsQ0FBQ2YsMERBQUssQ0FBQyxZQUFZLEVBQUVjLGFBQWEsT0FBTyxFQUFFRixPQUFPLENBQUMsRUFBRUg7SUFDaEY7SUFDQTs7S0FFQyxHQUNETyxLQUFLVCxXQUFXLEVBQUVVLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUNuQyxPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUNsQiwwREFBSyxDQUFDLFlBQVksRUFBRU8sWUFBWSxNQUFNLENBQUMsRUFBR1YsNERBQVVBLEVBQUc7WUFDbEZvQjtZQUNBLEdBQUdSLE9BQU87UUFDZDtJQUNKO0lBQ0E7O0tBRUMsR0FDRFUsT0FBT1AsTUFBTSxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUM1QixNQUFNLEVBQUVLLFlBQVksRUFBRSxHQUFHRDtRQUN6QixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDYyxNQUFNLENBQUNuQiwwREFBSyxDQUFDLFlBQVksRUFBRWMsYUFBYSxPQUFPLEVBQUVGLE9BQU8sQ0FBQyxFQUFFO1lBQzNFLEdBQUdILE9BQU87WUFDVlcsU0FBU3RCLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFdUIsUUFBUTtnQkFBTTtnQkFBR1osU0FBU1c7YUFBUTtRQUMvRDtJQUNKO0FBQ0o7QUFDQW5CLE1BQU1MLE9BQU8sR0FBR0EsaURBQU9BLEVBQ3ZCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb250YWluZXJzL2ZpbGVzL2ZpbGVzLm1qcz81ZDdjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgQ29udGVudEFQSSBmcm9tIFwiLi9jb250ZW50Lm1qc1wiO1xuaW1wb3J0IHsgQ29udGVudCB9IGZyb20gXCIuL2NvbnRlbnQubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi8uLi8uLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3VwbG9hZHMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgRmlsZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuY29udGVudCA9IG5ldyBDb250ZW50QVBJLkNvbnRlbnQodGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgQ29udGFpbmVyIEZpbGVcbiAgICAgKlxuICAgICAqIFlvdSBjYW4gc2VuZCBlaXRoZXIgYSBtdWx0aXBhcnQvZm9ybS1kYXRhIHJlcXVlc3Qgd2l0aCB0aGUgcmF3IGZpbGUgY29udGVudCwgb3JcbiAgICAgKiBhIEpTT04gcmVxdWVzdCB3aXRoIGEgZmlsZSBJRC5cbiAgICAgKi9cbiAgICBjcmVhdGUoY29udGFpbmVySUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9jb250YWluZXJzLyR7Y29udGFpbmVySUR9L2ZpbGVzYCwgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zKHsgYm9keSwgLi4ub3B0aW9ucyB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmUgQ29udGFpbmVyIEZpbGVcbiAgICAgKi9cbiAgICByZXRyaWV2ZShmaWxlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGNvbnRhaW5lcl9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvY29udGFpbmVycy8ke2NvbnRhaW5lcl9pZH0vZmlsZXMvJHtmaWxlSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgQ29udGFpbmVyIGZpbGVzXG4gICAgICovXG4gICAgbGlzdChjb250YWluZXJJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL2NvbnRhaW5lcnMvJHtjb250YWluZXJJRH0vZmlsZXNgLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBDb250YWluZXIgRmlsZVxuICAgICAqL1xuICAgIGRlbGV0ZShmaWxlSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGNvbnRhaW5lcl9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvY29udGFpbmVycy8ke2NvbnRhaW5lcl9pZH0vZmlsZXMvJHtmaWxlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuRmlsZXMuQ29udGVudCA9IENvbnRlbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maWxlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ29udGVudEFQSSIsIkNvbnRlbnQiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwicGF0aCIsIkZpbGVzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJjb250ZW50IiwiX2NsaWVudCIsImNyZWF0ZSIsImNvbnRhaW5lcklEIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJmaWxlSUQiLCJwYXJhbXMiLCJjb250YWluZXJfaWQiLCJnZXQiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIiwiaGVhZGVycyIsIkFjY2VwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/files/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/conversations.mjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/conversations.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Conversations: () => (/* binding */ Conversations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/items.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Conversations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.items = new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.Items(this._client);\n    }\n    /**\n     * Create a conversation.\n     */ create(body = {}, options) {\n        return this._client.post(\"/conversations\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get a conversation\n     */ retrieve(conversationID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, options);\n    }\n    /**\n     * Update a conversation\n     */ update(conversationID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Delete a conversation. Items in the conversation will not be deleted.\n     */ delete(conversationID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}`, options);\n    }\n}\nConversations.Items = _items_mjs__WEBPACK_IMPORTED_MODULE_1__.Items; //# sourceMappingURL=conversations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnZlcnNhdGlvbnMvY29udmVyc2F0aW9ucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNkO0FBQ0g7QUFDZ0I7QUFDOUMsTUFBTUksc0JBQXNCSiwyREFBV0E7SUFDMUNLLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSU4sNkNBQWMsQ0FBQyxJQUFJLENBQUNPLE9BQU87SUFDaEQ7SUFDQTs7S0FFQyxHQUNEQyxPQUFPQyxPQUFPLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUU7UUFDdkIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLGtCQUFrQjtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNsRTtJQUNBOztLQUVDLEdBQ0RFLFNBQVNDLGNBQWMsRUFBRUgsT0FBTyxFQUFFO1FBQzlCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQ1osMERBQUssQ0FBQyxlQUFlLEVBQUVXLGVBQWUsQ0FBQyxFQUFFSDtJQUNyRTtJQUNBOztLQUVDLEdBQ0RLLE9BQU9GLGNBQWMsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEMsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGVBQWUsRUFBRVcsZUFBZSxDQUFDLEVBQUU7WUFBRUo7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDekY7SUFDQTs7S0FFQyxHQUNETSxPQUFPSCxjQUFjLEVBQUVILE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDUyxNQUFNLENBQUNkLDBEQUFLLENBQUMsZUFBZSxFQUFFVyxlQUFlLENBQUMsRUFBRUg7SUFDeEU7QUFDSjtBQUNBUCxjQUFjRixLQUFLLEdBQUdBLDZDQUFLQSxFQUMzQiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvY29udmVyc2F0aW9ucy9jb252ZXJzYXRpb25zLm1qcz8xNWM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgSXRlbXNBUEkgZnJvbSBcIi4vaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBJdGVtcywgfSBmcm9tIFwiLi9pdGVtcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBDb252ZXJzYXRpb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLml0ZW1zID0gbmV3IEl0ZW1zQVBJLkl0ZW1zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNvbnZlcnNhdGlvbi5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2NvbnZlcnNhdGlvbnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhIGNvbnZlcnNhdGlvblxuICAgICAqL1xuICAgIHJldHJpZXZlKGNvbnZlcnNhdGlvbklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9jb252ZXJzYXRpb25zLyR7Y29udmVyc2F0aW9uSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBhIGNvbnZlcnNhdGlvblxuICAgICAqL1xuICAgIHVwZGF0ZShjb252ZXJzYXRpb25JRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2NvbnZlcnNhdGlvbnMvJHtjb252ZXJzYXRpb25JRH1gLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIGNvbnZlcnNhdGlvbi4gSXRlbXMgaW4gdGhlIGNvbnZlcnNhdGlvbiB3aWxsIG5vdCBiZSBkZWxldGVkLlxuICAgICAqL1xuICAgIGRlbGV0ZShjb252ZXJzYXRpb25JRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbkNvbnZlcnNhdGlvbnMuSXRlbXMgPSBJdGVtcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnZlcnNhdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkl0ZW1zQVBJIiwiSXRlbXMiLCJwYXRoIiwiQ29udmVyc2F0aW9ucyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiaXRlbXMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJjb252ZXJzYXRpb25JRCIsImdldCIsInVwZGF0ZSIsImRlbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/conversations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/items.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/items.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Items: () => (/* binding */ Items)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Items extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create items in a conversation with the given ID.\n     */ create(conversationID, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}/items`, {\n            query: {\n                include\n            },\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get a single item from a conversation with the given IDs.\n     */ retrieve(itemID, params, options) {\n        const { conversation_id, ...query } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversation_id}/items/${itemID}`, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * List all items for a conversation with the given ID.\n     */ list(conversationID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversationID}/items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.ConversationCursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an item from a conversation with the given IDs.\n     */ delete(itemID, params, options) {\n        const { conversation_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/conversations/${conversation_id}/items/${itemID}`, options);\n    }\n} //# sourceMappingURL=items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2NvbnZlcnNhdGlvbnMvaXRlbXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDYztBQUNmO0FBQzlDLE1BQU1HLGNBQWNILDJEQUFXQTtJQUNsQzs7S0FFQyxHQUNESSxPQUFPQyxjQUFjLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3BDLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdDLE1BQU0sR0FBR0g7UUFDN0IsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDVCwwREFBSyxDQUFDLGVBQWUsRUFBRUcsZUFBZSxNQUFNLENBQUMsRUFBRTtZQUNwRU8sT0FBTztnQkFBRUo7WUFBUTtZQUNqQkM7WUFDQSxHQUFHRixPQUFPO1FBQ2Q7SUFDSjtJQUNBOztLQUVDLEdBQ0RNLFNBQVNDLE1BQU0sRUFBRVIsTUFBTSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsTUFBTSxFQUFFUSxlQUFlLEVBQUUsR0FBR0gsT0FBTyxHQUFHTjtRQUN0QyxPQUFPLElBQUksQ0FBQ0ksT0FBTyxDQUFDTSxHQUFHLENBQUNkLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxnQkFBZ0IsT0FBTyxFQUFFRCxPQUFPLENBQUMsRUFBRTtZQUFFRjtZQUFPLEdBQUdMLE9BQU87UUFBQztJQUMxRztJQUNBOztLQUVDLEdBQ0RVLEtBQUtaLGNBQWMsRUFBRU8sUUFBUSxDQUFDLENBQUMsRUFBRUwsT0FBTyxFQUFFO1FBQ3RDLE9BQU8sSUFBSSxDQUFDRyxPQUFPLENBQUNRLFVBQVUsQ0FBQ2hCLDBEQUFLLENBQUMsZUFBZSxFQUFFRyxlQUFlLE1BQU0sQ0FBQyxFQUFHSix3RUFBc0JBLEVBQUc7WUFBRVc7WUFBTyxHQUFHTCxPQUFPO1FBQUM7SUFDaEk7SUFDQTs7S0FFQyxHQUNEWSxPQUFPTCxNQUFNLEVBQUVSLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQzVCLE1BQU0sRUFBRVEsZUFBZSxFQUFFLEdBQUdUO1FBQzVCLE9BQU8sSUFBSSxDQUFDSSxPQUFPLENBQUNTLE1BQU0sQ0FBQ2pCLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxnQkFBZ0IsT0FBTyxFQUFFRCxPQUFPLENBQUMsRUFBRVA7SUFDekY7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9jb252ZXJzYXRpb25zL2l0ZW1zLm1qcz84MTQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ29udmVyc2F0aW9uQ3Vyc29yUGFnZSwgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEl0ZW1zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBpdGVtcyBpbiBhIGNvbnZlcnNhdGlvbiB3aXRoIHRoZSBnaXZlbiBJRC5cbiAgICAgKi9cbiAgICBjcmVhdGUoY29udmVyc2F0aW9uSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGluY2x1ZGUsIC4uLmJvZHkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9jb252ZXJzYXRpb25zLyR7Y29udmVyc2F0aW9uSUR9L2l0ZW1zYCwge1xuICAgICAgICAgICAgcXVlcnk6IHsgaW5jbHVkZSB9LFxuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBzaW5nbGUgaXRlbSBmcm9tIGEgY29udmVyc2F0aW9uIHdpdGggdGhlIGdpdmVuIElEcy5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShpdGVtSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGNvbnZlcnNhdGlvbl9pZCwgLi4ucXVlcnkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2NvbnZlcnNhdGlvbnMvJHtjb252ZXJzYXRpb25faWR9L2l0ZW1zLyR7aXRlbUlEfWAsIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3QgYWxsIGl0ZW1zIGZvciBhIGNvbnZlcnNhdGlvbiB3aXRoIHRoZSBnaXZlbiBJRC5cbiAgICAgKi9cbiAgICBsaXN0KGNvbnZlcnNhdGlvbklELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvY29udmVyc2F0aW9ucy8ke2NvbnZlcnNhdGlvbklEfS9pdGVtc2AsIChDb252ZXJzYXRpb25DdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGFuIGl0ZW0gZnJvbSBhIGNvbnZlcnNhdGlvbiB3aXRoIHRoZSBnaXZlbiBJRHMuXG4gICAgICovXG4gICAgZGVsZXRlKGl0ZW1JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgY29udmVyc2F0aW9uX2lkIH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9jb252ZXJzYXRpb25zLyR7Y29udmVyc2F0aW9uX2lkfS9pdGVtcy8ke2l0ZW1JRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pdGVtcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ29udmVyc2F0aW9uQ3Vyc29yUGFnZSIsInBhdGgiLCJJdGVtcyIsImNyZWF0ZSIsImNvbnZlcnNhdGlvbklEIiwicGFyYW1zIiwib3B0aW9ucyIsImluY2x1ZGUiLCJib2R5IiwiX2NsaWVudCIsInBvc3QiLCJxdWVyeSIsInJldHJpZXZlIiwiaXRlbUlEIiwiY29udmVyc2F0aW9uX2lkIiwiZ2V0IiwibGlzdCIsImdldEFQSUxpc3QiLCJkZWxldGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/embeddings.mjs":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/embeddings.mjs ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Embeddings: () => (/* binding */ Embeddings)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/utils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Embeddings extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     *\n     * @example\n     * ```ts\n     * const createEmbeddingResponse =\n     *   await client.embeddings.create({\n     *     input: 'The quick brown fox jumped over the lazy dog',\n     *     model: 'text-embedding-3-small',\n     *   });\n     * ```\n     */ create(body, options) {\n        const hasUserProvidedEncodingFormat = !!body.encoding_format;\n        // No encoding_format specified, defaulting to base64 for performance reasons\n        // See https://github.com/openai/openai-node/pull/1312\n        let encoding_format = hasUserProvidedEncodingFormat ? body.encoding_format : \"base64\";\n        if (hasUserProvidedEncodingFormat) {\n            (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/user defined encoding_format:\", body.encoding_format);\n        }\n        const response = this._client.post(\"/embeddings\", {\n            body: {\n                ...body,\n                encoding_format: encoding_format\n            },\n            ...options\n        });\n        // if the user specified an encoding_format, return the response as-is\n        if (hasUserProvidedEncodingFormat) {\n            return response;\n        }\n        // in this stage, we are sure the user did not specify an encoding_format\n        // and we defaulted to base64 for performance reasons\n        // we are sure then that the response is base64 encoded, let's decode it\n        // the returned result will be a float32 array since this is OpenAI API's default encoding\n        (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.loggerFor)(this._client).debug(\"embeddings/decoding base64 embeddings from base64\");\n        return response._thenUnwrap((response)=>{\n            if (response && response.data) {\n                response.data.forEach((embeddingBase64Obj)=>{\n                    const embeddingBase64Str = embeddingBase64Obj.embedding;\n                    embeddingBase64Obj.embedding = (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.toFloat32Array)(embeddingBase64Str);\n                });\n            }\n            return response;\n        });\n    }\n} //# sourceMappingURL=embeddings.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2VtYmVkZGluZ3MubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNlO0FBQzNELE1BQU1HLG1CQUFtQkgsMkRBQVdBO0lBQ3ZDOzs7Ozs7Ozs7OztLQVdDLEdBQ0RJLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE1BQU1DLGdDQUFnQyxDQUFDLENBQUNGLEtBQUtHLGVBQWU7UUFDNUQsNkVBQTZFO1FBQzdFLHNEQUFzRDtRQUN0RCxJQUFJQSxrQkFBa0JELGdDQUFnQ0YsS0FBS0csZUFBZSxHQUFHO1FBQzdFLElBQUlELCtCQUErQjtZQUMvQk4sOERBQVNBLENBQUMsSUFBSSxDQUFDUSxPQUFPLEVBQUVDLEtBQUssQ0FBQyw0Q0FBNENMLEtBQUtHLGVBQWU7UUFDbEc7UUFDQSxNQUFNRyxXQUFXLElBQUksQ0FBQ0YsT0FBTyxDQUFDRyxJQUFJLENBQUMsZUFBZTtZQUM5Q1AsTUFBTTtnQkFDRixHQUFHQSxJQUFJO2dCQUNQRyxpQkFBaUJBO1lBQ3JCO1lBQ0EsR0FBR0YsT0FBTztRQUNkO1FBQ0Esc0VBQXNFO1FBQ3RFLElBQUlDLCtCQUErQjtZQUMvQixPQUFPSTtRQUNYO1FBQ0EseUVBQXlFO1FBQ3pFLHFEQUFxRDtRQUNyRCx3RUFBd0U7UUFDeEUsMEZBQTBGO1FBQzFGViw4REFBU0EsQ0FBQyxJQUFJLENBQUNRLE9BQU8sRUFBRUMsS0FBSyxDQUFDO1FBQzlCLE9BQU9DLFNBQVNFLFdBQVcsQ0FBQyxDQUFDRjtZQUN6QixJQUFJQSxZQUFZQSxTQUFTRyxJQUFJLEVBQUU7Z0JBQzNCSCxTQUFTRyxJQUFJLENBQUNDLE9BQU8sQ0FBQyxDQUFDQztvQkFDbkIsTUFBTUMscUJBQXFCRCxtQkFBbUJFLFNBQVM7b0JBQ3ZERixtQkFBbUJFLFNBQVMsR0FBR2hCLG1FQUFjQSxDQUFDZTtnQkFDbEQ7WUFDSjtZQUNBLE9BQU9OO1FBQ1g7SUFDSjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2VtYmVkZGluZ3MubWpzPzY2ODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBsb2dnZXJGb3IsIHRvRmxvYXQzMkFycmF5IH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWxzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEVtYmVkZGluZ3MgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhbiBlbWJlZGRpbmcgdmVjdG9yIHJlcHJlc2VudGluZyB0aGUgaW5wdXQgdGV4dC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBjcmVhdGVFbWJlZGRpbmdSZXNwb25zZSA9XG4gICAgICogICBhd2FpdCBjbGllbnQuZW1iZWRkaW5ncy5jcmVhdGUoe1xuICAgICAqICAgICBpbnB1dDogJ1RoZSBxdWljayBicm93biBmb3gganVtcGVkIG92ZXIgdGhlIGxhenkgZG9nJyxcbiAgICAgKiAgICAgbW9kZWw6ICd0ZXh0LWVtYmVkZGluZy0zLXNtYWxsJyxcbiAgICAgKiAgIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGhhc1VzZXJQcm92aWRlZEVuY29kaW5nRm9ybWF0ID0gISFib2R5LmVuY29kaW5nX2Zvcm1hdDtcbiAgICAgICAgLy8gTm8gZW5jb2RpbmdfZm9ybWF0IHNwZWNpZmllZCwgZGVmYXVsdGluZyB0byBiYXNlNjQgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcbiAgICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuYWkvb3BlbmFpLW5vZGUvcHVsbC8xMzEyXG4gICAgICAgIGxldCBlbmNvZGluZ19mb3JtYXQgPSBoYXNVc2VyUHJvdmlkZWRFbmNvZGluZ0Zvcm1hdCA/IGJvZHkuZW5jb2RpbmdfZm9ybWF0IDogJ2Jhc2U2NCc7XG4gICAgICAgIGlmIChoYXNVc2VyUHJvdmlkZWRFbmNvZGluZ0Zvcm1hdCkge1xuICAgICAgICAgICAgbG9nZ2VyRm9yKHRoaXMuX2NsaWVudCkuZGVidWcoJ2VtYmVkZGluZ3MvdXNlciBkZWZpbmVkIGVuY29kaW5nX2Zvcm1hdDonLCBib2R5LmVuY29kaW5nX2Zvcm1hdCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB0aGlzLl9jbGllbnQucG9zdCgnL2VtYmVkZGluZ3MnLCB7XG4gICAgICAgICAgICBib2R5OiB7XG4gICAgICAgICAgICAgICAgLi4uYm9keSxcbiAgICAgICAgICAgICAgICBlbmNvZGluZ19mb3JtYXQ6IGVuY29kaW5nX2Zvcm1hdCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICAgICAgLy8gaWYgdGhlIHVzZXIgc3BlY2lmaWVkIGFuIGVuY29kaW5nX2Zvcm1hdCwgcmV0dXJuIHRoZSByZXNwb25zZSBhcy1pc1xuICAgICAgICBpZiAoaGFzVXNlclByb3ZpZGVkRW5jb2RpbmdGb3JtYXQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBpbiB0aGlzIHN0YWdlLCB3ZSBhcmUgc3VyZSB0aGUgdXNlciBkaWQgbm90IHNwZWNpZnkgYW4gZW5jb2RpbmdfZm9ybWF0XG4gICAgICAgIC8vIGFuZCB3ZSBkZWZhdWx0ZWQgdG8gYmFzZTY0IGZvciBwZXJmb3JtYW5jZSByZWFzb25zXG4gICAgICAgIC8vIHdlIGFyZSBzdXJlIHRoZW4gdGhhdCB0aGUgcmVzcG9uc2UgaXMgYmFzZTY0IGVuY29kZWQsIGxldCdzIGRlY29kZSBpdFxuICAgICAgICAvLyB0aGUgcmV0dXJuZWQgcmVzdWx0IHdpbGwgYmUgYSBmbG9hdDMyIGFycmF5IHNpbmNlIHRoaXMgaXMgT3BlbkFJIEFQSSdzIGRlZmF1bHQgZW5jb2RpbmdcbiAgICAgICAgbG9nZ2VyRm9yKHRoaXMuX2NsaWVudCkuZGVidWcoJ2VtYmVkZGluZ3MvZGVjb2RpbmcgYmFzZTY0IGVtYmVkZGluZ3MgZnJvbSBiYXNlNjQnKTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLl90aGVuVW53cmFwKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHJlc3BvbnNlICYmIHJlc3BvbnNlLmRhdGEpIHtcbiAgICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLmZvckVhY2goKGVtYmVkZGluZ0Jhc2U2NE9iaikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbWJlZGRpbmdCYXNlNjRTdHIgPSBlbWJlZGRpbmdCYXNlNjRPYmouZW1iZWRkaW5nO1xuICAgICAgICAgICAgICAgICAgICBlbWJlZGRpbmdCYXNlNjRPYmouZW1iZWRkaW5nID0gdG9GbG9hdDMyQXJyYXkoZW1iZWRkaW5nQmFzZTY0U3RyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW1iZWRkaW5ncy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwibG9nZ2VyRm9yIiwidG9GbG9hdDMyQXJyYXkiLCJFbWJlZGRpbmdzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJoYXNVc2VyUHJvdmlkZWRFbmNvZGluZ0Zvcm1hdCIsImVuY29kaW5nX2Zvcm1hdCIsIl9jbGllbnQiLCJkZWJ1ZyIsInJlc3BvbnNlIiwicG9zdCIsIl90aGVuVW53cmFwIiwiZGF0YSIsImZvckVhY2giLCJlbWJlZGRpbmdCYXNlNjRPYmoiLCJlbWJlZGRpbmdCYXNlNjRTdHIiLCJlbWJlZGRpbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/embeddings.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/evals.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/evals.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Evals: () => (/* binding */ Evals)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./runs/runs.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/runs.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Evals extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.runs = new _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs(this._client);\n    }\n    /**\n     * Create the structure of an evaluation that can be used to test a model's\n     * performance. An evaluation is a set of testing criteria and the config for a\n     * data source, which dictates the schema of the data used in the evaluation. After\n     * creating an evaluation, you can run it on different models and model parameters.\n     * We support several types of graders and datasources. For more information, see\n     * the [Evals guide](https://platform.openai.com/docs/guides/evals).\n     */ create(body, options) {\n        return this._client.post(\"/evals\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation by ID.\n     */ retrieve(evalID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n    /**\n     * Update certain properties of an evaluation.\n     */ update(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * List evaluations for a project.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/evals\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an evaluation.\n     */ delete(evalID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}`, options);\n    }\n}\nEvals.Runs = _runs_runs_mjs__WEBPACK_IMPORTED_MODULE_1__.Runs; //# sourceMappingURL=evals.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL2V2YWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNYO0FBQ0g7QUFDZTtBQUNGO0FBQzlDLE1BQU1LLGNBQWNMLDJEQUFXQTtJQUNsQ00sYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJUCxnREFBWSxDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUM3QztJQUNBOzs7Ozs7O0tBT0MsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLFVBQVU7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDMUQ7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxNQUFNLEVBQUVILE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDTyxHQUFHLENBQUNaLDBEQUFLLENBQUMsT0FBTyxFQUFFVyxPQUFPLENBQUMsRUFBRUg7SUFDckQ7SUFDQTs7S0FFQyxHQUNESyxPQUFPRixNQUFNLEVBQUVKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNJLElBQUksQ0FBQ1QsMERBQUssQ0FBQyxPQUFPLEVBQUVXLE9BQU8sQ0FBQyxFQUFFO1lBQUVKO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQ3pFO0lBQ0E7O0tBRUMsR0FDRE0sS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVAsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNXLFVBQVUsQ0FBQyxVQUFXakIsNERBQVVBLEVBQUc7WUFBRWdCO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQy9FO0lBQ0E7O0tBRUMsR0FDRFMsT0FBT04sTUFBTSxFQUFFSCxPQUFPLEVBQUU7UUFDcEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ1ksTUFBTSxDQUFDakIsMERBQUssQ0FBQyxPQUFPLEVBQUVXLE9BQU8sQ0FBQyxFQUFFSDtJQUN4RDtBQUNKO0FBQ0FQLE1BQU1ILElBQUksR0FBR0EsZ0RBQUlBLEVBQ2pCLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ldmFscy9ldmFscy5tanM/ZTAwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIFJ1bnNBUEkgZnJvbSBcIi4vcnVucy9ydW5zLm1qc1wiO1xuaW1wb3J0IHsgUnVucywgfSBmcm9tIFwiLi9ydW5zL3J1bnMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBFdmFscyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ydW5zID0gbmV3IFJ1bnNBUEkuUnVucyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgdGhlIHN0cnVjdHVyZSBvZiBhbiBldmFsdWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gdGVzdCBhIG1vZGVsJ3NcbiAgICAgKiBwZXJmb3JtYW5jZS4gQW4gZXZhbHVhdGlvbiBpcyBhIHNldCBvZiB0ZXN0aW5nIGNyaXRlcmlhIGFuZCB0aGUgY29uZmlnIGZvciBhXG4gICAgICogZGF0YSBzb3VyY2UsIHdoaWNoIGRpY3RhdGVzIHRoZSBzY2hlbWEgb2YgdGhlIGRhdGEgdXNlZCBpbiB0aGUgZXZhbHVhdGlvbi4gQWZ0ZXJcbiAgICAgKiBjcmVhdGluZyBhbiBldmFsdWF0aW9uLCB5b3UgY2FuIHJ1biBpdCBvbiBkaWZmZXJlbnQgbW9kZWxzIGFuZCBtb2RlbCBwYXJhbWV0ZXJzLlxuICAgICAqIFdlIHN1cHBvcnQgc2V2ZXJhbCB0eXBlcyBvZiBncmFkZXJzIGFuZCBkYXRhc291cmNlcy4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuICAgICAqIHRoZSBbRXZhbHMgZ3VpZGVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9ldmFscykuXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvZXZhbHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbiBldmFsdWF0aW9uIGJ5IElELlxuICAgICAqL1xuICAgIHJldHJpZXZlKGV2YWxJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZXZhbHMvJHtldmFsSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSBjZXJ0YWluIHByb3BlcnRpZXMgb2YgYW4gZXZhbHVhdGlvbi5cbiAgICAgKi9cbiAgICB1cGRhdGUoZXZhbElELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvZXZhbHMvJHtldmFsSUR9YCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IGV2YWx1YXRpb25zIGZvciBhIHByb2plY3QuXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2V2YWxzJywgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBEZWxldGUgYW4gZXZhbHVhdGlvbi5cbiAgICAgKi9cbiAgICBkZWxldGUoZXZhbElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC9ldmFscy8ke2V2YWxJRH1gLCBvcHRpb25zKTtcbiAgICB9XG59XG5FdmFscy5SdW5zID0gUnVucztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWV2YWxzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJSdW5zQVBJIiwiUnVucyIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiRXZhbHMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsInJ1bnMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwicmV0cmlldmUiLCJldmFsSUQiLCJnZXQiLCJ1cGRhdGUiLCJsaXN0IiwicXVlcnkiLCJnZXRBUElMaXN0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/evals.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/output-items.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/output-items.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OutputItems: () => (/* binding */ OutputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass OutputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get an evaluation run output item by ID.\n     */ retrieve(outputItemID, params, options) {\n        const { eval_id, run_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${run_id}/output_items/${outputItemID}`, options);\n    }\n    /**\n     * Get a list of output items for an evaluation run.\n     */ list(runID, params, options) {\n        const { eval_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/evals/${eval_id}/runs/${runID}/output_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=output-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvb3V0cHV0LWl0ZW1zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0M7QUFDRjtBQUNqRCxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Qzs7S0FFQyxHQUNESSxTQUFTQyxZQUFZLEVBQUVDLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3BDLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUUsR0FBR0g7UUFDNUIsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDVCwwREFBSyxDQUFDLE9BQU8sRUFBRU0sUUFBUSxNQUFNLEVBQUVDLE9BQU8sY0FBYyxFQUFFSixhQUFhLENBQUMsRUFBRUU7SUFDbEc7SUFDQTs7S0FFQyxHQUNESyxLQUFLQyxLQUFLLEVBQUVQLE1BQU0sRUFBRUMsT0FBTyxFQUFFO1FBQ3pCLE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdNLE9BQU8sR0FBR1I7UUFDOUIsT0FBTyxJQUFJLENBQUNJLE9BQU8sQ0FBQ0ssVUFBVSxDQUFDYiwwREFBSyxDQUFDLE9BQU8sRUFBRU0sUUFBUSxNQUFNLEVBQUVLLE1BQU0sYUFBYSxDQUFDLEVBQUdaLDREQUFVQSxFQUFHO1lBQUVhO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQzFIO0FBQ0osRUFDQSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZXZhbHMvcnVucy9vdXRwdXQtaXRlbXMubWpzP2ZjODEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBPdXRwdXRJdGVtcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBHZXQgYW4gZXZhbHVhdGlvbiBydW4gb3V0cHV0IGl0ZW0gYnkgSUQuXG4gICAgICovXG4gICAgcmV0cmlldmUob3V0cHV0SXRlbUlELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyBldmFsX2lkLCBydW5faWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2V2YWxzLyR7ZXZhbF9pZH0vcnVucy8ke3J1bl9pZH0vb3V0cHV0X2l0ZW1zLyR7b3V0cHV0SXRlbUlEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBsaXN0IG9mIG91dHB1dCBpdGVtcyBmb3IgYW4gZXZhbHVhdGlvbiBydW4uXG4gICAgICovXG4gICAgbGlzdChydW5JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZhbF9pZCwgLi4ucXVlcnkgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9ldmFscy8ke2V2YWxfaWR9L3J1bnMvJHtydW5JRH0vb3V0cHV0X2l0ZW1zYCwgKEN1cnNvclBhZ2UpLCB7IHF1ZXJ5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW91dHB1dC1pdGVtcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJPdXRwdXRJdGVtcyIsInJldHJpZXZlIiwib3V0cHV0SXRlbUlEIiwicGFyYW1zIiwib3B0aW9ucyIsImV2YWxfaWQiLCJydW5faWQiLCJfY2xpZW50IiwiZ2V0IiwibGlzdCIsInJ1bklEIiwicXVlcnkiLCJnZXRBUElMaXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/output-items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/runs.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/runs.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runs: () => (/* binding */ Runs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./output-items.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/output-items.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Runs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.outputItems = new _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems(this._client);\n    }\n    /**\n     * Kicks off a new run for a given evaluation, specifying the data source, and what\n     * model configuration to use to test. The datasource will be validated against the\n     * schema specified in the config of the evaluation.\n     */ create(evalID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get an evaluation run by ID.\n     */ retrieve(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Get a list of runs for an evaluation.\n     */ list(evalID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${evalID}/runs`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete an eval run.\n     */ delete(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n    /**\n     * Cancel an ongoing evaluation run.\n     */ cancel(runID, params, options) {\n        const { eval_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/evals/${eval_id}/runs/${runID}`, options);\n    }\n}\nRuns.OutputItems = _output_items_mjs__WEBPACK_IMPORTED_MODULE_1__.OutputItems; //# sourceMappingURL=runs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2V2YWxzL3J1bnMvcnVucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDSjtBQUNIO0FBQ1E7QUFDRjtBQUNqRCxNQUFNSyxhQUFhTCwyREFBV0E7SUFDakNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSVAsMERBQTBCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQ2xFO0lBQ0E7Ozs7S0FJQyxHQUNEQyxPQUFPQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQ1YsMERBQUssQ0FBQyxPQUFPLEVBQUVPLE9BQU8sS0FBSyxDQUFDLEVBQUU7WUFBRUM7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDOUU7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxLQUFLLEVBQUVDLE1BQU0sRUFBRUosT0FBTyxFQUFFO1FBQzdCLE1BQU0sRUFBRUssT0FBTyxFQUFFLEdBQUdEO1FBQ3BCLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNVLEdBQUcsQ0FBQ2YsMERBQUssQ0FBQyxPQUFPLEVBQUVjLFFBQVEsTUFBTSxFQUFFRixNQUFNLENBQUMsRUFBRUg7SUFDcEU7SUFDQTs7S0FFQyxHQUNETyxLQUFLVCxNQUFNLEVBQUVVLFFBQVEsQ0FBQyxDQUFDLEVBQUVSLE9BQU8sRUFBRTtRQUM5QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYSxVQUFVLENBQUNsQiwwREFBSyxDQUFDLE9BQU8sRUFBRU8sT0FBTyxLQUFLLENBQUMsRUFBR1IsNERBQVVBLEVBQUc7WUFDdkVrQjtZQUNBLEdBQUdSLE9BQU87UUFDZDtJQUNKO0lBQ0E7O0tBRUMsR0FDRFUsT0FBT1AsS0FBSyxFQUFFQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUMzQixNQUFNLEVBQUVLLE9BQU8sRUFBRSxHQUFHRDtRQUNwQixPQUFPLElBQUksQ0FBQ1IsT0FBTyxDQUFDYyxNQUFNLENBQUNuQiwwREFBSyxDQUFDLE9BQU8sRUFBRWMsUUFBUSxNQUFNLEVBQUVGLE1BQU0sQ0FBQyxFQUFFSDtJQUN2RTtJQUNBOztLQUVDLEdBQ0RXLE9BQU9SLEtBQUssRUFBRUMsTUFBTSxFQUFFSixPQUFPLEVBQUU7UUFDM0IsTUFBTSxFQUFFSyxPQUFPLEVBQUUsR0FBR0Q7UUFDcEIsT0FBTyxJQUFJLENBQUNSLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLE9BQU8sRUFBRWMsUUFBUSxNQUFNLEVBQUVGLE1BQU0sQ0FBQyxFQUFFSDtJQUNyRTtBQUNKO0FBQ0FSLEtBQUtILFdBQVcsR0FBR0EsMERBQVdBLEVBQzlCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9ldmFscy9ydW5zL3J1bnMubWpzPzNjZjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBPdXRwdXRJdGVtc0FQSSBmcm9tIFwiLi9vdXRwdXQtaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBPdXRwdXRJdGVtcywgfSBmcm9tIFwiLi9vdXRwdXQtaXRlbXMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBSdW5zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLm91dHB1dEl0ZW1zID0gbmV3IE91dHB1dEl0ZW1zQVBJLk91dHB1dEl0ZW1zKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEtpY2tzIG9mZiBhIG5ldyBydW4gZm9yIGEgZ2l2ZW4gZXZhbHVhdGlvbiwgc3BlY2lmeWluZyB0aGUgZGF0YSBzb3VyY2UsIGFuZCB3aGF0XG4gICAgICogbW9kZWwgY29uZmlndXJhdGlvbiB0byB1c2UgdG8gdGVzdC4gVGhlIGRhdGFzb3VyY2Ugd2lsbCBiZSB2YWxpZGF0ZWQgYWdhaW5zdCB0aGVcbiAgICAgKiBzY2hlbWEgc3BlY2lmaWVkIGluIHRoZSBjb25maWcgb2YgdGhlIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgY3JlYXRlKGV2YWxJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2V2YWxzLyR7ZXZhbElEfS9ydW5zYCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYW4gZXZhbHVhdGlvbiBydW4gYnkgSUQuXG4gICAgICovXG4gICAgcmV0cmlldmUocnVuSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGV2YWxfaWQgfSA9IHBhcmFtcztcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL2V2YWxzLyR7ZXZhbF9pZH0vcnVucy8ke3J1bklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBsaXN0IG9mIHJ1bnMgZm9yIGFuIGV2YWx1YXRpb24uXG4gICAgICovXG4gICAgbGlzdChldmFsSUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9ldmFscy8ke2V2YWxJRH0vcnVuc2AsIChDdXJzb3JQYWdlKSwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGFuIGV2YWwgcnVuLlxuICAgICAqL1xuICAgIGRlbGV0ZShydW5JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZhbF9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZXZhbHMvJHtldmFsX2lkfS9ydW5zLyR7cnVuSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbCBhbiBvbmdvaW5nIGV2YWx1YXRpb24gcnVuLlxuICAgICAqL1xuICAgIGNhbmNlbChydW5JRCwgcGFyYW1zLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgZXZhbF9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2V2YWxzLyR7ZXZhbF9pZH0vcnVucy8ke3J1bklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cblJ1bnMuT3V0cHV0SXRlbXMgPSBPdXRwdXRJdGVtcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk91dHB1dEl0ZW1zQVBJIiwiT3V0cHV0SXRlbXMiLCJDdXJzb3JQYWdlIiwicGF0aCIsIlJ1bnMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIm91dHB1dEl0ZW1zIiwiX2NsaWVudCIsImNyZWF0ZSIsImV2YWxJRCIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwicnVuSUQiLCJwYXJhbXMiLCJldmFsX2lkIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImNhbmNlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/runs/runs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/files.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/files.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 1 TB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */ create(body, options) {\n        return this._client.post(\"/files\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_5__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Returns information about a specific file.\n     */ retrieve(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns a list of files.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/files\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a file and remove it from all vector stores.\n     */ delete(fileID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */ content(fileID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/files/${fileID}/content`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */ async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set([\n            \"processed\",\n            \"error\",\n            \"deleted\"\n        ]);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while(!file.status || !TERMINAL_STATES.has(file.status)){\n            await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new _error_mjs__WEBPACK_IMPORTED_MODULE_4__.APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`\n                });\n            }\n        }\n        return file;\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNDO0FBQ0c7QUFDSDtBQUNLO0FBQ2E7QUFDcEI7QUFDM0MsTUFBTU8sY0FBY1AsMkRBQVdBO0lBQ2xDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBc0JDLEdBQ0RRLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyxVQUFVUCxrRkFBMkJBLENBQUM7WUFBRUk7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDckc7SUFDQTs7S0FFQyxHQUNERSxTQUFTQyxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUNULDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLENBQUMsRUFBRUo7SUFDckQ7SUFDQTs7S0FFQyxHQUNETSxLQUFLQyxRQUFRLENBQUMsQ0FBQyxFQUFFUCxPQUFPLEVBQUU7UUFDdEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ08sVUFBVSxDQUFDLFVBQVdqQiw0REFBVUEsRUFBRztZQUFFZ0I7WUFBTyxHQUFHUCxPQUFPO1FBQUM7SUFDL0U7SUFDQTs7S0FFQyxHQUNEUyxPQUFPTCxNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDUSxNQUFNLENBQUNiLDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLENBQUMsRUFBRUo7SUFDeEQ7SUFDQTs7S0FFQyxHQUNEVSxRQUFRTixNQUFNLEVBQUVKLE9BQU8sRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUNULDBEQUFLLENBQUMsT0FBTyxFQUFFUSxPQUFPLFFBQVEsQ0FBQyxFQUFFO1lBQ3JELEdBQUdKLE9BQU87WUFDVlcsU0FBU25CLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFb0IsUUFBUTtnQkFBcUI7Z0JBQUdaLFNBQVNXO2FBQVE7WUFDMUVFLGtCQUFrQjtRQUN0QjtJQUNKO0lBQ0E7O0tBRUMsR0FDRCxNQUFNQyxrQkFBa0JDLEVBQUUsRUFBRSxFQUFFQyxlQUFlLElBQUksRUFBRUMsVUFBVSxLQUFLLEtBQUssSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDaEYsTUFBTUMsa0JBQWtCLElBQUlDLElBQUk7WUFBQztZQUFhO1lBQVM7U0FBVTtRQUNqRSxNQUFNQyxRQUFRQyxLQUFLQyxHQUFHO1FBQ3RCLElBQUlDLE9BQU8sTUFBTSxJQUFJLENBQUNwQixRQUFRLENBQUNZO1FBQy9CLE1BQU8sQ0FBQ1EsS0FBS0MsTUFBTSxJQUFJLENBQUNOLGdCQUFnQk8sR0FBRyxDQUFDRixLQUFLQyxNQUFNLEVBQUc7WUFDdEQsTUFBTS9CLGdFQUFLQSxDQUFDdUI7WUFDWk8sT0FBTyxNQUFNLElBQUksQ0FBQ3BCLFFBQVEsQ0FBQ1k7WUFDM0IsSUFBSU0sS0FBS0MsR0FBRyxLQUFLRixRQUFRSCxTQUFTO2dCQUM5QixNQUFNLElBQUl2QixpRUFBeUJBLENBQUM7b0JBQ2hDZ0MsU0FBUyxDQUFDLDhCQUE4QixFQUFFWCxHQUFHLDRCQUE0QixFQUFFRSxRQUFRLGNBQWMsQ0FBQztnQkFDdEc7WUFDSjtRQUNKO1FBQ0EsT0FBT007SUFDWDtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbGVzLm1qcz82OTA2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSBcIi4uL2ludGVybmFsL3V0aWxzL3NsZWVwLm1qc1wiO1xuaW1wb3J0IHsgQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvciB9IGZyb20gXCIuLi9lcnJvci5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuaW1wb3J0IHsgcGF0aCB9IGZyb20gXCIuLi9pbnRlcm5hbC91dGlscy9wYXRoLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEZpbGVzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIFVwbG9hZCBhIGZpbGUgdGhhdCBjYW4gYmUgdXNlZCBhY3Jvc3MgdmFyaW91cyBlbmRwb2ludHMuIEluZGl2aWR1YWwgZmlsZXMgY2FuIGJlXG4gICAgICogdXAgdG8gNTEyIE1CLCBhbmQgdGhlIHNpemUgb2YgYWxsIGZpbGVzIHVwbG9hZGVkIGJ5IG9uZSBvcmdhbml6YXRpb24gY2FuIGJlIHVwXG4gICAgICogdG8gMSBUQi5cbiAgICAgKlxuICAgICAqIFRoZSBBc3Npc3RhbnRzIEFQSSBzdXBwb3J0cyBmaWxlcyB1cCB0byAyIG1pbGxpb24gdG9rZW5zIGFuZCBvZiBzcGVjaWZpYyBmaWxlXG4gICAgICogdHlwZXMuIFNlZSB0aGVcbiAgICAgKiBbQXNzaXN0YW50cyBUb29scyBndWlkZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXNzaXN0YW50cy90b29scykgZm9yXG4gICAgICogZGV0YWlscy5cbiAgICAgKlxuICAgICAqIFRoZSBGaW5lLXR1bmluZyBBUEkgb25seSBzdXBwb3J0cyBgLmpzb25sYCBmaWxlcy4gVGhlIGlucHV0IGFsc28gaGFzIGNlcnRhaW5cbiAgICAgKiByZXF1aXJlZCBmb3JtYXRzIGZvciBmaW5lLXR1bmluZ1xuICAgICAqIFtjaGF0XShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbmUtdHVuaW5nL2NoYXQtaW5wdXQpIG9yXG4gICAgICogW2NvbXBsZXRpb25zXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbmUtdHVuaW5nL2NvbXBsZXRpb25zLWlucHV0KVxuICAgICAqIG1vZGVscy5cbiAgICAgKlxuICAgICAqIFRoZSBCYXRjaCBBUEkgb25seSBzdXBwb3J0cyBgLmpzb25sYCBmaWxlcyB1cCB0byAyMDAgTUIgaW4gc2l6ZS4gVGhlIGlucHV0IGFsc29cbiAgICAgKiBoYXMgYSBzcGVjaWZpYyByZXF1aXJlZFxuICAgICAqIFtmb3JtYXRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvYmF0Y2gvcmVxdWVzdC1pbnB1dCkuXG4gICAgICpcbiAgICAgKiBQbGVhc2UgW2NvbnRhY3QgdXNdKGh0dHBzOi8vaGVscC5vcGVuYWkuY29tLykgaWYgeW91IG5lZWQgdG8gaW5jcmVhc2UgdGhlc2VcbiAgICAgKiBzdG9yYWdlIGxpbWl0cy5cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9maWxlcycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgaW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBmaWxlLlxuICAgICAqL1xuICAgIHJldHJpZXZlKGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmlsZXMvJHtmaWxlSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIGZpbGVzLlxuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy9maWxlcycsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgZmlsZSBhbmQgcmVtb3ZlIGl0IGZyb20gYWxsIHZlY3RvciBzdG9yZXMuXG4gICAgICovXG4gICAgZGVsZXRlKGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZmlsZXMvJHtmaWxlSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZmlsZS5cbiAgICAgKi9cbiAgICBjb250ZW50KGZpbGVJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmlsZXMvJHtmaWxlSUR9L2NvbnRlbnRgLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJ2FwcGxpY2F0aW9uL2JpbmFyeScgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICAgICAgX19iaW5hcnlSZXNwb25zZTogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFdhaXRzIGZvciB0aGUgZ2l2ZW4gZmlsZSB0byBiZSBwcm9jZXNzZWQsIGRlZmF1bHQgdGltZW91dCBpcyAzMCBtaW5zLlxuICAgICAqL1xuICAgIGFzeW5jIHdhaXRGb3JQcm9jZXNzaW5nKGlkLCB7IHBvbGxJbnRlcnZhbCA9IDUwMDAsIG1heFdhaXQgPSAzMCAqIDYwICogMTAwMCB9ID0ge30pIHtcbiAgICAgICAgY29uc3QgVEVSTUlOQUxfU1RBVEVTID0gbmV3IFNldChbJ3Byb2Nlc3NlZCcsICdlcnJvcicsICdkZWxldGVkJ10pO1xuICAgICAgICBjb25zdCBzdGFydCA9IERhdGUubm93KCk7XG4gICAgICAgIGxldCBmaWxlID0gYXdhaXQgdGhpcy5yZXRyaWV2ZShpZCk7XG4gICAgICAgIHdoaWxlICghZmlsZS5zdGF0dXMgfHwgIVRFUk1JTkFMX1NUQVRFUy5oYXMoZmlsZS5zdGF0dXMpKSB7XG4gICAgICAgICAgICBhd2FpdCBzbGVlcChwb2xsSW50ZXJ2YWwpO1xuICAgICAgICAgICAgZmlsZSA9IGF3YWl0IHRoaXMucmV0cmlldmUoaWQpO1xuICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSBzdGFydCA+IG1heFdhaXQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQVBJQ29ubmVjdGlvblRpbWVvdXRFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGBHaXZpbmcgdXAgb24gd2FpdGluZyBmb3IgZmlsZSAke2lkfSB0byBmaW5pc2ggcHJvY2Vzc2luZyBhZnRlciAke21heFdhaXR9IG1pbGxpc2Vjb25kcy5gLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaWxlO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpbGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwic2xlZXAiLCJBUElDb25uZWN0aW9uVGltZW91dEVycm9yIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwicGF0aCIsIkZpbGVzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInJldHJpZXZlIiwiZmlsZUlEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImNvbnRlbnQiLCJoZWFkZXJzIiwiQWNjZXB0IiwiX19iaW5hcnlSZXNwb25zZSIsIndhaXRGb3JQcm9jZXNzaW5nIiwiaWQiLCJwb2xsSW50ZXJ2YWwiLCJtYXhXYWl0IiwiVEVSTUlOQUxfU1RBVEVTIiwiU2V0Iiwic3RhcnQiLCJEYXRlIiwibm93IiwiZmlsZSIsInN0YXR1cyIsImhhcyIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/alpha.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/alpha.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Alpha: () => (/* binding */ Alpha)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _graders_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graders.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/graders.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Alpha extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graders = new _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders(this._client);\n    }\n}\nAlpha.Graders = _graders_mjs__WEBPACK_IMPORTED_MODULE_1__.Graders; //# sourceMappingURL=alpha.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2FscGhhLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDYjtBQUNIO0FBQ2xDLE1BQU1HLGNBQWNILDJEQUFXQTtJQUNsQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLE9BQU8sR0FBRyxJQUFJTCxpREFBa0IsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDdEQ7QUFDSjtBQUNBSixNQUFNRCxPQUFPLEdBQUdBLGlEQUFPQSxFQUN2QixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvYWxwaGEvYWxwaGEubWpzPzc5YTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBHcmFkZXJzQVBJIGZyb20gXCIuL2dyYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBHcmFkZXJzLCB9IGZyb20gXCIuL2dyYWRlcnMubWpzXCI7XG5leHBvcnQgY2xhc3MgQWxwaGEgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZ3JhZGVycyA9IG5ldyBHcmFkZXJzQVBJLkdyYWRlcnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5BbHBoYS5HcmFkZXJzID0gR3JhZGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFscGhhLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJHcmFkZXJzQVBJIiwiR3JhZGVycyIsIkFscGhhIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJncmFkZXJzIiwiX2NsaWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/graders.mjs":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/graders.mjs ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Run a grader.\n     *\n     * @example\n     * ```ts\n     * const response = await client.fineTuning.alpha.graders.run({\n     *   grader: {\n     *     input: 'input',\n     *     name: 'name',\n     *     operation: 'eq',\n     *     reference: 'reference',\n     *     type: 'string_check',\n     *   },\n     *   model_sample: 'model_sample',\n     * });\n     * ```\n     */ run(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/run\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Validate a grader.\n     *\n     * @example\n     * ```ts\n     * const response =\n     *   await client.fineTuning.alpha.graders.validate({\n     *     grader: {\n     *       input: 'input',\n     *       name: 'name',\n     *       operation: 'eq',\n     *       reference: 'reference',\n     *       type: 'string_check',\n     *     },\n     *   });\n     * ```\n     */ validate(body, options) {\n        return this._client.post(\"/fine_tuning/alpha/graders/validate\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2FscGhhL2dyYWRlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ2xELE1BQU1DLGdCQUFnQkQsMkRBQVdBO0lBQ3BDOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0RFLElBQUlDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2YsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGtDQUFrQztZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNsRjtJQUNBOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0RHLFNBQVNKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQyx1Q0FBdUM7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDdkY7QUFDSixFQUNBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9hbHBoYS9ncmFkZXJzLm1qcz9jMGQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEdyYWRlcnMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUnVuIGEgZ3JhZGVyLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuYWxwaGEuZ3JhZGVycy5ydW4oe1xuICAgICAqICAgZ3JhZGVyOiB7XG4gICAgICogICAgIGlucHV0OiAnaW5wdXQnLFxuICAgICAqICAgICBuYW1lOiAnbmFtZScsXG4gICAgICogICAgIG9wZXJhdGlvbjogJ2VxJyxcbiAgICAgKiAgICAgcmVmZXJlbmNlOiAncmVmZXJlbmNlJyxcbiAgICAgKiAgICAgdHlwZTogJ3N0cmluZ19jaGVjaycsXG4gICAgICogICB9LFxuICAgICAqICAgbW9kZWxfc2FtcGxlOiAnbW9kZWxfc2FtcGxlJyxcbiAgICAgKiB9KTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBydW4oYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9maW5lX3R1bmluZy9hbHBoYS9ncmFkZXJzL3J1bicsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVmFsaWRhdGUgYSBncmFkZXIuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgcmVzcG9uc2UgPVxuICAgICAqICAgYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuYWxwaGEuZ3JhZGVycy52YWxpZGF0ZSh7XG4gICAgICogICAgIGdyYWRlcjoge1xuICAgICAqICAgICAgIGlucHV0OiAnaW5wdXQnLFxuICAgICAqICAgICAgIG5hbWU6ICduYW1lJyxcbiAgICAgKiAgICAgICBvcGVyYXRpb246ICdlcScsXG4gICAgICogICAgICAgcmVmZXJlbmNlOiAncmVmZXJlbmNlJyxcbiAgICAgKiAgICAgICB0eXBlOiAnc3RyaW5nX2NoZWNrJyxcbiAgICAgKiAgICAgfSxcbiAgICAgKiAgIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHZhbGlkYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvZmluZV90dW5pbmcvYWxwaGEvZ3JhZGVycy92YWxpZGF0ZScsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFkZXJzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJHcmFkZXJzIiwicnVuIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsInZhbGlkYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/graders.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permissions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.permissions = new _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions(this._client);\n    }\n}\nCheckpoints.Permissions = _permissions_mjs__WEBPACK_IMPORTED_MODULE_1__.Permissions; //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL2NoZWNrcG9pbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDTDtBQUNIO0FBQzFDLE1BQU1HLG9CQUFvQkgsMkRBQVdBO0lBQ3hDSSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsV0FBVyxHQUFHLElBQUlMLHlEQUEwQixDQUFDLElBQUksQ0FBQ00sT0FBTztJQUNsRTtBQUNKO0FBQ0FKLFlBQVlELFdBQVcsR0FBR0EseURBQVdBLEVBQ3JDLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9jaGVja3BvaW50cy9jaGVja3BvaW50cy5tanM/Y2MyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIFBlcm1pc3Npb25zQVBJIGZyb20gXCIuL3Blcm1pc3Npb25zLm1qc1wiO1xuaW1wb3J0IHsgUGVybWlzc2lvbnMsIH0gZnJvbSBcIi4vcGVybWlzc2lvbnMubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hlY2twb2ludHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucGVybWlzc2lvbnMgPSBuZXcgUGVybWlzc2lvbnNBUEkuUGVybWlzc2lvbnModGhpcy5fY2xpZW50KTtcbiAgICB9XG59XG5DaGVja3BvaW50cy5QZXJtaXNzaW9ucyA9IFBlcm1pc3Npb25zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2twb2ludHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlBlcm1pc3Npb25zQVBJIiwiUGVybWlzc2lvbnMiLCJDaGVja3BvaW50cyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwicGVybWlzc2lvbnMiLCJfY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Permissions: () => (/* binding */ Permissions)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Permissions extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * **NOTE:** Calling this endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * This enables organization owners to share fine-tuned models with other projects\n     * in their organization.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const permissionCreateResponse of client.fineTuning.checkpoints.permissions.create(\n     *   'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *   { project_ids: ['string'] },\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ create(fineTunedModelCheckpoint, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            body,\n            method: \"post\",\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to view all permissions for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.retrieve(\n     *     'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     *   );\n     * ```\n     */ retrieve(fineTunedModelCheckpoint, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fineTunedModelCheckpoint}/permissions`, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * **NOTE:** This endpoint requires an [admin API key](../admin-api-keys).\n     *\n     * Organization owners can use this endpoint to delete a permission for a\n     * fine-tuned model checkpoint.\n     *\n     * @example\n     * ```ts\n     * const permission =\n     *   await client.fineTuning.checkpoints.permissions.delete(\n     *     'cp_zc4Q7MP6XxulcVzj4MZdwsAB',\n     *     {\n     *       fine_tuned_model_checkpoint:\n     *         'ft:gpt-4o-mini-2024-07-18:org:weather:B7R9VjQd',\n     *     },\n     *   );\n     * ```\n     */ delete(permissionID, params, options) {\n        const { fine_tuned_model_checkpoint } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/checkpoints/${fine_tuned_model_checkpoint}/permissions/${permissionID}`, options);\n    }\n} //# sourceMappingURL=permissions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2NoZWNrcG9pbnRzL3Blcm1pc3Npb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQzdCO0FBQ0w7QUFDSTtBQUNqRCxNQUFNRyxvQkFBb0JILDJEQUFXQTtJQUN4Qzs7Ozs7Ozs7Ozs7Ozs7OztLQWdCQyxHQUNESSxPQUFPQyx3QkFBd0IsRUFBRUMsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDNUMsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsVUFBVSxDQUFDUCwwREFBSyxDQUFDLHlCQUF5QixFQUFFRyx5QkFBeUIsWUFBWSxDQUFDLEVBQUdKLHNEQUFJQSxFQUFHO1lBQUVLO1lBQU1JLFFBQVE7WUFBUSxHQUFHSCxPQUFPO1FBQUM7SUFDdko7SUFDQTs7Ozs7Ozs7Ozs7OztLQWFDLEdBQ0RJLFNBQVNOLHdCQUF3QixFQUFFTyxRQUFRLENBQUMsQ0FBQyxFQUFFTCxPQUFPLEVBQUU7UUFDcEQsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0ssR0FBRyxDQUFDWCwwREFBSyxDQUFDLHlCQUF5QixFQUFFRyx5QkFBeUIsWUFBWSxDQUFDLEVBQUU7WUFDN0ZPO1lBQ0EsR0FBR0wsT0FBTztRQUNkO0lBQ0o7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FpQkMsR0FDRE8sT0FBT0MsWUFBWSxFQUFFQyxNQUFNLEVBQUVULE9BQU8sRUFBRTtRQUNsQyxNQUFNLEVBQUVVLDJCQUEyQixFQUFFLEdBQUdEO1FBQ3hDLE9BQU8sSUFBSSxDQUFDUixPQUFPLENBQUNNLE1BQU0sQ0FBQ1osMERBQUssQ0FBQyx5QkFBeUIsRUFBRWUsNEJBQTRCLGFBQWEsRUFBRUYsYUFBYSxDQUFDLEVBQUVSO0lBQzNIO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZmluZS10dW5pbmcvY2hlY2twb2ludHMvcGVybWlzc2lvbnMubWpzP2Y5ZWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBQZXJtaXNzaW9ucyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiAqKk5PVEU6KiogQ2FsbGluZyB0aGlzIGVuZHBvaW50IHJlcXVpcmVzIGFuIFthZG1pbiBBUEkga2V5XSguLi9hZG1pbi1hcGkta2V5cykuXG4gICAgICpcbiAgICAgKiBUaGlzIGVuYWJsZXMgb3JnYW5pemF0aW9uIG93bmVycyB0byBzaGFyZSBmaW5lLXR1bmVkIG1vZGVscyB3aXRoIG90aGVyIHByb2plY3RzXG4gICAgICogaW4gdGhlaXIgb3JnYW5pemF0aW9uLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIC8vIEF1dG9tYXRpY2FsbHkgZmV0Y2hlcyBtb3JlIHBhZ2VzIGFzIG5lZWRlZC5cbiAgICAgKiBmb3IgYXdhaXQgKGNvbnN0IHBlcm1pc3Npb25DcmVhdGVSZXNwb25zZSBvZiBjbGllbnQuZmluZVR1bmluZy5jaGVja3BvaW50cy5wZXJtaXNzaW9ucy5jcmVhdGUoXG4gICAgICogICAnZnQ6Z3B0LTRvLW1pbmktMjAyNC0wNy0xODpvcmc6d2VhdGhlcjpCN1I5VmpRZCcsXG4gICAgICogICB7IHByb2plY3RfaWRzOiBbJ3N0cmluZyddIH0sXG4gICAgICogKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShmaW5lVHVuZWRNb2RlbENoZWNrcG9pbnQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9maW5lX3R1bmluZy9jaGVja3BvaW50cy8ke2ZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludH0vcGVybWlzc2lvbnNgLCAoUGFnZSksIHsgYm9keSwgbWV0aG9kOiAncG9zdCcsIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqICoqTk9URToqKiBUaGlzIGVuZHBvaW50IHJlcXVpcmVzIGFuIFthZG1pbiBBUEkga2V5XSguLi9hZG1pbi1hcGkta2V5cykuXG4gICAgICpcbiAgICAgKiBPcmdhbml6YXRpb24gb3duZXJzIGNhbiB1c2UgdGhpcyBlbmRwb2ludCB0byB2aWV3IGFsbCBwZXJtaXNzaW9ucyBmb3IgYVxuICAgICAqIGZpbmUtdHVuZWQgbW9kZWwgY2hlY2twb2ludC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBwZXJtaXNzaW9uID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmNoZWNrcG9pbnRzLnBlcm1pc3Npb25zLnJldHJpZXZlKFxuICAgICAqICAgICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiAgICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmV0cmlldmUoZmluZVR1bmVkTW9kZWxDaGVja3BvaW50LCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC9maW5lX3R1bmluZy9jaGVja3BvaW50cy8ke2ZpbmVUdW5lZE1vZGVsQ2hlY2twb2ludH0vcGVybWlzc2lvbnNgLCB7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiAqKk5PVEU6KiogVGhpcyBlbmRwb2ludCByZXF1aXJlcyBhbiBbYWRtaW4gQVBJIGtleV0oLi4vYWRtaW4tYXBpLWtleXMpLlxuICAgICAqXG4gICAgICogT3JnYW5pemF0aW9uIG93bmVycyBjYW4gdXNlIHRoaXMgZW5kcG9pbnQgdG8gZGVsZXRlIGEgcGVybWlzc2lvbiBmb3IgYVxuICAgICAqIGZpbmUtdHVuZWQgbW9kZWwgY2hlY2twb2ludC5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBwZXJtaXNzaW9uID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmNoZWNrcG9pbnRzLnBlcm1pc3Npb25zLmRlbGV0ZShcbiAgICAgKiAgICAgJ2NwX3pjNFE3TVA2WHh1bGNWemo0TVpkd3NBQicsXG4gICAgICogICAgIHtcbiAgICAgKiAgICAgICBmaW5lX3R1bmVkX21vZGVsX2NoZWNrcG9pbnQ6XG4gICAgICogICAgICAgICAnZnQ6Z3B0LTRvLW1pbmktMjAyNC0wNy0xODpvcmc6d2VhdGhlcjpCN1I5VmpRZCcsXG4gICAgICogICAgIH0sXG4gICAgICogICApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGRlbGV0ZShwZXJtaXNzaW9uSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IGZpbmVfdHVuZWRfbW9kZWxfY2hlY2twb2ludCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvZmluZV90dW5pbmcvY2hlY2twb2ludHMvJHtmaW5lX3R1bmVkX21vZGVsX2NoZWNrcG9pbnR9L3Blcm1pc3Npb25zLyR7cGVybWlzc2lvbklEfWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBlcm1pc3Npb25zLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQYWdlIiwicGF0aCIsIlBlcm1pc3Npb25zIiwiY3JlYXRlIiwiZmluZVR1bmVkTW9kZWxDaGVja3BvaW50IiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwiZ2V0QVBJTGlzdCIsIm1ldGhvZCIsInJldHJpZXZlIiwicXVlcnkiLCJnZXQiLCJkZWxldGUiLCJwZXJtaXNzaW9uSUQiLCJwYXJhbXMiLCJmaW5lX3R1bmVkX21vZGVsX2NoZWNrcG9pbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/permissions.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/fine-tuning.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/fine-tuning.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FineTuning: () => (/* binding */ FineTuning)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _methods_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/methods.mjs\");\n/* harmony import */ var _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alpha/alpha.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/alpha/alpha.mjs\");\n/* harmony import */ var _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkpoints/checkpoints.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/checkpoints/checkpoints.mjs\");\n/* harmony import */ var _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jobs/jobs.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass FineTuning extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.methods = new _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods(this._client);\n        this.jobs = new _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs(this._client);\n        this.checkpoints = new _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints(this._client);\n        this.alpha = new _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha(this._client);\n    }\n}\nFineTuning.Methods = _methods_mjs__WEBPACK_IMPORTED_MODULE_1__.Methods;\nFineTuning.Jobs = _jobs_jobs_mjs__WEBPACK_IMPORTED_MODULE_4__.Jobs;\nFineTuning.Checkpoints = _checkpoints_checkpoints_mjs__WEBPACK_IMPORTED_MODULE_3__.Checkpoints;\nFineTuning.Alpha = _alpha_alpha_mjs__WEBPACK_IMPORTED_MODULE_2__.Alpha; //# sourceMappingURL=fine-tuning.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2ZpbmUtdHVuaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDVjtBQUNIO0FBQ0s7QUFDSjtBQUNzQjtBQUNKO0FBQ2pCO0FBQ0g7QUFDakMsTUFBTVMsbUJBQW1CVCwyREFBV0E7SUFDdkNVLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxPQUFPLEdBQUcsSUFBSVgsaURBQWtCLENBQUMsSUFBSSxDQUFDWSxPQUFPO1FBQ2xELElBQUksQ0FBQ0MsSUFBSSxHQUFHLElBQUlQLGdEQUFZLENBQUMsSUFBSSxDQUFDTSxPQUFPO1FBQ3pDLElBQUksQ0FBQ0UsV0FBVyxHQUFHLElBQUlWLHFFQUEwQixDQUFDLElBQUksQ0FBQ1EsT0FBTztRQUM5RCxJQUFJLENBQUNHLEtBQUssR0FBRyxJQUFJYixtREFBYyxDQUFDLElBQUksQ0FBQ1UsT0FBTztJQUNoRDtBQUNKO0FBQ0FKLFdBQVdQLE9BQU8sR0FBR0EsaURBQU9BO0FBQzVCTyxXQUFXRCxJQUFJLEdBQUdBLGdEQUFJQTtBQUN0QkMsV0FBV0gsV0FBVyxHQUFHQSxxRUFBV0E7QUFDcENHLFdBQVdMLEtBQUssR0FBR0EsbURBQUtBLEVBQ3hCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9maW5lLXR1bmluZy5tanM/ZDc5OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIE1ldGhvZHNBUEkgZnJvbSBcIi4vbWV0aG9kcy5tanNcIjtcbmltcG9ydCB7IE1ldGhvZHMsIH0gZnJvbSBcIi4vbWV0aG9kcy5tanNcIjtcbmltcG9ydCAqIGFzIEFscGhhQVBJIGZyb20gXCIuL2FscGhhL2FscGhhLm1qc1wiO1xuaW1wb3J0IHsgQWxwaGEgfSBmcm9tIFwiLi9hbHBoYS9hbHBoYS5tanNcIjtcbmltcG9ydCAqIGFzIENoZWNrcG9pbnRzQVBJIGZyb20gXCIuL2NoZWNrcG9pbnRzL2NoZWNrcG9pbnRzLm1qc1wiO1xuaW1wb3J0IHsgQ2hlY2twb2ludHMgfSBmcm9tIFwiLi9jaGVja3BvaW50cy9jaGVja3BvaW50cy5tanNcIjtcbmltcG9ydCAqIGFzIEpvYnNBUEkgZnJvbSBcIi4vam9icy9qb2JzLm1qc1wiO1xuaW1wb3J0IHsgSm9icywgfSBmcm9tIFwiLi9qb2JzL2pvYnMubWpzXCI7XG5leHBvcnQgY2xhc3MgRmluZVR1bmluZyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5tZXRob2RzID0gbmV3IE1ldGhvZHNBUEkuTWV0aG9kcyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmpvYnMgPSBuZXcgSm9ic0FQSS5Kb2JzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuY2hlY2twb2ludHMgPSBuZXcgQ2hlY2twb2ludHNBUEkuQ2hlY2twb2ludHModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5hbHBoYSA9IG5ldyBBbHBoYUFQSS5BbHBoYSh0aGlzLl9jbGllbnQpO1xuICAgIH1cbn1cbkZpbmVUdW5pbmcuTWV0aG9kcyA9IE1ldGhvZHM7XG5GaW5lVHVuaW5nLkpvYnMgPSBKb2JzO1xuRmluZVR1bmluZy5DaGVja3BvaW50cyA9IENoZWNrcG9pbnRzO1xuRmluZVR1bmluZy5BbHBoYSA9IEFscGhhO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmluZS10dW5pbmcubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk1ldGhvZHNBUEkiLCJNZXRob2RzIiwiQWxwaGFBUEkiLCJBbHBoYSIsIkNoZWNrcG9pbnRzQVBJIiwiQ2hlY2twb2ludHMiLCJKb2JzQVBJIiwiSm9icyIsIkZpbmVUdW5pbmciLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsIm1ldGhvZHMiLCJfY2xpZW50Iiwiam9icyIsImNoZWNrcG9pbnRzIiwiYWxwaGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/fine-tuning.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Checkpoints: () => (/* binding */ Checkpoints)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Checkpoints extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * List checkpoints for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobCheckpoint of client.fineTuning.jobs.checkpoints.list(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/fine_tuning/jobs/${fineTuningJobID}/checkpoints`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=checkpoints.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2pvYnMvY2hlY2twb2ludHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDQztBQUNGO0FBQ2pELE1BQU1HLG9CQUFvQkgsMkRBQVdBO0lBQ3hDOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNESSxLQUFLQyxlQUFlLEVBQUVDLFFBQVEsQ0FBQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtRQUN2QyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxVQUFVLENBQUNQLDBEQUFLLENBQUMsa0JBQWtCLEVBQUVHLGdCQUFnQixZQUFZLENBQUMsRUFBR0osNERBQVVBLEVBQUc7WUFBRUs7WUFBTyxHQUFHQyxPQUFPO1FBQUM7SUFDOUg7QUFDSixFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9maW5lLXR1bmluZy9qb2JzL2NoZWNrcG9pbnRzLm1qcz84MTg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2hlY2twb2ludHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogTGlzdCBjaGVja3BvaW50cyBmb3IgYSBmaW5lLXR1bmluZyBqb2IuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgZmluZVR1bmluZ0pvYkNoZWNrcG9pbnQgb2YgY2xpZW50LmZpbmVUdW5pbmcuam9icy5jaGVja3BvaW50cy5saXN0KFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKSkge1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGxpc3QoZmluZVR1bmluZ0pvYklELCBxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH0vY2hlY2twb2ludHNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hlY2twb2ludHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkN1cnNvclBhZ2UiLCJwYXRoIiwiQ2hlY2twb2ludHMiLCJsaXN0IiwiZmluZVR1bmluZ0pvYklEIiwicXVlcnkiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldEFQSUxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Jobs: () => (/* binding */ Jobs)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkpoints.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Jobs extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.checkpoints = new _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.create({\n     *   model: 'gpt-4o-mini',\n     *   training_file: 'file-abc123',\n     * });\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/fine_tuning/jobs\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/model-optimization)\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.retrieve(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ retrieve(fineTuningJobID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJob of client.fineTuning.jobs.list()) {\n     *   // ...\n     * }\n     * ```\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/fine_tuning/jobs\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.cancel(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ cancel(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/cancel`, options);\n    }\n    /**\n     * Get status updates for a fine-tuning job.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const fineTuningJobEvent of client.fineTuning.jobs.listEvents(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ listEvents(fineTuningJobID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/events`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_2__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Pause a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.pause(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ pause(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/pause`, options);\n    }\n    /**\n     * Resume a fine-tune job.\n     *\n     * @example\n     * ```ts\n     * const fineTuningJob = await client.fineTuning.jobs.resume(\n     *   'ft-AF1WoRqd3aJAHsqc9NY7iL8F',\n     * );\n     * ```\n     */ resume(fineTuningJobID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_3__.path`/fine_tuning/jobs/${fineTuningJobID}/resume`, options);\n    }\n}\nJobs.Checkpoints = _checkpoints_mjs__WEBPACK_IMPORTED_MODULE_1__.Checkpoints; //# sourceMappingURL=jobs.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2pvYnMvam9icy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDN0I7QUFDTDtBQUNIO0FBQ1M7QUFDRjtBQUNqRCxNQUFNSyxhQUFhTCwyREFBV0E7SUFDakNNLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSVAseURBQTBCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQ2xFO0lBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7S0FnQkMsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLHFCQUFxQjtZQUFFRjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNyRTtJQUNBOzs7Ozs7Ozs7OztLQVdDLEdBQ0RFLFNBQVNDLGVBQWUsRUFBRUgsT0FBTyxFQUFFO1FBQy9CLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNPLEdBQUcsQ0FBQ1osMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLENBQUMsRUFBRUg7SUFDekU7SUFDQTs7Ozs7Ozs7OztLQVVDLEdBQ0RLLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVOLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDVSxVQUFVLENBQUMscUJBQXNCaEIsNERBQVVBLEVBQUc7WUFBRWU7WUFBTyxHQUFHTixPQUFPO1FBQUM7SUFDMUY7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRFEsT0FBT0wsZUFBZSxFQUFFSCxPQUFPLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGtCQUFrQixFQUFFVyxnQkFBZ0IsT0FBTyxDQUFDLEVBQUVIO0lBQ2pGO0lBQ0E7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RTLFdBQVdOLGVBQWUsRUFBRUcsUUFBUSxDQUFDLENBQUMsRUFBRU4sT0FBTyxFQUFFO1FBQzdDLE9BQU8sSUFBSSxDQUFDSCxPQUFPLENBQUNVLFVBQVUsQ0FBQ2YsMERBQUssQ0FBQyxrQkFBa0IsRUFBRVcsZ0JBQWdCLE9BQU8sQ0FBQyxFQUFHWiw0REFBVUEsRUFBRztZQUFFZTtZQUFPLEdBQUdOLE9BQU87UUFBQztJQUN6SDtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNEVSxNQUFNUCxlQUFlLEVBQUVILE9BQU8sRUFBRTtRQUM1QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUNULDBEQUFLLENBQUMsa0JBQWtCLEVBQUVXLGdCQUFnQixNQUFNLENBQUMsRUFBRUg7SUFDaEY7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDRFcsT0FBT1IsZUFBZSxFQUFFSCxPQUFPLEVBQUU7UUFDN0IsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLGtCQUFrQixFQUFFVyxnQkFBZ0IsT0FBTyxDQUFDLEVBQUVIO0lBQ2pGO0FBQ0o7QUFDQVAsS0FBS0gsV0FBVyxHQUFHQSx5REFBV0EsRUFDOUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL2pvYnMvam9icy5tanM/Yjg2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCAqIGFzIENoZWNrcG9pbnRzQVBJIGZyb20gXCIuL2NoZWNrcG9pbnRzLm1qc1wiO1xuaW1wb3J0IHsgQ2hlY2twb2ludHMsIH0gZnJvbSBcIi4vY2hlY2twb2ludHMubWpzXCI7XG5pbXBvcnQgeyBDdXJzb3JQYWdlIH0gZnJvbSBcIi4uLy4uLy4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBKb2JzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmNoZWNrcG9pbnRzID0gbmV3IENoZWNrcG9pbnRzQVBJLkNoZWNrcG9pbnRzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBmaW5lLXR1bmluZyBqb2Igd2hpY2ggYmVnaW5zIHRoZSBwcm9jZXNzIG9mIGNyZWF0aW5nIGEgbmV3IG1vZGVsIGZyb21cbiAgICAgKiBhIGdpdmVuIGRhdGFzZXQuXG4gICAgICpcbiAgICAgKiBSZXNwb25zZSBpbmNsdWRlcyBkZXRhaWxzIG9mIHRoZSBlbnF1ZXVlZCBqb2IgaW5jbHVkaW5nIGpvYiBzdGF0dXMgYW5kIHRoZSBuYW1lXG4gICAgICogb2YgdGhlIGZpbmUtdHVuZWQgbW9kZWxzIG9uY2UgY29tcGxldGUuXG4gICAgICpcbiAgICAgKiBbTGVhcm4gbW9yZSBhYm91dCBmaW5lLXR1bmluZ10oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL21vZGVsLW9wdGltaXphdGlvbilcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCBmaW5lVHVuaW5nSm9iID0gYXdhaXQgY2xpZW50LmZpbmVUdW5pbmcuam9icy5jcmVhdGUoe1xuICAgICAqICAgbW9kZWw6ICdncHQtNG8tbWluaScsXG4gICAgICogICB0cmFpbmluZ19maWxlOiAnZmlsZS1hYmMxMjMnLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ZpbmVfdHVuaW5nL2pvYnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBpbmZvIGFib3V0IGEgZmluZS10dW5pbmcgam9iLlxuICAgICAqXG4gICAgICogW0xlYXJuIG1vcmUgYWJvdXQgZmluZS10dW5pbmddKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2d1aWRlcy9tb2RlbC1vcHRpbWl6YXRpb24pXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgZmluZVR1bmluZ0pvYiA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmpvYnMucmV0cmlldmUoXG4gICAgICogICAnZnQtQUYxV29ScWQzYUpBSHNxYzlOWTdpTDhGJyxcbiAgICAgKiApO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJldHJpZXZlKGZpbmVUdW5pbmdKb2JJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH1gLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTGlzdCB5b3VyIG9yZ2FuaXphdGlvbidzIGZpbmUtdHVuaW5nIGpvYnNcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiAvLyBBdXRvbWF0aWNhbGx5IGZldGNoZXMgbW9yZSBwYWdlcyBhcyBuZWVkZWQuXG4gICAgICogZm9yIGF3YWl0IChjb25zdCBmaW5lVHVuaW5nSm9iIG9mIGNsaWVudC5maW5lVHVuaW5nLmpvYnMubGlzdCgpKSB7XG4gICAgICogICAvLyAuLi5cbiAgICAgKiB9XG4gICAgICogYGBgXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL2ZpbmVfdHVuaW5nL2pvYnMnLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEltbWVkaWF0ZWx5IGNhbmNlbCBhIGZpbmUtdHVuZSBqb2IuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgZmluZVR1bmluZ0pvYiA9IGF3YWl0IGNsaWVudC5maW5lVHVuaW5nLmpvYnMuY2FuY2VsKFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjYW5jZWwoZmluZVR1bmluZ0pvYklELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvZmluZV90dW5pbmcvam9icy8ke2ZpbmVUdW5pbmdKb2JJRH0vY2FuY2VsYCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBzdGF0dXMgdXBkYXRlcyBmb3IgYSBmaW5lLXR1bmluZyBqb2IuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogLy8gQXV0b21hdGljYWxseSBmZXRjaGVzIG1vcmUgcGFnZXMgYXMgbmVlZGVkLlxuICAgICAqIGZvciBhd2FpdCAoY29uc3QgZmluZVR1bmluZ0pvYkV2ZW50IG9mIGNsaWVudC5maW5lVHVuaW5nLmpvYnMubGlzdEV2ZW50cyhcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsaXN0RXZlbnRzKGZpbmVUdW5pbmdKb2JJRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L2V2ZW50c2AsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUGF1c2UgYSBmaW5lLXR1bmUgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGZpbmVUdW5pbmdKb2IgPSBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5qb2JzLnBhdXNlKFxuICAgICAqICAgJ2Z0LUFGMVdvUnFkM2FKQUhzcWM5Tlk3aUw4RicsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBwYXVzZShmaW5lVHVuaW5nSm9iSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9maW5lX3R1bmluZy9qb2JzLyR7ZmluZVR1bmluZ0pvYklEfS9wYXVzZWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXN1bWUgYSBmaW5lLXR1bmUgam9iLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGZpbmVUdW5pbmdKb2IgPSBhd2FpdCBjbGllbnQuZmluZVR1bmluZy5qb2JzLnJlc3VtZShcbiAgICAgKiAgICdmdC1BRjFXb1JxZDNhSkFIc3FjOU5ZN2lMOEYnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVzdW1lKGZpbmVUdW5pbmdKb2JJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL2ZpbmVfdHVuaW5nL2pvYnMvJHtmaW5lVHVuaW5nSm9iSUR9L3Jlc3VtZWAsIG9wdGlvbnMpO1xuICAgIH1cbn1cbkpvYnMuQ2hlY2twb2ludHMgPSBDaGVja3BvaW50cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWpvYnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNoZWNrcG9pbnRzQVBJIiwiQ2hlY2twb2ludHMiLCJDdXJzb3JQYWdlIiwicGF0aCIsIkpvYnMiLCJjb25zdHJ1Y3RvciIsImFyZ3VtZW50cyIsImNoZWNrcG9pbnRzIiwiX2NsaWVudCIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInJldHJpZXZlIiwiZmluZVR1bmluZ0pvYklEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImNhbmNlbCIsImxpc3RFdmVudHMiLCJwYXVzZSIsInJlc3VtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/jobs/jobs.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/methods.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/methods.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Methods: () => (/* binding */ Methods)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Methods extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=methods.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL21ldGhvZHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQy9DLE1BQU1DLGdCQUFnQkQsMkRBQVdBO0FBQ3hDLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ZpbmUtdHVuaW5nL21ldGhvZHMubWpzPzc0N2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgTWV0aG9kcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1ldGhvZHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk1ldGhvZHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/methods.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/grader-models.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/grader-models.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraderModels: () => (/* binding */ GraderModels)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass GraderModels extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n} //# sourceMappingURL=grader-models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVyLW1vZGVscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDL0MsTUFBTUMscUJBQXFCRCwyREFBV0E7QUFDN0MsRUFDQSwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZ3JhZGVycy9ncmFkZXItbW9kZWxzLm1qcz9hY2EyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEdyYWRlck1vZGVscyBleHRlbmRzIEFQSVJlc291cmNlIHtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYWRlci1tb2RlbHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkdyYWRlck1vZGVscyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/grader-models.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/graders.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/graders.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Graders: () => (/* binding */ Graders)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./grader-models.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/grader-models.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Graders extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.graderModels = new _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels(this._client);\n    }\n}\nGraders.GraderModels = _grader_models_mjs__WEBPACK_IMPORTED_MODULE_1__.GraderModels; //# sourceMappingURL=graders.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2dyYWRlcnMvZ3JhZGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0M7QUFDSDtBQUM3QyxNQUFNRyxnQkFBZ0JILDJEQUFXQTtJQUNwQ0ksYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJTCw0REFBNEIsQ0FBQyxJQUFJLENBQUNNLE9BQU87SUFDckU7QUFDSjtBQUNBSixRQUFRRCxZQUFZLEdBQUdBLDREQUFZQSxFQUNuQyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvZ3JhZGVycy9ncmFkZXJzLm1qcz9lNjU5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgR3JhZGVyTW9kZWxzQVBJIGZyb20gXCIuL2dyYWRlci1tb2RlbHMubWpzXCI7XG5pbXBvcnQgeyBHcmFkZXJNb2RlbHMsIH0gZnJvbSBcIi4vZ3JhZGVyLW1vZGVscy5tanNcIjtcbmV4cG9ydCBjbGFzcyBHcmFkZXJzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmdyYWRlck1vZGVscyA9IG5ldyBHcmFkZXJNb2RlbHNBUEkuR3JhZGVyTW9kZWxzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuR3JhZGVycy5HcmFkZXJNb2RlbHMgPSBHcmFkZXJNb2RlbHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFkZXJzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJHcmFkZXJNb2RlbHNBUEkiLCJHcmFkZXJNb2RlbHMiLCJHcmFkZXJzIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJncmFkZXJNb2RlbHMiLCJfY2xpZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/graders.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/images.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/images.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Images: () => (/* binding */ Images)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\nclass Images extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Creates a variation of a given image. This endpoint only supports `dall-e-2`.\n     *\n     * @example\n     * ```ts\n     * const imagesResponse = await client.images.createVariation({\n     *   image: fs.createReadStream('otter.png'),\n     * });\n     * ```\n     */ createVariation(body, options) {\n        return this._client.post(\"/images/variations\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    edit(body, options) {\n        return this._client.post(\"/images/edits\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options,\n            stream: body.stream ?? false\n        }, this._client));\n    }\n    generate(body, options) {\n        return this._client.post(\"/images/generations\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        });\n    }\n} //# sourceMappingURL=images.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ltYWdlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ25DO0FBQ21CO0FBQy9ELE1BQU1FLGVBQWVGLDJEQUFXQTtJQUNuQzs7Ozs7Ozs7O0tBU0MsR0FDREcsZ0JBQWdCQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMzQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsc0JBQXNCTixrRkFBMkJBLENBQUM7WUFBRUc7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDakg7SUFDQUUsS0FBS0osSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDaEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGlCQUFpQk4sa0ZBQTJCQSxDQUFDO1lBQUVHO1lBQU0sR0FBR0MsT0FBTztZQUFFSSxRQUFRTCxLQUFLSyxNQUFNLElBQUk7UUFBTSxHQUFHLElBQUksQ0FBQ0gsT0FBTztJQUMxSTtJQUNBSSxTQUFTTixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNwQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsdUJBQXVCO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztZQUFFSSxRQUFRTCxLQUFLSyxNQUFNLElBQUk7UUFBTTtJQUNyRztBQUNKLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2ltYWdlcy5tanM/MTNiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCIuLi9pbnRlcm5hbC91cGxvYWRzLm1qc1wiO1xuZXhwb3J0IGNsYXNzIEltYWdlcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgdmFyaWF0aW9uIG9mIGEgZ2l2ZW4gaW1hZ2UuIFRoaXMgZW5kcG9pbnQgb25seSBzdXBwb3J0cyBgZGFsbC1lLTJgLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IGltYWdlc1Jlc3BvbnNlID0gYXdhaXQgY2xpZW50LmltYWdlcy5jcmVhdGVWYXJpYXRpb24oe1xuICAgICAqICAgaW1hZ2U6IGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ290dGVyLnBuZycpLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZVZhcmlhdGlvbihib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ltYWdlcy92YXJpYXRpb25zJywgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zKHsgYm9keSwgLi4ub3B0aW9ucyB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG4gICAgZWRpdChib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL2ltYWdlcy9lZGl0cycsIG11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMsIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIGdlbmVyYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvaW1hZ2VzL2dlbmVyYXRpb25zJywgeyBib2R5LCAuLi5vcHRpb25zLCBzdHJlYW06IGJvZHkuc3RyZWFtID8/IGZhbHNlIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwiSW1hZ2VzIiwiY3JlYXRlVmFyaWF0aW9uIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImVkaXQiLCJzdHJlYW0iLCJnZW5lcmF0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/images.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/index.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/index.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Audio: () => (/* reexport safe */ _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__.Audio),\n/* harmony export */   Batches: () => (/* reexport safe */ _batches_mjs__WEBPACK_IMPORTED_MODULE_3__.Batches),\n/* harmony export */   Beta: () => (/* reexport safe */ _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__.Beta),\n/* harmony export */   Chat: () => (/* reexport safe */ _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__.Chat),\n/* harmony export */   Completions: () => (/* reexport safe */ _completions_mjs__WEBPACK_IMPORTED_MODULE_5__.Completions),\n/* harmony export */   Containers: () => (/* reexport safe */ _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__.Containers),\n/* harmony export */   Conversations: () => (/* reexport safe */ _conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_7__.Conversations),\n/* harmony export */   Embeddings: () => (/* reexport safe */ _embeddings_mjs__WEBPACK_IMPORTED_MODULE_8__.Embeddings),\n/* harmony export */   Evals: () => (/* reexport safe */ _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_9__.Evals),\n/* harmony export */   Files: () => (/* reexport safe */ _files_mjs__WEBPACK_IMPORTED_MODULE_10__.Files),\n/* harmony export */   FineTuning: () => (/* reexport safe */ _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_11__.FineTuning),\n/* harmony export */   Graders: () => (/* reexport safe */ _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_12__.Graders),\n/* harmony export */   Images: () => (/* reexport safe */ _images_mjs__WEBPACK_IMPORTED_MODULE_13__.Images),\n/* harmony export */   Models: () => (/* reexport safe */ _models_mjs__WEBPACK_IMPORTED_MODULE_14__.Models),\n/* harmony export */   Moderations: () => (/* reexport safe */ _moderations_mjs__WEBPACK_IMPORTED_MODULE_15__.Moderations),\n/* harmony export */   Realtime: () => (/* reexport safe */ _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_16__.Realtime),\n/* harmony export */   Responses: () => (/* reexport safe */ _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_17__.Responses),\n/* harmony export */   Uploads: () => (/* reexport safe */ _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_18__.Uploads),\n/* harmony export */   VectorStores: () => (/* reexport safe */ _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_19__.VectorStores),\n/* harmony export */   Videos: () => (/* reexport safe */ _videos_mjs__WEBPACK_IMPORTED_MODULE_20__.Videos),\n/* harmony export */   Webhooks: () => (/* reexport safe */ _webhooks_mjs__WEBPACK_IMPORTED_MODULE_21__.Webhooks)\n/* harmony export */ });\n/* harmony import */ var _chat_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chat/index.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/chat/index.mjs\");\n/* harmony import */ var _shared_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/shared.mjs\");\n/* harmony import */ var _audio_audio_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./audio/audio.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/audio/audio.mjs\");\n/* harmony import */ var _batches_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batches.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/batches.mjs\");\n/* harmony import */ var _beta_beta_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./beta/beta.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/beta/beta.mjs\");\n/* harmony import */ var _completions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./completions.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/completions.mjs\");\n/* harmony import */ var _containers_containers_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./containers/containers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/containers/containers.mjs\");\n/* harmony import */ var _conversations_conversations_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./conversations/conversations.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/conversations/conversations.mjs\");\n/* harmony import */ var _embeddings_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./embeddings.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/embeddings.mjs\");\n/* harmony import */ var _evals_evals_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./evals/evals.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/evals/evals.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./files.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/files.mjs\");\n/* harmony import */ var _fine_tuning_fine_tuning_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./fine-tuning/fine-tuning.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/fine-tuning/fine-tuning.mjs\");\n/* harmony import */ var _graders_graders_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./graders/graders.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/graders/graders.mjs\");\n/* harmony import */ var _images_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./images.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/images.mjs\");\n/* harmony import */ var _models_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/models.mjs\");\n/* harmony import */ var _moderations_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./moderations.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/moderations.mjs\");\n/* harmony import */ var _realtime_realtime_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./realtime/realtime.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/realtime.mjs\");\n/* harmony import */ var _responses_responses_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./responses/responses.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/responses.mjs\");\n/* harmony import */ var _uploads_uploads_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./uploads/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/uploads.mjs\");\n/* harmony import */ var _vector_stores_vector_stores_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./vector-stores/vector-stores.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/vector-stores.mjs\");\n/* harmony import */ var _videos_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./videos.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/videos.mjs\");\n/* harmony import */ var _webhooks_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./webhooks.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/webhooks.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ3JEO0FBQ0o7QUFDYTtBQUNEO0FBQ0Y7QUFDVTtBQUNTO0FBQ1E7QUFDbkI7QUFDSjtBQUNOO0FBQ3NCO0FBQ1g7QUFDVDtBQUNEO0FBQ1c7QUFDRTtBQUNHO0FBQ047QUFDa0I7QUFDM0I7QUFDRyxDQUMxQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvaW5kZXgubWpzP2E2OTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCAqIGZyb20gXCIuL2NoYXQvaW5kZXgubWpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zaGFyZWQubWpzXCI7XG5leHBvcnQgeyBBdWRpbyB9IGZyb20gXCIuL2F1ZGlvL2F1ZGlvLm1qc1wiO1xuZXhwb3J0IHsgQmF0Y2hlcywgfSBmcm9tIFwiLi9iYXRjaGVzLm1qc1wiO1xuZXhwb3J0IHsgQmV0YSB9IGZyb20gXCIuL2JldGEvYmV0YS5tanNcIjtcbmV4cG9ydCB7IENvbXBsZXRpb25zLCB9IGZyb20gXCIuL2NvbXBsZXRpb25zLm1qc1wiO1xuZXhwb3J0IHsgQ29udGFpbmVycywgfSBmcm9tIFwiLi9jb250YWluZXJzL2NvbnRhaW5lcnMubWpzXCI7XG5leHBvcnQgeyBDb252ZXJzYXRpb25zIH0gZnJvbSBcIi4vY29udmVyc2F0aW9ucy9jb252ZXJzYXRpb25zLm1qc1wiO1xuZXhwb3J0IHsgRW1iZWRkaW5ncywgfSBmcm9tIFwiLi9lbWJlZGRpbmdzLm1qc1wiO1xuZXhwb3J0IHsgRXZhbHMsIH0gZnJvbSBcIi4vZXZhbHMvZXZhbHMubWpzXCI7XG5leHBvcnQgeyBGaWxlcywgfSBmcm9tIFwiLi9maWxlcy5tanNcIjtcbmV4cG9ydCB7IEZpbmVUdW5pbmcgfSBmcm9tIFwiLi9maW5lLXR1bmluZy9maW5lLXR1bmluZy5tanNcIjtcbmV4cG9ydCB7IEdyYWRlcnMgfSBmcm9tIFwiLi9ncmFkZXJzL2dyYWRlcnMubWpzXCI7XG5leHBvcnQgeyBJbWFnZXMsIH0gZnJvbSBcIi4vaW1hZ2VzLm1qc1wiO1xuZXhwb3J0IHsgTW9kZWxzIH0gZnJvbSBcIi4vbW9kZWxzLm1qc1wiO1xuZXhwb3J0IHsgTW9kZXJhdGlvbnMsIH0gZnJvbSBcIi4vbW9kZXJhdGlvbnMubWpzXCI7XG5leHBvcnQgeyBSZWFsdGltZSB9IGZyb20gXCIuL3JlYWx0aW1lL3JlYWx0aW1lLm1qc1wiO1xuZXhwb3J0IHsgUmVzcG9uc2VzIH0gZnJvbSBcIi4vcmVzcG9uc2VzL3Jlc3BvbnNlcy5tanNcIjtcbmV4cG9ydCB7IFVwbG9hZHMgfSBmcm9tIFwiLi91cGxvYWRzL3VwbG9hZHMubWpzXCI7XG5leHBvcnQgeyBWZWN0b3JTdG9yZXMsIH0gZnJvbSBcIi4vdmVjdG9yLXN0b3Jlcy92ZWN0b3Itc3RvcmVzLm1qc1wiO1xuZXhwb3J0IHsgVmlkZW9zLCB9IGZyb20gXCIuL3ZpZGVvcy5tanNcIjtcbmV4cG9ydCB7IFdlYmhvb2tzIH0gZnJvbSBcIi4vd2ViaG9va3MubWpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbIkF1ZGlvIiwiQmF0Y2hlcyIsIkJldGEiLCJDb21wbGV0aW9ucyIsIkNvbnRhaW5lcnMiLCJDb252ZXJzYXRpb25zIiwiRW1iZWRkaW5ncyIsIkV2YWxzIiwiRmlsZXMiLCJGaW5lVHVuaW5nIiwiR3JhZGVycyIsIkltYWdlcyIsIk1vZGVscyIsIk1vZGVyYXRpb25zIiwiUmVhbHRpbWUiLCJSZXNwb25zZXMiLCJVcGxvYWRzIiwiVmVjdG9yU3RvcmVzIiwiVmlkZW9zIiwiV2ViaG9va3MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/index.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/models.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/models.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Models: () => (/* binding */ Models)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Models extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */ retrieve(model, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */ list(options) {\n        return this._client.getAPIList(\"/models\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */ delete(model, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/models/${model}`, options);\n    }\n} //# sourceMappingURL=models.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL21vZGVscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUNMO0FBQ0k7QUFDM0MsTUFBTUcsZUFBZUgsMkRBQVdBO0lBQ25DOzs7S0FHQyxHQUNESSxTQUFTQyxLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNyQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUNOLDBEQUFLLENBQUMsUUFBUSxFQUFFRyxNQUFNLENBQUMsRUFBRUM7SUFDckQ7SUFDQTs7O0tBR0MsR0FDREcsS0FBS0gsT0FBTyxFQUFFO1FBQ1YsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0csVUFBVSxDQUFDLFdBQVlULHNEQUFJQSxFQUFHSztJQUN0RDtJQUNBOzs7S0FHQyxHQUNESyxPQUFPTixLQUFLLEVBQUVDLE9BQU8sRUFBRTtRQUNuQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxNQUFNLENBQUNULDBEQUFLLENBQUMsUUFBUSxFQUFFRyxNQUFNLENBQUMsRUFBRUM7SUFDeEQ7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9tb2RlbHMubWpzPzZhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBQYWdlIH0gZnJvbSBcIi4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBNb2RlbHMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGEgbW9kZWwgaW5zdGFuY2UsIHByb3ZpZGluZyBiYXNpYyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbW9kZWwgc3VjaCBhc1xuICAgICAqIHRoZSBvd25lciBhbmQgcGVybWlzc2lvbmluZy5cbiAgICAgKi9cbiAgICByZXRyaWV2ZShtb2RlbCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvbW9kZWxzLyR7bW9kZWx9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIExpc3RzIHRoZSBjdXJyZW50bHkgYXZhaWxhYmxlIG1vZGVscywgYW5kIHByb3ZpZGVzIGJhc2ljIGluZm9ybWF0aW9uIGFib3V0IGVhY2hcbiAgICAgKiBvbmUgc3VjaCBhcyB0aGUgb3duZXIgYW5kIGF2YWlsYWJpbGl0eS5cbiAgICAgKi9cbiAgICBsaXN0KG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KCcvbW9kZWxzJywgKFBhZ2UpLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgZmluZS10dW5lZCBtb2RlbC4gWW91IG11c3QgaGF2ZSB0aGUgT3duZXIgcm9sZSBpbiB5b3VyIG9yZ2FuaXphdGlvbiB0b1xuICAgICAqIGRlbGV0ZSBhIG1vZGVsLlxuICAgICAqL1xuICAgIGRlbGV0ZShtb2RlbCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmRlbGV0ZShwYXRoIGAvbW9kZWxzLyR7bW9kZWx9YCwgb3B0aW9ucyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9kZWxzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJQYWdlIiwicGF0aCIsIk1vZGVscyIsInJldHJpZXZlIiwibW9kZWwiLCJvcHRpb25zIiwiX2NsaWVudCIsImdldCIsImxpc3QiLCJnZXRBUElMaXN0IiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/models.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/moderations.mjs":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/moderations.mjs ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Moderations: () => (/* binding */ Moderations)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass Moderations extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */ create(body, options) {\n        return this._client.post(\"/moderations\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=moderations.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL21vZGVyYXRpb25zLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNuQztBQUM1QyxNQUFNQyxvQkFBb0JELDJEQUFXQTtJQUN4Qzs7O0tBR0MsR0FDREUsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLGdCQUFnQjtZQUFFSDtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUNoRTtBQUNKLEVBQ0Esd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL21vZGVyYXRpb25zLm1qcz9kMmZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIE1vZGVyYXRpb25zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIENsYXNzaWZpZXMgaWYgdGV4dCBhbmQvb3IgaW1hZ2UgaW5wdXRzIGFyZSBwb3RlbnRpYWxseSBoYXJtZnVsLiBMZWFybiBtb3JlIGluXG4gICAgICogdGhlIFttb2RlcmF0aW9uIGd1aWRlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9ndWlkZXMvbW9kZXJhdGlvbikuXG4gICAgICovXG4gICAgY3JlYXRlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvbW9kZXJhdGlvbnMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bW9kZXJhdGlvbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIk1vZGVyYXRpb25zIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/moderations.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/calls.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/calls.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Calls: () => (/* binding */ Calls)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Calls extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Accept an incoming SIP call and configure the realtime session that will handle\n     * it.\n     *\n     * @example\n     * ```ts\n     * await client.realtime.calls.accept('call_id', {\n     *   type: 'realtime',\n     * });\n     * ```\n     */ accept(callID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/realtime/calls/${callID}/accept`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * End an active Realtime API call, whether it was initiated over SIP or WebRTC.\n     *\n     * @example\n     * ```ts\n     * await client.realtime.calls.hangup('call_id');\n     * ```\n     */ hangup(callID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/realtime/calls/${callID}/hangup`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Transfer an active SIP call to a new destination using the SIP REFER verb.\n     *\n     * @example\n     * ```ts\n     * await client.realtime.calls.refer('call_id', {\n     *   target_uri: 'tel:+14155550123',\n     * });\n     * ```\n     */ refer(callID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/realtime/calls/${callID}/refer`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Decline an incoming SIP call by returning a SIP status code to the caller.\n     *\n     * @example\n     * ```ts\n     * await client.realtime.calls.reject('call_id');\n     * ```\n     */ reject(callID, body = {}, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/realtime/calls/${callID}/reject`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_1__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=calls.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3JlYWx0aW1lL2NhbGxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0k7QUFDTDtBQUM5QyxNQUFNRyxjQUFjSCwyREFBV0E7SUFDbEM7Ozs7Ozs7Ozs7S0FVQyxHQUNESSxPQUFPQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzFCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxnQkFBZ0IsRUFBRUcsT0FBTyxPQUFPLENBQUMsRUFBRTtZQUM5REM7WUFDQSxHQUFHQyxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFVSxRQUFRO2dCQUFNO2dCQUFHSixTQUFTRzthQUFRO1FBQy9EO0lBQ0o7SUFDQTs7Ozs7OztLQU9DLEdBQ0RFLE9BQU9QLE1BQU0sRUFBRUUsT0FBTyxFQUFFO1FBQ3BCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxnQkFBZ0IsRUFBRUcsT0FBTyxPQUFPLENBQUMsRUFBRTtZQUM5RCxHQUFHRSxPQUFPO1lBQ1ZHLFNBQVNULG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFVSxRQUFRO2dCQUFNO2dCQUFHSixTQUFTRzthQUFRO1FBQy9EO0lBQ0o7SUFDQTs7Ozs7Ozs7O0tBU0MsR0FDREcsTUFBTVIsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUN6QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNQLDBEQUFLLENBQUMsZ0JBQWdCLEVBQUVHLE9BQU8sTUFBTSxDQUFDLEVBQUU7WUFDN0RDO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRVUsUUFBUTtnQkFBTTtnQkFBR0osU0FBU0c7YUFBUTtRQUMvRDtJQUNKO0lBQ0E7Ozs7Ozs7S0FPQyxHQUNESSxPQUFPVCxNQUFNLEVBQUVDLE9BQU8sQ0FBQyxDQUFDLEVBQUVDLE9BQU8sRUFBRTtRQUMvQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNQLDBEQUFLLENBQUMsZ0JBQWdCLEVBQUVHLE9BQU8sT0FBTyxDQUFDLEVBQUU7WUFDOURDO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTVCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRVUsUUFBUTtnQkFBTTtnQkFBR0osU0FBU0c7YUFBUTtRQUMvRDtJQUNKO0FBQ0osRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvcmVhbHRpbWUvY2FsbHMubWpzP2FkMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBDYWxscyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBBY2NlcHQgYW4gaW5jb21pbmcgU0lQIGNhbGwgYW5kIGNvbmZpZ3VyZSB0aGUgcmVhbHRpbWUgc2Vzc2lvbiB0aGF0IHdpbGwgaGFuZGxlXG4gICAgICogaXQuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogYXdhaXQgY2xpZW50LnJlYWx0aW1lLmNhbGxzLmFjY2VwdCgnY2FsbF9pZCcsIHtcbiAgICAgKiAgIHR5cGU6ICdyZWFsdGltZScsXG4gICAgICogfSk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgYWNjZXB0KGNhbGxJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3JlYWx0aW1lL2NhbGxzLyR7Y2FsbElEfS9hY2NlcHRgLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEVuZCBhbiBhY3RpdmUgUmVhbHRpbWUgQVBJIGNhbGwsIHdoZXRoZXIgaXQgd2FzIGluaXRpYXRlZCBvdmVyIFNJUCBvciBXZWJSVEMuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogYXdhaXQgY2xpZW50LnJlYWx0aW1lLmNhbGxzLmhhbmd1cCgnY2FsbF9pZCcpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGhhbmd1cChjYWxsSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC9yZWFsdGltZS9jYWxscy8ke2NhbGxJRH0vaGFuZ3VwYCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRyYW5zZmVyIGFuIGFjdGl2ZSBTSVAgY2FsbCB0byBhIG5ldyBkZXN0aW5hdGlvbiB1c2luZyB0aGUgU0lQIFJFRkVSIHZlcmIuXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogYXdhaXQgY2xpZW50LnJlYWx0aW1lLmNhbGxzLnJlZmVyKCdjYWxsX2lkJywge1xuICAgICAqICAgdGFyZ2V0X3VyaTogJ3RlbDorMTQxNTU1NTAxMjMnLFxuICAgICAqIH0pO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIHJlZmVyKGNhbGxJRCwgYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3JlYWx0aW1lL2NhbGxzLyR7Y2FsbElEfS9yZWZlcmAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJyovKicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVjbGluZSBhbiBpbmNvbWluZyBTSVAgY2FsbCBieSByZXR1cm5pbmcgYSBTSVAgc3RhdHVzIGNvZGUgdG8gdGhlIGNhbGxlci5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBhd2FpdCBjbGllbnQucmVhbHRpbWUuY2FsbHMucmVqZWN0KCdjYWxsX2lkJyk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgcmVqZWN0KGNhbGxJRCwgYm9keSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvcmVhbHRpbWUvY2FsbHMvJHtjYWxsSUR9L3JlamVjdGAsIHtcbiAgICAgICAgICAgIGJvZHksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7IEFjY2VwdDogJyovKicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxscy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIkNhbGxzIiwiYWNjZXB0IiwiY2FsbElEIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCIsImhlYWRlcnMiLCJBY2NlcHQiLCJoYW5ndXAiLCJyZWZlciIsInJlamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/calls.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/client-secrets.mjs":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/client-secrets.mjs ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientSecrets: () => (/* binding */ ClientSecrets)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass ClientSecrets extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a Realtime client secret with an associated session configuration.\n     *\n     * @example\n     * ```ts\n     * const clientSecret =\n     *   await client.realtime.clientSecrets.create();\n     * ```\n     */ create(body, options) {\n        return this._client.post(\"/realtime/client_secrets\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=client-secrets.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3JlYWx0aW1lL2NsaWVudC1zZWNyZXRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUMvQyxNQUFNQyxzQkFBc0JELDJEQUFXQTtJQUMxQzs7Ozs7Ozs7S0FRQyxHQUNERSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUMsNEJBQTRCO1lBQUVIO1lBQU0sR0FBR0MsT0FBTztRQUFDO0lBQzVFO0FBQ0osRUFDQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvcmVhbHRpbWUvY2xpZW50LXNlY3JldHMubWpzPzliODgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5leHBvcnQgY2xhc3MgQ2xpZW50U2VjcmV0cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBSZWFsdGltZSBjbGllbnQgc2VjcmV0IHdpdGggYW4gYXNzb2NpYXRlZCBzZXNzaW9uIGNvbmZpZ3VyYXRpb24uXG4gICAgICpcbiAgICAgKiBAZXhhbXBsZVxuICAgICAqIGBgYHRzXG4gICAgICogY29uc3QgY2xpZW50U2VjcmV0ID1cbiAgICAgKiAgIGF3YWl0IGNsaWVudC5yZWFsdGltZS5jbGllbnRTZWNyZXRzLmNyZWF0ZSgpO1xuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3JlYWx0aW1lL2NsaWVudF9zZWNyZXRzJywgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC1zZWNyZXRzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDbGllbnRTZWNyZXRzIiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJfY2xpZW50IiwicG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/client-secrets.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/realtime.mjs":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/realtime.mjs ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Realtime: () => (/* binding */ Realtime)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _calls_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calls.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/calls.mjs\");\n/* harmony import */ var _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client-secrets.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/client-secrets.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Realtime extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.clientSecrets = new _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientSecrets(this._client);\n        this.calls = new _calls_mjs__WEBPACK_IMPORTED_MODULE_1__.Calls(this._client);\n    }\n}\nRealtime.ClientSecrets = _client_secrets_mjs__WEBPACK_IMPORTED_MODULE_2__.ClientSecrets;\nRealtime.Calls = _calls_mjs__WEBPACK_IMPORTED_MODULE_1__.Calls; //# sourceMappingURL=realtime.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3JlYWx0aW1lL3JlYWx0aW1lLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ2Q7QUFDSjtBQUNxQjtBQUNIO0FBQy9DLE1BQU1LLGlCQUFpQkwsMkRBQVdBO0lBQ3JDTSxhQUFjO1FBQ1YsS0FBSyxJQUFJQztRQUNULElBQUksQ0FBQ0MsYUFBYSxHQUFHLElBQUlMLDhEQUE4QixDQUFDLElBQUksQ0FBQ00sT0FBTztRQUNwRSxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJVCw2Q0FBYyxDQUFDLElBQUksQ0FBQ1EsT0FBTztJQUNoRDtBQUNKO0FBQ0FKLFNBQVNELGFBQWEsR0FBR0EsOERBQWFBO0FBQ3RDQyxTQUFTSCxLQUFLLEdBQUdBLDZDQUFLQSxFQUN0QixxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvcmVhbHRpbWUvcmVhbHRpbWUubWpzP2M1NTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBDYWxsc0FQSSBmcm9tIFwiLi9jYWxscy5tanNcIjtcbmltcG9ydCB7IENhbGxzIH0gZnJvbSBcIi4vY2FsbHMubWpzXCI7XG5pbXBvcnQgKiBhcyBDbGllbnRTZWNyZXRzQVBJIGZyb20gXCIuL2NsaWVudC1zZWNyZXRzLm1qc1wiO1xuaW1wb3J0IHsgQ2xpZW50U2VjcmV0cywgfSBmcm9tIFwiLi9jbGllbnQtc2VjcmV0cy5tanNcIjtcbmV4cG9ydCBjbGFzcyBSZWFsdGltZSBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5jbGllbnRTZWNyZXRzID0gbmV3IENsaWVudFNlY3JldHNBUEkuQ2xpZW50U2VjcmV0cyh0aGlzLl9jbGllbnQpO1xuICAgICAgICB0aGlzLmNhbGxzID0gbmV3IENhbGxzQVBJLkNhbGxzKHRoaXMuX2NsaWVudCk7XG4gICAgfVxufVxuUmVhbHRpbWUuQ2xpZW50U2VjcmV0cyA9IENsaWVudFNlY3JldHM7XG5SZWFsdGltZS5DYWxscyA9IENhbGxzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhbHRpbWUubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNhbGxzQVBJIiwiQ2FsbHMiLCJDbGllbnRTZWNyZXRzQVBJIiwiQ2xpZW50U2VjcmV0cyIsIlJlYWx0aW1lIiwiY29uc3RydWN0b3IiLCJhcmd1bWVudHMiLCJjbGllbnRTZWNyZXRzIiwiX2NsaWVudCIsImNhbGxzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/realtime/realtime.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-items.mjs":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-items.mjs ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputItems: () => (/* binding */ InputItems)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass InputItems extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Returns a list of input items for a given response.\n     *\n     * @example\n     * ```ts\n     * // Automatically fetches more pages as needed.\n     * for await (const responseItem of client.responses.inputItems.list(\n     *   'response_id',\n     * )) {\n     *   // ...\n     * }\n     * ```\n     */ list(responseID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/responses/${responseID}/input_items`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options\n        });\n    }\n} //# sourceMappingURL=input-items.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9pbnB1dC1pdGVtcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNDO0FBQ0Y7QUFDOUMsTUFBTUcsbUJBQW1CSCwyREFBV0E7SUFDdkM7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RJLEtBQUtDLFVBQVUsRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ2xDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLFVBQVUsQ0FBQ1AsMERBQUssQ0FBQyxXQUFXLEVBQUVHLFdBQVcsWUFBWSxDQUFDLEVBQUdKLDREQUFVQSxFQUFHO1lBQUVLO1lBQU8sR0FBR0MsT0FBTztRQUFDO0lBQ2xIO0FBQ0osRUFDQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvcmVzcG9uc2VzL2lucHV0LWl0ZW1zLm1qcz9iY2UzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0IHsgQ3Vyc29yUGFnZSB9IGZyb20gXCIuLi8uLi9jb3JlL3BhZ2luYXRpb24ubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgSW5wdXRJdGVtcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBpbnB1dCBpdGVtcyBmb3IgYSBnaXZlbiByZXNwb25zZS5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiAvLyBBdXRvbWF0aWNhbGx5IGZldGNoZXMgbW9yZSBwYWdlcyBhcyBuZWVkZWQuXG4gICAgICogZm9yIGF3YWl0IChjb25zdCByZXNwb25zZUl0ZW0gb2YgY2xpZW50LnJlc3BvbnNlcy5pbnB1dEl0ZW1zLmxpc3QoXG4gICAgICogICAncmVzcG9uc2VfaWQnLFxuICAgICAqICkpIHtcbiAgICAgKiAgIC8vIC4uLlxuICAgICAqIH1cbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBsaXN0KHJlc3BvbnNlSUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC9yZXNwb25zZXMvJHtyZXNwb25zZUlEfS9pbnB1dF9pdGVtc2AsIChDdXJzb3JQYWdlKSwgeyBxdWVyeSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnB1dC1pdGVtcy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwiQ3Vyc29yUGFnZSIsInBhdGgiLCJJbnB1dEl0ZW1zIiwibGlzdCIsInJlc3BvbnNlSUQiLCJxdWVyeSIsIm9wdGlvbnMiLCJfY2xpZW50IiwiZ2V0QVBJTGlzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-items.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-tokens.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-tokens.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InputTokens: () => (/* binding */ InputTokens)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nclass InputTokens extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Get input token counts\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.inputTokens.count();\n     * ```\n     */ count(body = {}, options) {\n        return this._client.post(\"/responses/input_tokens\", {\n            body,\n            ...options\n        });\n    }\n} //# sourceMappingURL=input-tokens.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9pbnB1dC10b2tlbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQy9DLE1BQU1DLG9CQUFvQkQsMkRBQVdBO0lBQ3hDOzs7Ozs7O0tBT0MsR0FDREUsTUFBTUMsT0FBTyxDQUFDLENBQUMsRUFBRUMsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQywyQkFBMkI7WUFBRUg7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDM0U7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZXNwb25zZXMvaW5wdXQtdG9rZW5zLm1qcz85MjVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuZXhwb3J0IGNsYXNzIElucHV0VG9rZW5zIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIC8qKlxuICAgICAqIEdldCBpbnB1dCB0b2tlbiBjb3VudHNcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgdHNcbiAgICAgKiBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudC5yZXNwb25zZXMuaW5wdXRUb2tlbnMuY291bnQoKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjb3VudChib2R5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KCcvcmVzcG9uc2VzL2lucHV0X3Rva2VucycsIHsgYm9keSwgLi4ub3B0aW9ucyB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnB1dC10b2tlbnMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIklucHV0VG9rZW5zIiwiY291bnQiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-tokens.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/responses.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/responses.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Responses: () => (/* binding */ Responses)\n/* harmony export */ });\n/* harmony import */ var _lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/ResponsesParser.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/ResponsesParser.mjs\");\n/* harmony import */ var _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/responses/ResponseStream.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/responses/ResponseStream.mjs\");\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./input-items.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-items.mjs\");\n/* harmony import */ var _input_tokens_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./input-tokens.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/input-tokens.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\n\nclass Responses extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.inputItems = new _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems(this._client);\n        this.inputTokens = new _input_tokens_mjs__WEBPACK_IMPORTED_MODULE_4__.InputTokens(this._client);\n    }\n    create(body, options) {\n        return this._client.post(\"/responses\", {\n            body,\n            ...options,\n            stream: body.stream ?? false\n        })._thenUnwrap((rsp)=>{\n            if (\"object\" in rsp && rsp.object === \"response\") {\n                (0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.addOutputText)(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseID, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/responses/${responseID}`, {\n            query,\n            ...options,\n            stream: query?.stream ?? false\n        })._thenUnwrap((rsp)=>{\n            if (\"object\" in rsp && rsp.object === \"response\") {\n                (0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.addOutputText)(rsp);\n            }\n            return rsp;\n        });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     *\n     * @example\n     * ```ts\n     * await client.responses.delete(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ delete(responseID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/responses/${responseID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_5__.buildHeaders)([\n                {\n                    Accept: \"*/*\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    parse(body, options) {\n        return this._client.responses.create(body, options)._thenUnwrap((response)=>(0,_lib_ResponsesParser_mjs__WEBPACK_IMPORTED_MODULE_0__.parseResponse)(response, body));\n    }\n    /**\n     * Creates a model response stream\n     */ stream(body, options) {\n        return _lib_responses_ResponseStream_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseStream.createResponse(this._client, body, options);\n    }\n    /**\n     * Cancels a model response with the given ID. Only responses created with the\n     * `background` parameter set to `true` can be cancelled.\n     * [Learn more](https://platform.openai.com/docs/guides/background).\n     *\n     * @example\n     * ```ts\n     * const response = await client.responses.cancel(\n     *   'resp_677efb5139a88190b512bc3fef8e535d',\n     * );\n     * ```\n     */ cancel(responseID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_6__.path`/responses/${responseID}/cancel`, options);\n    }\n}\nResponses.InputItems = _input_items_mjs__WEBPACK_IMPORTED_MODULE_3__.InputItems;\nResponses.InputTokens = _input_tokens_mjs__WEBPACK_IMPORTED_MODULE_4__.InputTokens; //# sourceMappingURL=responses.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3Jlc3BvbnNlcy9yZXNwb25zZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ1I7QUFDTjtBQUNsQjtBQUNIO0FBQ0o7QUFDTTtBQUNKO0FBQ1M7QUFDTDtBQUM5QyxNQUFNVSxrQkFBa0JQLDJEQUFXQTtJQUN0Q1EsYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJVCx3REFBd0IsQ0FBQyxJQUFJLENBQUNVLE9BQU87UUFDM0QsSUFBSSxDQUFDQyxXQUFXLEdBQUcsSUFBSVQsMERBQTBCLENBQUMsSUFBSSxDQUFDUSxPQUFPO0lBQ2xFO0lBQ0FFLE9BQU9DLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2xCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNLLElBQUksQ0FBQyxjQUFjO1lBQUVGO1lBQU0sR0FBR0MsT0FBTztZQUFFRSxRQUFRSCxLQUFLRyxNQUFNLElBQUk7UUFBTSxHQUFHQyxXQUFXLENBQUMsQ0FBQ0M7WUFDcEcsSUFBSSxZQUFZQSxPQUFPQSxJQUFJQyxNQUFNLEtBQUssWUFBWTtnQkFDOUN0Qix1RUFBYUEsQ0FBQ3FCO1lBQ2xCO1lBQ0EsT0FBT0E7UUFDWDtJQUNKO0lBQ0FFLFNBQVNDLFVBQVUsRUFBRUMsUUFBUSxDQUFDLENBQUMsRUFBRVIsT0FBTyxFQUFFO1FBQ3RDLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNhLEdBQUcsQ0FBQ2xCLDBEQUFLLENBQUMsV0FBVyxFQUFFZ0IsV0FBVyxDQUFDLEVBQUU7WUFDckRDO1lBQ0EsR0FBR1IsT0FBTztZQUNWRSxRQUFRTSxPQUFPTixVQUFVO1FBQzdCLEdBQUdDLFdBQVcsQ0FBQyxDQUFDQztZQUNaLElBQUksWUFBWUEsT0FBT0EsSUFBSUMsTUFBTSxLQUFLLFlBQVk7Z0JBQzlDdEIsdUVBQWFBLENBQUNxQjtZQUNsQjtZQUNBLE9BQU9BO1FBQ1g7SUFDSjtJQUNBOzs7Ozs7Ozs7S0FTQyxHQUNETSxPQUFPSCxVQUFVLEVBQUVQLE9BQU8sRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDYyxNQUFNLENBQUNuQiwwREFBSyxDQUFDLFdBQVcsRUFBRWdCLFdBQVcsQ0FBQyxFQUFFO1lBQ3hELEdBQUdQLE9BQU87WUFDVlcsU0FBU3JCLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFc0IsUUFBUTtnQkFBTTtnQkFBR1osU0FBU1c7YUFBUTtRQUMvRDtJQUNKO0lBQ0FFLE1BQU1kLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2pCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNrQixTQUFTLENBQ3hCaEIsTUFBTSxDQUFDQyxNQUFNQyxTQUNiRyxXQUFXLENBQUMsQ0FBQ1ksV0FBYWpDLHVFQUFhQSxDQUFDaUMsVUFBVWhCO0lBQzNEO0lBQ0E7O0tBRUMsR0FDREcsT0FBT0gsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBT2hCLDZFQUFjQSxDQUFDZ0MsY0FBYyxDQUFDLElBQUksQ0FBQ3BCLE9BQU8sRUFBRUcsTUFBTUM7SUFDN0Q7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNEaUIsT0FBT1YsVUFBVSxFQUFFUCxPQUFPLEVBQUU7UUFDeEIsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLFdBQVcsRUFBRWdCLFdBQVcsT0FBTyxDQUFDLEVBQUVQO0lBQ3JFO0FBQ0o7QUFDQVIsVUFBVUwsVUFBVSxHQUFHQSx3REFBVUE7QUFDakNLLFVBQVVILFdBQVcsR0FBR0EsMERBQVdBLEVBQ25DLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9yZXNwb25zZXMvcmVzcG9uc2VzLm1qcz9iMmI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBwYXJzZVJlc3BvbnNlLCBhZGRPdXRwdXRUZXh0LCB9IGZyb20gXCIuLi8uLi9saWIvUmVzcG9uc2VzUGFyc2VyLm1qc1wiO1xuaW1wb3J0IHsgUmVzcG9uc2VTdHJlYW0gfSBmcm9tIFwiLi4vLi4vbGliL3Jlc3BvbnNlcy9SZXNwb25zZVN0cmVhbS5tanNcIjtcbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBJbnB1dEl0ZW1zQVBJIGZyb20gXCIuL2lucHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0IHsgSW5wdXRJdGVtcyB9IGZyb20gXCIuL2lucHV0LWl0ZW1zLm1qc1wiO1xuaW1wb3J0ICogYXMgSW5wdXRUb2tlbnNBUEkgZnJvbSBcIi4vaW5wdXQtdG9rZW5zLm1qc1wiO1xuaW1wb3J0IHsgSW5wdXRUb2tlbnMgfSBmcm9tIFwiLi9pbnB1dC10b2tlbnMubWpzXCI7XG5pbXBvcnQgeyBidWlsZEhlYWRlcnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvaGVhZGVycy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBSZXNwb25zZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuaW5wdXRJdGVtcyA9IG5ldyBJbnB1dEl0ZW1zQVBJLklucHV0SXRlbXModGhpcy5fY2xpZW50KTtcbiAgICAgICAgdGhpcy5pbnB1dFRva2VucyA9IG5ldyBJbnB1dFRva2Vuc0FQSS5JbnB1dFRva2Vucyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy9yZXNwb25zZXMnLCB7IGJvZHksIC4uLm9wdGlvbnMsIHN0cmVhbTogYm9keS5zdHJlYW0gPz8gZmFsc2UgfSkuX3RoZW5VbndyYXAoKHJzcCkgPT4ge1xuICAgICAgICAgICAgaWYgKCdvYmplY3QnIGluIHJzcCAmJiByc3Aub2JqZWN0ID09PSAncmVzcG9uc2UnKSB7XG4gICAgICAgICAgICAgICAgYWRkT3V0cHV0VGV4dChyc3ApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHJzcDtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHJpZXZlKHJlc3BvbnNlSUQsIHF1ZXJ5ID0ge30sIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3Jlc3BvbnNlcy8ke3Jlc3BvbnNlSUR9YCwge1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgc3RyZWFtOiBxdWVyeT8uc3RyZWFtID8/IGZhbHNlLFxuICAgICAgICB9KS5fdGhlblVud3JhcCgocnNwKSA9PiB7XG4gICAgICAgICAgICBpZiAoJ29iamVjdCcgaW4gcnNwICYmIHJzcC5vYmplY3QgPT09ICdyZXNwb25zZScpIHtcbiAgICAgICAgICAgICAgICBhZGRPdXRwdXRUZXh0KHJzcCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcnNwO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlcyBhIG1vZGVsIHJlc3BvbnNlIHdpdGggdGhlIGdpdmVuIElELlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGF3YWl0IGNsaWVudC5yZXNwb25zZXMuZGVsZXRlKFxuICAgICAqICAgJ3Jlc3BfNjc3ZWZiNTEzOWE4ODE5MGI1MTJiYzNmZWY4ZTUzNWQnLFxuICAgICAqICk7XG4gICAgICogYGBgXG4gICAgICovXG4gICAgZGVsZXRlKHJlc3BvbnNlSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL3Jlc3BvbnNlcy8ke3Jlc3BvbnNlSUR9YCwge1xuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICcqLyonIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHBhcnNlKGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5yZXNwb25zZXNcbiAgICAgICAgICAgIC5jcmVhdGUoYm9keSwgb3B0aW9ucylcbiAgICAgICAgICAgIC5fdGhlblVud3JhcCgocmVzcG9uc2UpID0+IHBhcnNlUmVzcG9uc2UocmVzcG9uc2UsIGJvZHkpKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG1vZGVsIHJlc3BvbnNlIHN0cmVhbVxuICAgICAqL1xuICAgIHN0cmVhbShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBSZXNwb25zZVN0cmVhbS5jcmVhdGVSZXNwb25zZSh0aGlzLl9jbGllbnQsIGJvZHksIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWxzIGEgbW9kZWwgcmVzcG9uc2Ugd2l0aCB0aGUgZ2l2ZW4gSUQuIE9ubHkgcmVzcG9uc2VzIGNyZWF0ZWQgd2l0aCB0aGVcbiAgICAgKiBgYmFja2dyb3VuZGAgcGFyYW1ldGVyIHNldCB0byBgdHJ1ZWAgY2FuIGJlIGNhbmNlbGxlZC5cbiAgICAgKiBbTGVhcm4gbW9yZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL2JhY2tncm91bmQpLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBgYGB0c1xuICAgICAqIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50LnJlc3BvbnNlcy5jYW5jZWwoXG4gICAgICogICAncmVzcF82NzdlZmI1MTM5YTg4MTkwYjUxMmJjM2ZlZjhlNTM1ZCcsXG4gICAgICogKTtcbiAgICAgKiBgYGBcbiAgICAgKi9cbiAgICBjYW5jZWwocmVzcG9uc2VJRCwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3Jlc3BvbnNlcy8ke3Jlc3BvbnNlSUR9L2NhbmNlbGAsIG9wdGlvbnMpO1xuICAgIH1cbn1cblJlc3BvbnNlcy5JbnB1dEl0ZW1zID0gSW5wdXRJdGVtcztcblJlc3BvbnNlcy5JbnB1dFRva2VucyA9IElucHV0VG9rZW5zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVzcG9uc2VzLm1qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VSZXNwb25zZSIsImFkZE91dHB1dFRleHQiLCJSZXNwb25zZVN0cmVhbSIsIkFQSVJlc291cmNlIiwiSW5wdXRJdGVtc0FQSSIsIklucHV0SXRlbXMiLCJJbnB1dFRva2Vuc0FQSSIsIklucHV0VG9rZW5zIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIlJlc3BvbnNlcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiaW5wdXRJdGVtcyIsIl9jbGllbnQiLCJpbnB1dFRva2VucyIsImNyZWF0ZSIsImJvZHkiLCJvcHRpb25zIiwicG9zdCIsInN0cmVhbSIsIl90aGVuVW53cmFwIiwicnNwIiwib2JqZWN0IiwicmV0cmlldmUiLCJyZXNwb25zZUlEIiwicXVlcnkiLCJnZXQiLCJkZWxldGUiLCJoZWFkZXJzIiwiQWNjZXB0IiwicGFyc2UiLCJyZXNwb25zZXMiLCJyZXNwb25zZSIsImNyZWF0ZVJlc3BvbnNlIiwiY2FuY2VsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/responses/responses.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/shared.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/shared.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n //# sourceMappingURL=shared.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3NoYXJlZC5tanMiLCJtYXBwaW5ncyI6IjtBQUFBLHNGQUFzRjtBQUM1RSxDQUNWLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy9zaGFyZWQubWpzPzc4MDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmV4cG9ydCB7fTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNoYXJlZC5tanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/shared.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/parts.mjs":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/parts.mjs ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parts: () => (/* binding */ Parts)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\nclass Parts extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */ create(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/parts`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_1__.multipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n} //# sourceMappingURL=parts.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3VwbG9hZHMvcGFydHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzRkFBc0Y7QUFDaEM7QUFDbUI7QUFDcEI7QUFDOUMsTUFBTUcsY0FBY0gsMkRBQVdBO0lBQ2xDOzs7Ozs7Ozs7Ozs7S0FZQyxHQUNESSxPQUFPQyxRQUFRLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQzVCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxTQUFTLEVBQUVHLFNBQVMsTUFBTSxDQUFDLEVBQUVKLGtGQUEyQkEsQ0FBQztZQUFFSztZQUFNLEdBQUdDLE9BQU87UUFBQyxHQUFHLElBQUksQ0FBQ0MsT0FBTztJQUM5SDtBQUNKLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3VwbG9hZHMvcGFydHMubWpzP2NjMDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBtdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBQYXJ0cyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICAvKipcbiAgICAgKiBBZGRzIGFcbiAgICAgKiBbUGFydF0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS91cGxvYWRzL3BhcnQtb2JqZWN0KSB0byBhblxuICAgICAqIFtVcGxvYWRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9vYmplY3QpIG9iamVjdC5cbiAgICAgKiBBIFBhcnQgcmVwcmVzZW50cyBhIGNodW5rIG9mIGJ5dGVzIGZyb20gdGhlIGZpbGUgeW91IGFyZSB0cnlpbmcgdG8gdXBsb2FkLlxuICAgICAqXG4gICAgICogRWFjaCBQYXJ0IGNhbiBiZSBhdCBtb3N0IDY0IE1CLCBhbmQgeW91IGNhbiBhZGQgUGFydHMgdW50aWwgeW91IGhpdCB0aGUgVXBsb2FkXG4gICAgICogbWF4aW11bSBvZiA4IEdCLlxuICAgICAqXG4gICAgICogSXQgaXMgcG9zc2libGUgdG8gYWRkIG11bHRpcGxlIFBhcnRzIGluIHBhcmFsbGVsLiBZb3UgY2FuIGRlY2lkZSB0aGUgaW50ZW5kZWRcbiAgICAgKiBvcmRlciBvZiB0aGUgUGFydHMgd2hlbiB5b3VcbiAgICAgKiBbY29tcGxldGUgdGhlIFVwbG9hZF0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS91cGxvYWRzL2NvbXBsZXRlKS5cbiAgICAgKi9cbiAgICBjcmVhdGUodXBsb2FkSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC91cGxvYWRzLyR7dXBsb2FkSUR9L3BhcnRzYCwgbXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zKHsgYm9keSwgLi4ub3B0aW9ucyB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJ0cy5tanMubWFwIl0sIm5hbWVzIjpbIkFQSVJlc291cmNlIiwibXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zIiwicGF0aCIsIlBhcnRzIiwiY3JlYXRlIiwidXBsb2FkSUQiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/parts.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/uploads.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/uploads.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Uploads: () => (/* binding */ Uploads)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _parts_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parts.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/parts.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\nclass Uploads extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.parts = new _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */ create(body, options) {\n        return this._client.post(\"/uploads\", {\n            body,\n            ...options\n        });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */ cancel(uploadID, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */ complete(uploadID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_2__.path`/uploads/${uploadID}/complete`, {\n            body,\n            ...options\n        });\n    }\n}\nUploads.Parts = _parts_mjs__WEBPACK_IMPORTED_MODULE_1__.Parts; //# sourceMappingURL=uploads.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3VwbG9hZHMvdXBsb2Fkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNkO0FBQ0o7QUFDaUI7QUFDOUMsTUFBTUksZ0JBQWdCSiwyREFBV0E7SUFDcENLLGFBQWM7UUFDVixLQUFLLElBQUlDO1FBQ1QsSUFBSSxDQUFDQyxLQUFLLEdBQUcsSUFBSU4sNkNBQWMsQ0FBQyxJQUFJLENBQUNPLE9BQU87SUFDaEQ7SUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7S0FvQkMsR0FDREMsT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDLFlBQVk7WUFBRUY7WUFBTSxHQUFHQyxPQUFPO1FBQUM7SUFDNUQ7SUFDQTs7S0FFQyxHQUNERSxPQUFPQyxRQUFRLEVBQUVILE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0gsT0FBTyxDQUFDSSxJQUFJLENBQUNULDBEQUFLLENBQUMsU0FBUyxFQUFFVyxTQUFTLE9BQU8sQ0FBQyxFQUFFSDtJQUNqRTtJQUNBOzs7Ozs7Ozs7Ozs7OztLQWNDLEdBQ0RJLFNBQVNELFFBQVEsRUFBRUosSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDOUIsT0FBTyxJQUFJLENBQUNILE9BQU8sQ0FBQ0ksSUFBSSxDQUFDVCwwREFBSyxDQUFDLFNBQVMsRUFBRVcsU0FBUyxTQUFTLENBQUMsRUFBRTtZQUFFSjtZQUFNLEdBQUdDLE9BQU87UUFBQztJQUN0RjtBQUNKO0FBQ0FQLFFBQVFGLEtBQUssR0FBR0EsNkNBQUtBLEVBQ3JCLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy91cGxvYWRzL3VwbG9hZHMubWpzP2JlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uLy4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgKiBhcyBQYXJ0c0FQSSBmcm9tIFwiLi9wYXJ0cy5tanNcIjtcbmltcG9ydCB7IFBhcnRzIH0gZnJvbSBcIi4vcGFydHMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgVXBsb2FkcyBleHRlbmRzIEFQSVJlc291cmNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5wYXJ0cyA9IG5ldyBQYXJ0c0FQSS5QYXJ0cyh0aGlzLl9jbGllbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGFuIGludGVybWVkaWF0ZVxuICAgICAqIFtVcGxvYWRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9vYmplY3QpIG9iamVjdFxuICAgICAqIHRoYXQgeW91IGNhbiBhZGRcbiAgICAgKiBbUGFydHNdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9wYXJ0LW9iamVjdCkgdG8uXG4gICAgICogQ3VycmVudGx5LCBhbiBVcGxvYWQgY2FuIGFjY2VwdCBhdCBtb3N0IDggR0IgaW4gdG90YWwgYW5kIGV4cGlyZXMgYWZ0ZXIgYW4gaG91clxuICAgICAqIGFmdGVyIHlvdSBjcmVhdGUgaXQuXG4gICAgICpcbiAgICAgKiBPbmNlIHlvdSBjb21wbGV0ZSB0aGUgVXBsb2FkLCB3ZSB3aWxsIGNyZWF0ZSBhXG4gICAgICogW0ZpbGVdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvZmlsZXMvb2JqZWN0KSBvYmplY3QgdGhhdFxuICAgICAqIGNvbnRhaW5zIGFsbCB0aGUgcGFydHMgeW91IHVwbG9hZGVkLiBUaGlzIEZpbGUgaXMgdXNhYmxlIGluIHRoZSByZXN0IG9mIG91clxuICAgICAqIHBsYXRmb3JtIGFzIGEgcmVndWxhciBGaWxlIG9iamVjdC5cbiAgICAgKlxuICAgICAqIEZvciBjZXJ0YWluIGBwdXJwb3NlYCB2YWx1ZXMsIHRoZSBjb3JyZWN0IGBtaW1lX3R5cGVgIG11c3QgYmUgc3BlY2lmaWVkLiBQbGVhc2VcbiAgICAgKiByZWZlciB0byBkb2N1bWVudGF0aW9uIGZvciB0aGVcbiAgICAgKiBbc3VwcG9ydGVkIE1JTUUgdHlwZXMgZm9yIHlvdXIgdXNlIGNhc2VdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2Fzc2lzdGFudHMvdG9vbHMvZmlsZS1zZWFyY2gjc3VwcG9ydGVkLWZpbGVzKS5cbiAgICAgKlxuICAgICAqIEZvciBndWlkYW5jZSBvbiB0aGUgcHJvcGVyIGZpbGVuYW1lIGV4dGVuc2lvbnMgZm9yIGVhY2ggcHVycG9zZSwgcGxlYXNlIGZvbGxvd1xuICAgICAqIHRoZSBkb2N1bWVudGF0aW9uIG9uXG4gICAgICogW2NyZWF0aW5nIGEgRmlsZV0oaHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvYXBpLXJlZmVyZW5jZS9maWxlcy9jcmVhdGUpLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3VwbG9hZHMnLCB7IGJvZHksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENhbmNlbHMgdGhlIFVwbG9hZC4gTm8gUGFydHMgbWF5IGJlIGFkZGVkIGFmdGVyIGFuIFVwbG9hZCBpcyBjYW5jZWxsZWQuXG4gICAgICovXG4gICAgY2FuY2VsKHVwbG9hZElELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdXBsb2Fkcy8ke3VwbG9hZElEfS9jYW5jZWxgLCBvcHRpb25zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ29tcGxldGVzIHRoZVxuICAgICAqIFtVcGxvYWRdKGh0dHBzOi8vcGxhdGZvcm0ub3BlbmFpLmNvbS9kb2NzL2FwaS1yZWZlcmVuY2UvdXBsb2Fkcy9vYmplY3QpLlxuICAgICAqXG4gICAgICogV2l0aGluIHRoZSByZXR1cm5lZCBVcGxvYWQgb2JqZWN0LCB0aGVyZSBpcyBhIG5lc3RlZFxuICAgICAqIFtGaWxlXShodHRwczovL3BsYXRmb3JtLm9wZW5haS5jb20vZG9jcy9hcGktcmVmZXJlbmNlL2ZpbGVzL29iamVjdCkgb2JqZWN0IHRoYXRcbiAgICAgKiBpcyByZWFkeSB0byB1c2UgaW4gdGhlIHJlc3Qgb2YgdGhlIHBsYXRmb3JtLlxuICAgICAqXG4gICAgICogWW91IGNhbiBzcGVjaWZ5IHRoZSBvcmRlciBvZiB0aGUgUGFydHMgYnkgcGFzc2luZyBpbiBhbiBvcmRlcmVkIGxpc3Qgb2YgdGhlIFBhcnRcbiAgICAgKiBJRHMuXG4gICAgICpcbiAgICAgKiBUaGUgbnVtYmVyIG9mIGJ5dGVzIHVwbG9hZGVkIHVwb24gY29tcGxldGlvbiBtdXN0IG1hdGNoIHRoZSBudW1iZXIgb2YgYnl0ZXNcbiAgICAgKiBpbml0aWFsbHkgc3BlY2lmaWVkIHdoZW4gY3JlYXRpbmcgdGhlIFVwbG9hZCBvYmplY3QuIE5vIFBhcnRzIG1heSBiZSBhZGRlZCBhZnRlclxuICAgICAqIGFuIFVwbG9hZCBpcyBjb21wbGV0ZWQuXG4gICAgICovXG4gICAgY29tcGxldGUodXBsb2FkSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC91cGxvYWRzLyR7dXBsb2FkSUR9L2NvbXBsZXRlYCwgeyBib2R5LCAuLi5vcHRpb25zIH0pO1xuICAgIH1cbn1cblVwbG9hZHMuUGFydHMgPSBQYXJ0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwbG9hZHMubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIlBhcnRzQVBJIiwiUGFydHMiLCJwYXRoIiwiVXBsb2FkcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwicGFydHMiLCJfY2xpZW50IiwiY3JlYXRlIiwiYm9keSIsIm9wdGlvbnMiLCJwb3N0IiwiY2FuY2VsIiwidXBsb2FkSUQiLCJjb21wbGV0ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/uploads/uploads.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/file-batches.mjs":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/file-batches.mjs ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FileBatches: () => (/* binding */ FileBatches)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils/sleep.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/sleep.mjs\");\n/* harmony import */ var _lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/Util.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/lib/Util.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\nclass FileBatches extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file batch.\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/file_batches`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */ retrieve(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */ cancel(batchID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/cancel`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    /**\n     * Returns a list of vector store files in a batch.\n     */ listFiles(batchID, params, options) {\n        const { vector_store_id, ...query } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vector_store_id}/file_batches/${batchID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */ async poll(vectorStoreID, batchID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const { data: batch, response } = await this.retrieve(batchID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            switch(batch.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_sleep_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"cancelled\":\n                case \"completed\":\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */ async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [\n            ...fileIds\n        ];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator){\n                const fileObj = await client.files.create({\n                    file: item,\n                    purpose: \"assistants\"\n                }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await (0,_lib_Util_mjs__WEBPACK_IMPORTED_MODULE_4__.allSettledWithThrow)(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds\n        });\n    }\n} //# sourceMappingURL=file-batches.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZlY3Rvci1zdG9yZXMvZmlsZS1iYXRjaGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ2hDO0FBQ0M7QUFDRztBQUNIO0FBQ0U7QUFDSjtBQUM5QyxNQUFNTSxvQkFBb0JOLDJEQUFXQTtJQUN4Qzs7S0FFQyxHQUNETyxPQUFPQyxhQUFhLEVBQUVDLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2pDLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNDLElBQUksQ0FBQ1AsMERBQUssQ0FBQyxlQUFlLEVBQUVHLGNBQWMsYUFBYSxDQUFDLEVBQUU7WUFDMUVDO1lBQ0EsR0FBR0MsT0FBTztZQUNWRyxTQUFTWCxtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1EsU0FBU0c7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7O0tBRUMsR0FDREMsU0FBU0MsT0FBTyxFQUFFQyxNQUFNLEVBQUVOLE9BQU8sRUFBRTtRQUMvQixNQUFNLEVBQUVPLGVBQWUsRUFBRSxHQUFHRDtRQUM1QixPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDTyxHQUFHLENBQUNiLDBEQUFLLENBQUMsZUFBZSxFQUFFWSxnQkFBZ0IsY0FBYyxFQUFFRixRQUFRLENBQUMsRUFBRTtZQUN0RixHQUFHTCxPQUFPO1lBQ1ZHLFNBQVNYLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHUSxTQUFTRzthQUFRO1FBQ2hGO0lBQ0o7SUFDQTs7O0tBR0MsR0FDRE0sT0FBT0osT0FBTyxFQUFFQyxNQUFNLEVBQUVOLE9BQU8sRUFBRTtRQUM3QixNQUFNLEVBQUVPLGVBQWUsRUFBRSxHQUFHRDtRQUM1QixPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDQyxJQUFJLENBQUNQLDBEQUFLLENBQUMsZUFBZSxFQUFFWSxnQkFBZ0IsY0FBYyxFQUFFRixRQUFRLE9BQU8sQ0FBQyxFQUFFO1lBQzlGLEdBQUdMLE9BQU87WUFDVkcsU0FBU1gsbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdRLFNBQVNHO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0QsTUFBTU8sY0FBY0MsYUFBYSxFQUFFWixJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUM5QyxNQUFNWSxRQUFRLE1BQU0sSUFBSSxDQUFDZixNQUFNLENBQUNjLGVBQWVaO1FBQy9DLE9BQU8sTUFBTSxJQUFJLENBQUNjLElBQUksQ0FBQ0YsZUFBZUMsTUFBTUUsRUFBRSxFQUFFZDtJQUNwRDtJQUNBOztLQUVDLEdBQ0RlLFVBQVVWLE9BQU8sRUFBRUMsTUFBTSxFQUFFTixPQUFPLEVBQUU7UUFDaEMsTUFBTSxFQUFFTyxlQUFlLEVBQUUsR0FBR1MsT0FBTyxHQUFHVjtRQUN0QyxPQUFPLElBQUksQ0FBQ0wsT0FBTyxDQUFDZ0IsVUFBVSxDQUFDdEIsMERBQUssQ0FBQyxlQUFlLEVBQUVZLGdCQUFnQixjQUFjLEVBQUVGLFFBQVEsTUFBTSxDQUFDLEVBQUdkLDREQUFVQSxFQUFHO1lBQUV5QjtZQUFPLEdBQUdoQixPQUFPO1lBQUVHLFNBQVNYLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFLGVBQWU7Z0JBQWdCO2dCQUFHUSxTQUFTRzthQUFRO1FBQUU7SUFDNU47SUFDQTs7Ozs7S0FLQyxHQUNELE1BQU1VLEtBQUtmLGFBQWEsRUFBRU8sT0FBTyxFQUFFTCxPQUFPLEVBQUU7UUFDeEMsTUFBTUcsVUFBVVgsbUVBQVlBLENBQUM7WUFDekJRLFNBQVNHO1lBQ1Q7Z0JBQ0ksMkJBQTJCO2dCQUMzQixvQ0FBb0NILFNBQVNrQixnQkFBZ0JDLGNBQWNDO1lBQy9FO1NBQ0g7UUFDRCxNQUFPLEtBQU07WUFDVCxNQUFNLEVBQUVDLE1BQU1ULEtBQUssRUFBRVUsUUFBUSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUNsQixRQUFRLENBQUNDLFNBQVM7Z0JBQUVFLGlCQUFpQlQ7WUFBYyxHQUFHO2dCQUMvRixHQUFHRSxPQUFPO2dCQUNWRztZQUNKLEdBQUdvQixZQUFZO1lBQ2YsT0FBUVgsTUFBTVksTUFBTTtnQkFDaEIsS0FBSztvQkFDRCxJQUFJQyxnQkFBZ0I7b0JBQ3BCLElBQUl6QixTQUFTa0IsZ0JBQWdCO3dCQUN6Qk8sZ0JBQWdCekIsUUFBUWtCLGNBQWM7b0JBQzFDLE9BQ0s7d0JBQ0QsTUFBTVEsaUJBQWlCSixTQUFTbkIsT0FBTyxDQUFDSyxHQUFHLENBQUM7d0JBQzVDLElBQUlrQixnQkFBZ0I7NEJBQ2hCLE1BQU1DLG1CQUFtQkMsU0FBU0Y7NEJBQ2xDLElBQUksQ0FBQ0csTUFBTUYsbUJBQW1CO2dDQUMxQkYsZ0JBQWdCRTs0QkFDcEI7d0JBQ0o7b0JBQ0o7b0JBQ0EsTUFBTWxDLGdFQUFLQSxDQUFDZ0M7b0JBQ1o7Z0JBQ0osS0FBSztnQkFDTCxLQUFLO2dCQUNMLEtBQUs7b0JBQ0QsT0FBT2I7WUFDZjtRQUNKO0lBQ0o7SUFDQTs7OztLQUlDLEdBQ0QsTUFBTWtCLGNBQWNuQixhQUFhLEVBQUUsRUFBRW9CLEtBQUssRUFBRUMsVUFBVSxFQUFFLEVBQUUsRUFBRWhDLE9BQU8sRUFBRTtRQUNqRSxJQUFJK0IsU0FBUyxRQUFRQSxNQUFNRSxNQUFNLElBQUksR0FBRztZQUNwQyxNQUFNLElBQUlDLE1BQU0sQ0FBQyw4R0FBOEcsQ0FBQztRQUNwSTtRQUNBLE1BQU1DLHdCQUF3Qm5DLFNBQVNvQyxrQkFBa0I7UUFDekQsa0dBQWtHO1FBQ2xHLE1BQU1DLG1CQUFtQkMsS0FBS0MsR0FBRyxDQUFDSix1QkFBdUJKLE1BQU1FLE1BQU07UUFDckUsTUFBTU8sU0FBUyxJQUFJLENBQUN2QyxPQUFPO1FBQzNCLE1BQU13QyxlQUFlVixNQUFNVyxNQUFNO1FBQ2pDLE1BQU1DLGFBQWE7ZUFBSVg7U0FBUTtRQUMvQiw2RkFBNkY7UUFDN0YscUhBQXFIO1FBQ3JILGVBQWVZLGFBQWFDLFFBQVE7WUFDaEMsS0FBSyxJQUFJQyxRQUFRRCxTQUFVO2dCQUN2QixNQUFNRSxVQUFVLE1BQU1QLE9BQU9ULEtBQUssQ0FBQ2xDLE1BQU0sQ0FBQztvQkFBRW1ELE1BQU1GO29CQUFNRyxTQUFTO2dCQUFhLEdBQUdqRDtnQkFDakYyQyxXQUFXTyxJQUFJLENBQUNILFFBQVFqQyxFQUFFO1lBQzlCO1FBQ0o7UUFDQSxtQ0FBbUM7UUFDbkMsTUFBTXFDLFVBQVVDLE1BQU1mLGtCQUFrQmdCLElBQUksQ0FBQ1osY0FBY2EsR0FBRyxDQUFDVjtRQUMvRCx1Q0FBdUM7UUFDdkMsTUFBTWxELGtFQUFtQkEsQ0FBQ3lEO1FBQzFCLE9BQU8sTUFBTSxJQUFJLENBQUN6QyxhQUFhLENBQUNDLGVBQWU7WUFDM0M0QyxVQUFVWjtRQUNkO0lBQ0o7QUFDSixFQUNBLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy92ZWN0b3Itc3RvcmVzL2ZpbGUtYmF0Y2hlcy5tanM/ZjM2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGaWxlIGdlbmVyYXRlZCBmcm9tIG91ciBPcGVuQVBJIHNwZWMgYnkgU3RhaW5sZXNzLiBTZWUgQ09OVFJJQlVUSU5HLm1kIGZvciBkZXRhaWxzLlxuaW1wb3J0IHsgQVBJUmVzb3VyY2UgfSBmcm9tIFwiLi4vLi4vY29yZS9yZXNvdXJjZS5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBzbGVlcCB9IGZyb20gXCIuLi8uLi9pbnRlcm5hbC91dGlscy9zbGVlcC5tanNcIjtcbmltcG9ydCB7IGFsbFNldHRsZWRXaXRoVGhyb3cgfSBmcm9tIFwiLi4vLi4vbGliL1V0aWwubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgRmlsZUJhdGNoZXMgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdmVjdG9yIHN0b3JlIGZpbGUgYmF0Y2guXG4gICAgICovXG4gICAgY3JlYXRlKHZlY3RvclN0b3JlSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC92ZWN0b3Jfc3RvcmVzLyR7dmVjdG9yU3RvcmVJRH0vZmlsZV9iYXRjaGVzYCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlcyBhIHZlY3RvciBzdG9yZSBmaWxlIGJhdGNoLlxuICAgICAqL1xuICAgIHJldHJpZXZlKGJhdGNoSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHZlY3Rvcl9zdG9yZV9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3Rvcl9zdG9yZV9pZH0vZmlsZV9iYXRjaGVzLyR7YmF0Y2hJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYW5jZWwgYSB2ZWN0b3Igc3RvcmUgZmlsZSBiYXRjaC4gVGhpcyBhdHRlbXB0cyB0byBjYW5jZWwgdGhlIHByb2Nlc3Npbmcgb2ZcbiAgICAgKiBmaWxlcyBpbiB0aGlzIGJhdGNoIGFzIHNvb24gYXMgcG9zc2libGUuXG4gICAgICovXG4gICAgY2FuY2VsKGJhdGNoSUQsIHBhcmFtcywgb3B0aW9ucykge1xuICAgICAgICBjb25zdCB7IHZlY3Rvcl9zdG9yZV9pZCB9ID0gcGFyYW1zO1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QocGF0aCBgL3ZlY3Rvcl9zdG9yZXMvJHt2ZWN0b3Jfc3RvcmVfaWR9L2ZpbGVfYmF0Y2hlcy8ke2JhdGNoSUR9L2NhbmNlbGAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIHZlY3RvciBzdG9yZSBiYXRjaCBhbmQgcG9sbCB1bnRpbCBhbGwgZmlsZXMgaGF2ZSBiZWVuIHByb2Nlc3NlZC5cbiAgICAgKi9cbiAgICBhc3luYyBjcmVhdGVBbmRQb2xsKHZlY3RvclN0b3JlSWQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgYmF0Y2ggPSBhd2FpdCB0aGlzLmNyZWF0ZSh2ZWN0b3JTdG9yZUlkLCBib2R5KTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMucG9sbCh2ZWN0b3JTdG9yZUlkLCBiYXRjaC5pZCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIHZlY3RvciBzdG9yZSBmaWxlcyBpbiBhIGJhdGNoLlxuICAgICAqL1xuICAgIGxpc3RGaWxlcyhiYXRjaElELCBwYXJhbXMsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgeyB2ZWN0b3Jfc3RvcmVfaWQsIC4uLnF1ZXJ5IH0gPSBwYXJhbXM7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdChwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3Rvcl9zdG9yZV9pZH0vZmlsZV9iYXRjaGVzLyR7YmF0Y2hJRH0vZmlsZXNgLCAoQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMsIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXYWl0IGZvciB0aGUgZ2l2ZW4gZmlsZSBiYXRjaCB0byBiZSBwcm9jZXNzZWQuXG4gICAgICpcbiAgICAgKiBOb3RlOiB0aGlzIHdpbGwgcmV0dXJuIGV2ZW4gaWYgb25lIG9mIHRoZSBmaWxlcyBmYWlsZWQgdG8gcHJvY2VzcywgeW91IG5lZWQgdG9cbiAgICAgKiBjaGVjayBiYXRjaC5maWxlX2NvdW50cy5mYWlsZWRfY291bnQgdG8gaGFuZGxlIHRoaXMgY2FzZS5cbiAgICAgKi9cbiAgICBhc3luYyBwb2xsKHZlY3RvclN0b3JlSUQsIGJhdGNoSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IGJ1aWxkSGVhZGVycyhbXG4gICAgICAgICAgICBvcHRpb25zPy5oZWFkZXJzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICdYLVN0YWlubGVzcy1Qb2xsLUhlbHBlcic6ICd0cnVlJyxcbiAgICAgICAgICAgICAgICAnWC1TdGFpbmxlc3MtQ3VzdG9tLVBvbGwtSW50ZXJ2YWwnOiBvcHRpb25zPy5wb2xsSW50ZXJ2YWxNcz8udG9TdHJpbmcoKSA/PyB1bmRlZmluZWQsXG4gICAgICAgICAgICB9LFxuICAgICAgICBdKTtcbiAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZGF0YTogYmF0Y2gsIHJlc3BvbnNlIH0gPSBhd2FpdCB0aGlzLnJldHJpZXZlKGJhdGNoSUQsIHsgdmVjdG9yX3N0b3JlX2lkOiB2ZWN0b3JTdG9yZUlEIH0sIHtcbiAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgICAgICB9KS53aXRoUmVzcG9uc2UoKTtcbiAgICAgICAgICAgIHN3aXRjaCAoYmF0Y2guc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnaW5fcHJvZ3Jlc3MnOlxuICAgICAgICAgICAgICAgICAgICBsZXQgc2xlZXBJbnRlcnZhbCA9IDUwMDA7XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcHRpb25zPy5wb2xsSW50ZXJ2YWxNcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2xlZXBJbnRlcnZhbCA9IG9wdGlvbnMucG9sbEludGVydmFsTXM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBoZWFkZXJJbnRlcnZhbCA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdvcGVuYWktcG9sbC1hZnRlci1tcycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGhlYWRlckludGVydmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaGVhZGVySW50ZXJ2YWxNcyA9IHBhcnNlSW50KGhlYWRlckludGVydmFsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzTmFOKGhlYWRlckludGVydmFsTXMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNsZWVwSW50ZXJ2YWwgPSBoZWFkZXJJbnRlcnZhbE1zO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBhd2FpdCBzbGVlcChzbGVlcEludGVydmFsKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSAnZmFpbGVkJzpcbiAgICAgICAgICAgICAgICBjYXNlICdjYW5jZWxsZWQnOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2NvbXBsZXRlZCc6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBiYXRjaDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBVcGxvYWRzIHRoZSBnaXZlbiBmaWxlcyBjb25jdXJyZW50bHkgYW5kIHRoZW4gY3JlYXRlcyBhIHZlY3RvciBzdG9yZSBmaWxlIGJhdGNoLlxuICAgICAqXG4gICAgICogVGhlIGNvbmN1cnJlbmN5IGxpbWl0IGlzIGNvbmZpZ3VyYWJsZSB1c2luZyB0aGUgYG1heENvbmN1cnJlbmN5YCBwYXJhbWV0ZXIuXG4gICAgICovXG4gICAgYXN5bmMgdXBsb2FkQW5kUG9sbCh2ZWN0b3JTdG9yZUlkLCB7IGZpbGVzLCBmaWxlSWRzID0gW10gfSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoZmlsZXMgPT0gbnVsbCB8fCBmaWxlcy5sZW5ndGggPT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyBcXGBmaWxlc1xcYCBwcm92aWRlZCB0byBwcm9jZXNzLiBJZiB5b3UndmUgYWxyZWFkeSB1cGxvYWRlZCBmaWxlcyB5b3Ugc2hvdWxkIHVzZSBcXGAuY3JlYXRlQW5kUG9sbCgpXFxgIGluc3RlYWRgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb25maWd1cmVkQ29uY3VycmVuY3kgPSBvcHRpb25zPy5tYXhDb25jdXJyZW5jeSA/PyA1O1xuICAgICAgICAvLyBXZSBjYXAgdGhlIG51bWJlciBvZiB3b3JrZXJzIGF0IHRoZSBudW1iZXIgb2YgZmlsZXMgKHNvIHdlIGRvbid0IHN0YXJ0IGFueSB1bm5lY2Vzc2FyeSB3b3JrZXJzKVxuICAgICAgICBjb25zdCBjb25jdXJyZW5jeUxpbWl0ID0gTWF0aC5taW4oY29uZmlndXJlZENvbmN1cnJlbmN5LCBmaWxlcy5sZW5ndGgpO1xuICAgICAgICBjb25zdCBjbGllbnQgPSB0aGlzLl9jbGllbnQ7XG4gICAgICAgIGNvbnN0IGZpbGVJdGVyYXRvciA9IGZpbGVzLnZhbHVlcygpO1xuICAgICAgICBjb25zdCBhbGxGaWxlSWRzID0gWy4uLmZpbGVJZHNdO1xuICAgICAgICAvLyBUaGlzIGNvZGUgaXMgYmFzZWQgb24gdGhpcyBkZXNpZ24uIFRoZSBsaWJyYXJpZXMgZG9uJ3QgYWNjb21tb2RhdGUgb3VyIGVudmlyb25tZW50IGxpbWl0cy5cbiAgICAgICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvNDA2Mzk0MzIvd2hhdC1pcy10aGUtYmVzdC13YXktdG8tbGltaXQtY29uY3VycmVuY3ktd2hlbi11c2luZy1lczZzLXByb21pc2UtYWxsXG4gICAgICAgIGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NGaWxlcyhpdGVyYXRvcikge1xuICAgICAgICAgICAgZm9yIChsZXQgaXRlbSBvZiBpdGVyYXRvcikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVPYmogPSBhd2FpdCBjbGllbnQuZmlsZXMuY3JlYXRlKHsgZmlsZTogaXRlbSwgcHVycG9zZTogJ2Fzc2lzdGFudHMnIH0sIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGFsbEZpbGVJZHMucHVzaChmaWxlT2JqLmlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBTdGFydCB3b3JrZXJzIHRvIHByb2Nlc3MgcmVzdWx0c1xuICAgICAgICBjb25zdCB3b3JrZXJzID0gQXJyYXkoY29uY3VycmVuY3lMaW1pdCkuZmlsbChmaWxlSXRlcmF0b3IpLm1hcChwcm9jZXNzRmlsZXMpO1xuICAgICAgICAvLyBXYWl0IGZvciBhbGwgcHJvY2Vzc2luZyB0byBjb21wbGV0ZS5cbiAgICAgICAgYXdhaXQgYWxsU2V0dGxlZFdpdGhUaHJvdyh3b3JrZXJzKTtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuY3JlYXRlQW5kUG9sbCh2ZWN0b3JTdG9yZUlkLCB7XG4gICAgICAgICAgICBmaWxlX2lkczogYWxsRmlsZUlkcyxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmlsZS1iYXRjaGVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJDdXJzb3JQYWdlIiwiYnVpbGRIZWFkZXJzIiwic2xlZXAiLCJhbGxTZXR0bGVkV2l0aFRocm93IiwicGF0aCIsIkZpbGVCYXRjaGVzIiwiY3JlYXRlIiwidmVjdG9yU3RvcmVJRCIsImJvZHkiLCJvcHRpb25zIiwiX2NsaWVudCIsInBvc3QiLCJoZWFkZXJzIiwicmV0cmlldmUiLCJiYXRjaElEIiwicGFyYW1zIiwidmVjdG9yX3N0b3JlX2lkIiwiZ2V0IiwiY2FuY2VsIiwiY3JlYXRlQW5kUG9sbCIsInZlY3RvclN0b3JlSWQiLCJiYXRjaCIsInBvbGwiLCJpZCIsImxpc3RGaWxlcyIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsInBvbGxJbnRlcnZhbE1zIiwidG9TdHJpbmciLCJ1bmRlZmluZWQiLCJkYXRhIiwicmVzcG9uc2UiLCJ3aXRoUmVzcG9uc2UiLCJzdGF0dXMiLCJzbGVlcEludGVydmFsIiwiaGVhZGVySW50ZXJ2YWwiLCJoZWFkZXJJbnRlcnZhbE1zIiwicGFyc2VJbnQiLCJpc05hTiIsInVwbG9hZEFuZFBvbGwiLCJmaWxlcyIsImZpbGVJZHMiLCJsZW5ndGgiLCJFcnJvciIsImNvbmZpZ3VyZWRDb25jdXJyZW5jeSIsIm1heENvbmN1cnJlbmN5IiwiY29uY3VycmVuY3lMaW1pdCIsIk1hdGgiLCJtaW4iLCJjbGllbnQiLCJmaWxlSXRlcmF0b3IiLCJ2YWx1ZXMiLCJhbGxGaWxlSWRzIiwicHJvY2Vzc0ZpbGVzIiwiaXRlcmF0b3IiLCJpdGVtIiwiZmlsZU9iaiIsImZpbGUiLCJwdXJwb3NlIiwicHVzaCIsIndvcmtlcnMiLCJBcnJheSIsImZpbGwiLCJtYXAiLCJmaWxlX2lkcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/file-batches.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/files.mjs":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/files.mjs ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Files: () => (/* binding */ Files)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../internal/utils.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Files extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */ create(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */ retrieve(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */ update(fileID, params, options) {\n        const { vector_store_id, ...body } = params;\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector store files.\n     */ list(vectorStoreID, query = {}, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vectorStoreID}/files`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */ delete(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */ async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */ async poll(vectorStoreID, fileID, options) {\n        const headers = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n            options?.headers,\n            {\n                \"X-Stainless-Poll-Helper\": \"true\",\n                \"X-Stainless-Custom-Poll-Interval\": options?.pollIntervalMs?.toString() ?? undefined\n            }\n        ]);\n        while(true){\n            const fileResponse = await this.retrieve(fileID, {\n                vector_store_id: vectorStoreID\n            }, {\n                ...options,\n                headers\n            }).withResponse();\n            const file = fileResponse.data;\n            switch(file.status){\n                case \"in_progress\":\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    } else {\n                        const headerInterval = fileResponse.response.headers.get(\"openai-poll-after-ms\");\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await (0,_internal_utils_mjs__WEBPACK_IMPORTED_MODULE_3__.sleep)(sleepInterval);\n                    break;\n                case \"failed\":\n                case \"completed\":\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */ async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({\n            file: file,\n            purpose: \"assistants\"\n        }, options);\n        return this.create(vectorStoreId, {\n            file_id: fileInfo.id\n        }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */ async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */ content(fileID, params, options) {\n        const { vector_store_id } = params;\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/vector_stores/${vector_store_id}/files/${fileID}/content`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.Page, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n} //# sourceMappingURL=files.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/files.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/vector-stores.mjs":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/vector-stores.mjs ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStores: () => (/* binding */ VectorStores)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./file-batches.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/file-batches.mjs\");\n/* harmony import */ var _files_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./files.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/files.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\n\n\n\nclass VectorStores extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    constructor(){\n        super(...arguments);\n        this.files = new _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files(this._client);\n        this.fileBatches = new _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */ create(body, options) {\n        return this._client.post(\"/vector_stores\", {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */ retrieve(vectorStoreID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */ update(vectorStoreID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            body,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Returns a list of vector stores.\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/vector_stores\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.CursorPage, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Delete a vector store.\n     */ delete(vectorStoreID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}`, {\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */ search(vectorStoreID, body, options) {\n        return this._client.getAPIList(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_5__.path`/vector_stores/${vectorStoreID}/search`, _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_3__.Page, {\n            body,\n            method: \"post\",\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_4__.buildHeaders)([\n                {\n                    \"OpenAI-Beta\": \"assistants=v2\"\n                },\n                options?.headers\n            ])\n        });\n    }\n}\nVectorStores.Files = _files_mjs__WEBPACK_IMPORTED_MODULE_2__.Files;\nVectorStores.FileBatches = _file_batches_mjs__WEBPACK_IMPORTED_MODULE_1__.FileBatches; //# sourceMappingURL=vector-stores.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZlY3Rvci1zdG9yZXMvdmVjdG9yLXN0b3Jlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHNGQUFzRjtBQUNoQztBQUNEO0FBQ0g7QUFDVjtBQUNIO0FBQ3dCO0FBQ0g7QUFDTDtBQUM5QyxNQUFNUyxxQkFBcUJULDJEQUFXQTtJQUN6Q1UsYUFBYztRQUNWLEtBQUssSUFBSUM7UUFDVCxJQUFJLENBQUNDLEtBQUssR0FBRyxJQUFJVCw2Q0FBYyxDQUFDLElBQUksQ0FBQ1UsT0FBTztRQUM1QyxJQUFJLENBQUNDLFdBQVcsR0FBRyxJQUFJYiwwREFBMEIsQ0FBQyxJQUFJLENBQUNZLE9BQU87SUFDbEU7SUFDQTs7S0FFQyxHQUNERSxPQUFPQyxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ0osT0FBTyxDQUFDSyxJQUFJLENBQUMsa0JBQWtCO1lBQ3ZDRjtZQUNBLEdBQUdDLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RDLFNBQVNDLGFBQWEsRUFBRUosT0FBTyxFQUFFO1FBQzdCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNTLEdBQUcsQ0FBQ2QsMERBQUssQ0FBQyxlQUFlLEVBQUVhLGNBQWMsQ0FBQyxFQUFFO1lBQzVELEdBQUdKLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOztLQUVDLEdBQ0RJLE9BQU9GLGFBQWEsRUFBRUwsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDakMsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ0ssSUFBSSxDQUFDViwwREFBSyxDQUFDLGVBQWUsRUFBRWEsY0FBYyxDQUFDLEVBQUU7WUFDN0RMO1lBQ0EsR0FBR0MsT0FBTztZQUNWRSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1UsU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7O0tBRUMsR0FDREssS0FBS0MsUUFBUSxDQUFDLENBQUMsRUFBRVIsT0FBTyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNhLFVBQVUsQ0FBQyxrQkFBbUJyQiw0REFBVUEsRUFBRztZQUMzRG9CO1lBQ0EsR0FBR1IsT0FBTztZQUNWRSxTQUFTWixtRUFBWUEsQ0FBQztnQkFBQztvQkFBRSxlQUFlO2dCQUFnQjtnQkFBR1UsU0FBU0U7YUFBUTtRQUNoRjtJQUNKO0lBQ0E7O0tBRUMsR0FDRFEsT0FBT04sYUFBYSxFQUFFSixPQUFPLEVBQUU7UUFDM0IsT0FBTyxJQUFJLENBQUNKLE9BQU8sQ0FBQ2MsTUFBTSxDQUFDbkIsMERBQUssQ0FBQyxlQUFlLEVBQUVhLGNBQWMsQ0FBQyxFQUFFO1lBQy9ELEdBQUdKLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtJQUNBOzs7S0FHQyxHQUNEUyxPQUFPUCxhQUFhLEVBQUVMLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ2pDLE9BQU8sSUFBSSxDQUFDSixPQUFPLENBQUNhLFVBQVUsQ0FBQ2xCLDBEQUFLLENBQUMsZUFBZSxFQUFFYSxjQUFjLE9BQU8sQ0FBQyxFQUFHZixzREFBSUEsRUFBRztZQUNsRlU7WUFDQWEsUUFBUTtZQUNSLEdBQUdaLE9BQU87WUFDVkUsU0FBU1osbUVBQVlBLENBQUM7Z0JBQUM7b0JBQUUsZUFBZTtnQkFBZ0I7Z0JBQUdVLFNBQVNFO2FBQVE7UUFDaEY7SUFDSjtBQUNKO0FBQ0FWLGFBQWFMLEtBQUssR0FBR0EsNkNBQUtBO0FBQzFCSyxhQUFhUCxXQUFXLEdBQUdBLDBEQUFXQSxFQUN0QywwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS9yZXNvdXJjZXMvdmVjdG9yLXN0b3Jlcy92ZWN0b3Itc3RvcmVzLm1qcz9jYzNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZpbGUgZ2VuZXJhdGVkIGZyb20gb3VyIE9wZW5BUEkgc3BlYyBieSBTdGFpbmxlc3MuIFNlZSBDT05UUklCVVRJTkcubWQgZm9yIGRldGFpbHMuXG5pbXBvcnQgeyBBUElSZXNvdXJjZSB9IGZyb20gXCIuLi8uLi9jb3JlL3Jlc291cmNlLm1qc1wiO1xuaW1wb3J0ICogYXMgRmlsZUJhdGNoZXNBUEkgZnJvbSBcIi4vZmlsZS1iYXRjaGVzLm1qc1wiO1xuaW1wb3J0IHsgRmlsZUJhdGNoZXMsIH0gZnJvbSBcIi4vZmlsZS1iYXRjaGVzLm1qc1wiO1xuaW1wb3J0ICogYXMgRmlsZXNBUEkgZnJvbSBcIi4vZmlsZXMubWpzXCI7XG5pbXBvcnQgeyBGaWxlcywgfSBmcm9tIFwiLi9maWxlcy5tanNcIjtcbmltcG9ydCB7IEN1cnNvclBhZ2UsIFBhZ2UgfSBmcm9tIFwiLi4vLi4vY29yZS9wYWdpbmF0aW9uLm1qc1wiO1xuaW1wb3J0IHsgYnVpbGRIZWFkZXJzIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL2hlYWRlcnMubWpzXCI7XG5pbXBvcnQgeyBwYXRoIH0gZnJvbSBcIi4uLy4uL2ludGVybmFsL3V0aWxzL3BhdGgubWpzXCI7XG5leHBvcnQgY2xhc3MgVmVjdG9yU3RvcmVzIGV4dGVuZHMgQVBJUmVzb3VyY2Uge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICB0aGlzLmZpbGVzID0gbmV3IEZpbGVzQVBJLkZpbGVzKHRoaXMuX2NsaWVudCk7XG4gICAgICAgIHRoaXMuZmlsZUJhdGNoZXMgPSBuZXcgRmlsZUJhdGNoZXNBUEkuRmlsZUJhdGNoZXModGhpcy5fY2xpZW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdmVjdG9yIHN0b3JlLlxuICAgICAqL1xuICAgIGNyZWF0ZShib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdCgnL3ZlY3Rvcl9zdG9yZXMnLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmV0cmlldmVzIGEgdmVjdG9yIHN0b3JlLlxuICAgICAqL1xuICAgIHJldHJpZXZlKHZlY3RvclN0b3JlSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXQocGF0aCBgL3ZlY3Rvcl9zdG9yZXMvJHt2ZWN0b3JTdG9yZUlEfWAsIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIE1vZGlmaWVzIGEgdmVjdG9yIHN0b3JlLlxuICAgICAqL1xuICAgIHVwZGF0ZSh2ZWN0b3JTdG9yZUlELCBib2R5LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQucG9zdChwYXRoIGAvdmVjdG9yX3N0b3Jlcy8ke3ZlY3RvclN0b3JlSUR9YCwge1xuICAgICAgICAgICAgYm9keSxcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBoZWFkZXJzOiBidWlsZEhlYWRlcnMoW3sgJ09wZW5BSS1CZXRhJzogJ2Fzc2lzdGFudHM9djInIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBsaXN0IG9mIHZlY3RvciBzdG9yZXMuXG4gICAgICovXG4gICAgbGlzdChxdWVyeSA9IHt9LCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0QVBJTGlzdCgnL3ZlY3Rvcl9zdG9yZXMnLCAoQ3Vyc29yUGFnZSksIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyAnT3BlbkFJLUJldGEnOiAnYXNzaXN0YW50cz12MicgfSwgb3B0aW9ucz8uaGVhZGVyc10pLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogRGVsZXRlIGEgdmVjdG9yIHN0b3JlLlxuICAgICAqL1xuICAgIGRlbGV0ZSh2ZWN0b3JTdG9yZUlELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZGVsZXRlKHBhdGggYC92ZWN0b3Jfc3RvcmVzLyR7dmVjdG9yU3RvcmVJRH1gLCB7XG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBTZWFyY2ggYSB2ZWN0b3Igc3RvcmUgZm9yIHJlbGV2YW50IGNodW5rcyBiYXNlZCBvbiBhIHF1ZXJ5IGFuZCBmaWxlIGF0dHJpYnV0ZXNcbiAgICAgKiBmaWx0ZXIuXG4gICAgICovXG4gICAgc2VhcmNoKHZlY3RvclN0b3JlSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5nZXRBUElMaXN0KHBhdGggYC92ZWN0b3Jfc3RvcmVzLyR7dmVjdG9yU3RvcmVJRH0vc2VhcmNoYCwgKFBhZ2UpLCB7XG4gICAgICAgICAgICBib2R5LFxuICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgaGVhZGVyczogYnVpbGRIZWFkZXJzKFt7ICdPcGVuQUktQmV0YSc6ICdhc3Npc3RhbnRzPXYyJyB9LCBvcHRpb25zPy5oZWFkZXJzXSksXG4gICAgICAgIH0pO1xuICAgIH1cbn1cblZlY3RvclN0b3Jlcy5GaWxlcyA9IEZpbGVzO1xuVmVjdG9yU3RvcmVzLkZpbGVCYXRjaGVzID0gRmlsZUJhdGNoZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZWN0b3Itc3RvcmVzLm1qcy5tYXAiXSwibmFtZXMiOlsiQVBJUmVzb3VyY2UiLCJGaWxlQmF0Y2hlc0FQSSIsIkZpbGVCYXRjaGVzIiwiRmlsZXNBUEkiLCJGaWxlcyIsIkN1cnNvclBhZ2UiLCJQYWdlIiwiYnVpbGRIZWFkZXJzIiwicGF0aCIsIlZlY3RvclN0b3JlcyIsImNvbnN0cnVjdG9yIiwiYXJndW1lbnRzIiwiZmlsZXMiLCJfY2xpZW50IiwiZmlsZUJhdGNoZXMiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsInBvc3QiLCJoZWFkZXJzIiwicmV0cmlldmUiLCJ2ZWN0b3JTdG9yZUlEIiwiZ2V0IiwidXBkYXRlIiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsInNlYXJjaCIsIm1ldGhvZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/vector-stores/vector-stores.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/videos.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/videos.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Videos: () => (/* binding */ Videos)\n/* harmony export */ });\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/pagination.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/pagination.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n/* harmony import */ var _internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/uploads.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/uploads.mjs\");\n/* harmony import */ var _internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../internal/utils/path.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/utils/path.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\n\n\n\n\nclass Videos extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_0__.APIResource {\n    /**\n     * Create a video\n     */ create(body, options) {\n        return this._client.post(\"/videos\", (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeMultipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n    /**\n     * Retrieve a video\n     */ retrieve(videoID, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/videos/${videoID}`, options);\n    }\n    /**\n     * List videos\n     */ list(query = {}, options) {\n        return this._client.getAPIList(\"/videos\", _core_pagination_mjs__WEBPACK_IMPORTED_MODULE_1__.ConversationCursorPage, {\n            query,\n            ...options\n        });\n    }\n    /**\n     * Delete a video\n     */ delete(videoID, options) {\n        return this._client.delete(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/videos/${videoID}`, options);\n    }\n    /**\n     * Download video content\n     */ downloadContent(videoID, query = {}, options) {\n        return this._client.get(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/videos/${videoID}/content`, {\n            query,\n            ...options,\n            headers: (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_2__.buildHeaders)([\n                {\n                    Accept: \"application/binary\"\n                },\n                options?.headers\n            ]),\n            __binaryResponse: true\n        });\n    }\n    /**\n     * Create a video remix\n     */ remix(videoID, body, options) {\n        return this._client.post(_internal_utils_path_mjs__WEBPACK_IMPORTED_MODULE_4__.path`/videos/${videoID}/remix`, (0,_internal_uploads_mjs__WEBPACK_IMPORTED_MODULE_3__.maybeMultipartFormRequestOptions)({\n            body,\n            ...options\n        }, this._client));\n    }\n} //# sourceMappingURL=videos.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvcmVzb3VyY2VzL3ZpZGVvcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsc0ZBQXNGO0FBQ25DO0FBQ2E7QUFDVDtBQUNvQjtBQUN6QjtBQUMzQyxNQUFNSyxlQUFlTCwyREFBV0E7SUFDbkM7O0tBRUMsR0FDRE0sT0FBT0MsSUFBSSxFQUFFQyxPQUFPLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLFdBQVdQLHVGQUFnQ0EsQ0FBQztZQUFFSTtZQUFNLEdBQUdDLE9BQU87UUFBQyxHQUFHLElBQUksQ0FBQ0MsT0FBTztJQUMzRztJQUNBOztLQUVDLEdBQ0RFLFNBQVNDLE9BQU8sRUFBRUosT0FBTyxFQUFFO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNJLEdBQUcsQ0FBQ1QsMERBQUssQ0FBQyxRQUFRLEVBQUVRLFFBQVEsQ0FBQyxFQUFFSjtJQUN2RDtJQUNBOztLQUVDLEdBQ0RNLEtBQUtDLFFBQVEsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sRUFBRTtRQUN0QixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDTyxVQUFVLENBQUMsV0FBWWYsd0VBQXNCQSxFQUFHO1lBQUVjO1lBQU8sR0FBR1AsT0FBTztRQUFDO0lBQzVGO0lBQ0E7O0tBRUMsR0FDRFMsT0FBT0wsT0FBTyxFQUFFSixPQUFPLEVBQUU7UUFDckIsT0FBTyxJQUFJLENBQUNDLE9BQU8sQ0FBQ1EsTUFBTSxDQUFDYiwwREFBSyxDQUFDLFFBQVEsRUFBRVEsUUFBUSxDQUFDLEVBQUVKO0lBQzFEO0lBQ0E7O0tBRUMsR0FDRFUsZ0JBQWdCTixPQUFPLEVBQUVHLFFBQVEsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sRUFBRTtRQUMxQyxPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDSSxHQUFHLENBQUNULDBEQUFLLENBQUMsUUFBUSxFQUFFUSxRQUFRLFFBQVEsQ0FBQyxFQUFFO1lBQ3ZERztZQUNBLEdBQUdQLE9BQU87WUFDVlcsU0FBU2pCLG1FQUFZQSxDQUFDO2dCQUFDO29CQUFFa0IsUUFBUTtnQkFBcUI7Z0JBQUdaLFNBQVNXO2FBQVE7WUFDMUVFLGtCQUFrQjtRQUN0QjtJQUNKO0lBQ0E7O0tBRUMsR0FDREMsTUFBTVYsT0FBTyxFQUFFTCxJQUFJLEVBQUVDLE9BQU8sRUFBRTtRQUMxQixPQUFPLElBQUksQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNOLDBEQUFLLENBQUMsUUFBUSxFQUFFUSxRQUFRLE1BQU0sQ0FBQyxFQUFFVCx1RkFBZ0NBLENBQUM7WUFBRUk7WUFBTSxHQUFHQyxPQUFPO1FBQUMsR0FBRyxJQUFJLENBQUNDLE9BQU87SUFDakk7QUFDSixFQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2RyaXZlLWxhYnMtb3JjaGVzdHJhdG9yLy4vbm9kZV9tb2R1bGVzLy5wbnBtL29wZW5haUA2LjYuMF96b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvb3BlbmFpL3Jlc291cmNlcy92aWRlb3MubWpzP2MzYzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRmlsZSBnZW5lcmF0ZWQgZnJvbSBvdXIgT3BlbkFQSSBzcGVjIGJ5IFN0YWlubGVzcy4gU2VlIENPTlRSSUJVVElORy5tZCBmb3IgZGV0YWlscy5cbmltcG9ydCB7IEFQSVJlc291cmNlIH0gZnJvbSBcIi4uL2NvcmUvcmVzb3VyY2UubWpzXCI7XG5pbXBvcnQgeyBDb252ZXJzYXRpb25DdXJzb3JQYWdlIH0gZnJvbSBcIi4uL2NvcmUvcGFnaW5hdGlvbi5tanNcIjtcbmltcG9ydCB7IGJ1aWxkSGVhZGVycyB9IGZyb20gXCIuLi9pbnRlcm5hbC9oZWFkZXJzLm1qc1wiO1xuaW1wb3J0IHsgbWF5YmVNdWx0aXBhcnRGb3JtUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXBsb2Fkcy5tanNcIjtcbmltcG9ydCB7IHBhdGggfSBmcm9tIFwiLi4vaW50ZXJuYWwvdXRpbHMvcGF0aC5tanNcIjtcbmV4cG9ydCBjbGFzcyBWaWRlb3MgZXh0ZW5kcyBBUElSZXNvdXJjZSB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgdmlkZW9cbiAgICAgKi9cbiAgICBjcmVhdGUoYm9keSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LnBvc3QoJy92aWRlb3MnLCBtYXliZU11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyh7IGJvZHksIC4uLm9wdGlvbnMgfSwgdGhpcy5fY2xpZW50KSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHJpZXZlIGEgdmlkZW9cbiAgICAgKi9cbiAgICByZXRyaWV2ZSh2aWRlb0lELCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbGllbnQuZ2V0KHBhdGggYC92aWRlb3MvJHt2aWRlb0lEfWAsIG9wdGlvbnMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBMaXN0IHZpZGVvc1xuICAgICAqL1xuICAgIGxpc3QocXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldEFQSUxpc3QoJy92aWRlb3MnLCAoQ29udmVyc2F0aW9uQ3Vyc29yUGFnZSksIHsgcXVlcnksIC4uLm9wdGlvbnMgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERlbGV0ZSBhIHZpZGVvXG4gICAgICovXG4gICAgZGVsZXRlKHZpZGVvSUQsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5kZWxldGUocGF0aCBgL3ZpZGVvcy8ke3ZpZGVvSUR9YCwgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIERvd25sb2FkIHZpZGVvIGNvbnRlbnRcbiAgICAgKi9cbiAgICBkb3dubG9hZENvbnRlbnQodmlkZW9JRCwgcXVlcnkgPSB7fSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdGhpcy5fY2xpZW50LmdldChwYXRoIGAvdmlkZW9zLyR7dmlkZW9JRH0vY29udGVudGAsIHtcbiAgICAgICAgICAgIHF1ZXJ5LFxuICAgICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICAgIGhlYWRlcnM6IGJ1aWxkSGVhZGVycyhbeyBBY2NlcHQ6ICdhcHBsaWNhdGlvbi9iaW5hcnknIH0sIG9wdGlvbnM/LmhlYWRlcnNdKSxcbiAgICAgICAgICAgIF9fYmluYXJ5UmVzcG9uc2U6IHRydWUsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSB2aWRlbyByZW1peFxuICAgICAqL1xuICAgIHJlbWl4KHZpZGVvSUQsIGJvZHksIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2NsaWVudC5wb3N0KHBhdGggYC92aWRlb3MvJHt2aWRlb0lEfS9yZW1peGAsIG1heWJlTXVsdGlwYXJ0Rm9ybVJlcXVlc3RPcHRpb25zKHsgYm9keSwgLi4ub3B0aW9ucyB9LCB0aGlzLl9jbGllbnQpKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12aWRlb3MubWpzLm1hcCJdLCJuYW1lcyI6WyJBUElSZXNvdXJjZSIsIkNvbnZlcnNhdGlvbkN1cnNvclBhZ2UiLCJidWlsZEhlYWRlcnMiLCJtYXliZU11bHRpcGFydEZvcm1SZXF1ZXN0T3B0aW9ucyIsInBhdGgiLCJWaWRlb3MiLCJjcmVhdGUiLCJib2R5Iiwib3B0aW9ucyIsIl9jbGllbnQiLCJwb3N0IiwicmV0cmlldmUiLCJ2aWRlb0lEIiwiZ2V0IiwibGlzdCIsInF1ZXJ5IiwiZ2V0QVBJTGlzdCIsImRlbGV0ZSIsImRvd25sb2FkQ29udGVudCIsImhlYWRlcnMiLCJBY2NlcHQiLCJfX2JpbmFyeVJlc3BvbnNlIiwicmVtaXgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/videos.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/webhooks.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/webhooks.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Webhooks: () => (/* binding */ Webhooks)\n/* harmony export */ });\n/* harmony import */ var _internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../internal/tslib.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/tslib.mjs\");\n/* harmony import */ var _error_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/error.mjs\");\n/* harmony import */ var _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/resource.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/resource.mjs\");\n/* harmony import */ var _internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../internal/headers.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/internal/headers.mjs\");\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _Webhooks_instances, _Webhooks_validateSecret, _Webhooks_getRequiredHeader;\n\n\n\n\nclass Webhooks extends _core_resource_mjs__WEBPACK_IMPORTED_MODULE_2__.APIResource {\n    constructor(){\n        super(...arguments);\n        _Webhooks_instances.add(this);\n    }\n    /**\n     * Validates that the given payload was sent by OpenAI and parses the payload.\n     */ async unwrap(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        await this.verifySignature(payload, headers, secret, tolerance);\n        return JSON.parse(payload);\n    }\n    /**\n     * Validates whether or not the webhook payload was sent by OpenAI.\n     *\n     * An error will be raised if the webhook payload was not sent by OpenAI.\n     *\n     * @param payload - The webhook payload\n     * @param headers - The webhook headers\n     * @param secret - The webhook secret (optional, will use client secret if not provided)\n     * @param tolerance - Maximum age of the webhook in seconds (default: 300 = 5 minutes)\n     */ async verifySignature(payload, headers, secret = this._client.webhookSecret, tolerance = 300) {\n        if (typeof crypto === \"undefined\" || typeof crypto.subtle.importKey !== \"function\" || typeof crypto.subtle.verify !== \"function\") {\n            throw new Error(\"Webhook signature verification is only supported when the `crypto` global is defined\");\n        }\n        (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_validateSecret).call(this, secret);\n        const headersObj = (0,_internal_headers_mjs__WEBPACK_IMPORTED_MODULE_3__.buildHeaders)([\n            headers\n        ]).values;\n        const signatureHeader = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-signature\");\n        const timestamp = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-timestamp\");\n        const webhookId = (0,_internal_tslib_mjs__WEBPACK_IMPORTED_MODULE_0__.__classPrivateFieldGet)(this, _Webhooks_instances, \"m\", _Webhooks_getRequiredHeader).call(this, headersObj, \"webhook-id\");\n        // Validate timestamp to prevent replay attacks\n        const timestampSeconds = parseInt(timestamp, 10);\n        if (isNaN(timestampSeconds)) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Invalid webhook timestamp format\");\n        }\n        const nowSeconds = Math.floor(Date.now() / 1000);\n        if (nowSeconds - timestampSeconds > tolerance) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Webhook timestamp is too old\");\n        }\n        if (timestampSeconds > nowSeconds + tolerance) {\n            throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"Webhook timestamp is too new\");\n        }\n        // Extract signatures from v1,<base64> format\n        // The signature header can have multiple values, separated by spaces.\n        // Each value is in the format v1,<base64>. We should accept if any match.\n        const signatures = signatureHeader.split(\" \").map((part)=>part.startsWith(\"v1,\") ? part.substring(3) : part);\n        // Decode the secret if it starts with whsec_\n        const decodedSecret = secret.startsWith(\"whsec_\") ? Buffer.from(secret.replace(\"whsec_\", \"\"), \"base64\") : Buffer.from(secret, \"utf-8\");\n        // Create the signed payload: {webhook_id}.{timestamp}.{payload}\n        const signedPayload = webhookId ? `${webhookId}.${timestamp}.${payload}` : `${timestamp}.${payload}`;\n        // Import the secret as a cryptographic key for HMAC\n        const key = await crypto.subtle.importKey(\"raw\", decodedSecret, {\n            name: \"HMAC\",\n            hash: \"SHA-256\"\n        }, false, [\n            \"verify\"\n        ]);\n        // Check if any signature matches using timing-safe WebCrypto verify\n        for (const signature of signatures){\n            try {\n                const signatureBytes = Buffer.from(signature, \"base64\");\n                const isValid = await crypto.subtle.verify(\"HMAC\", key, signatureBytes, new TextEncoder().encode(signedPayload));\n                if (isValid) {\n                    return; // Valid signature found\n                }\n            } catch  {\n                continue;\n            }\n        }\n        throw new _error_mjs__WEBPACK_IMPORTED_MODULE_1__.InvalidWebhookSignatureError(\"The given webhook signature does not match the expected signature\");\n    }\n}\n_Webhooks_instances = new WeakSet(), _Webhooks_validateSecret = function _Webhooks_validateSecret(secret) {\n    if (typeof secret !== \"string\" || secret.length === 0) {\n        throw new Error(`The webhook secret must either be set using the env var, OPENAI_WEBHOOK_SECRET, on the client class, OpenAI({ webhookSecret: '123' }), or passed to this function`);\n    }\n}, _Webhooks_getRequiredHeader = function _Webhooks_getRequiredHeader(headers, name) {\n    if (!headers) {\n        throw new Error(`Headers are required`);\n    }\n    const value = headers.get(name);\n    if (value === null || value === undefined) {\n        throw new Error(`Missing required header: ${name}`);\n    }\n    return value;\n}; //# sourceMappingURL=webhooks.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/resources/webhooks.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/streaming.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/streaming.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Stream: () => (/* reexport safe */ _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__.Stream),\n/* harmony export */   _iterSSEMessages: () => (/* reexport safe */ _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__._iterSSEMessages)\n/* harmony export */ });\n/* harmony import */ var _core_streaming_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/streaming.mjs */ \"(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/core/streaming.mjs\");\n //# sourceMappingURL=streaming.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvc3RyZWFtaW5nLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUMsQ0FDckMsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZHJpdmUtbGFicy1vcmNoZXN0cmF0b3IvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvc3RyZWFtaW5nLm1qcz9jM2JjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvcmUvc3RyZWFtaW5nLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtaW5nLm1qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/streaming.mjs\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/version.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/version.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = \"6.6.0\"; // x-release-please-version\n //# sourceMappingURL=version.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vb3BlbmFpQDYuNi4wX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9vcGVuYWkvdmVyc2lvbi5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLFVBQVUsUUFBUSxDQUFDLDJCQUEyQjtDQUMzRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcml2ZS1sYWJzLW9yY2hlc3RyYXRvci8uL25vZGVfbW9kdWxlcy8ucG5wbS9vcGVuYWlANi42LjBfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL29wZW5haS92ZXJzaW9uLm1qcz8zOWM4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzYuNi4wJzsgLy8geC1yZWxlYXNlLXBsZWFzZS12ZXJzaW9uXG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLm1qcy5tYXAiXSwibmFtZXMiOlsiVkVSU0lPTiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/openai@6.6.0_zod@3.25.76/node_modules/openai/version.mjs\n");

/***/ })

};
;